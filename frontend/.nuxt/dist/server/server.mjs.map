{"version":3,"file":"server.mjs","sources":["../../../virtual:nuxt:%2FUsers%2Fmac%2FDesktop%2FAL-Tech%2FQ-A-Project%2Ffrontend%2F.nuxt%2Ffetch.mjs","../../../virtual:nuxt:%2FUsers%2Fmac%2FDesktop%2FAL-Tech%2FQ-A-Project%2Ffrontend%2F.nuxt%2Fglobal-polyfills.mjs","../../../virtual:nuxt:%2FUsers%2Fmac%2FDesktop%2FAL-Tech%2FQ-A-Project%2Ffrontend%2F.nuxt%2Fnuxt.config.mjs","../../../node_modules/nuxt/dist/app/nuxt.js","../../../node_modules/nuxt/dist/app/components/injections.js","../../../node_modules/nuxt/dist/app/utils.js","../../../node_modules/nuxt/dist/app/composables/router.js","../../../node_modules/nuxt/dist/app/composables/error.js","../../../node_modules/nuxt/dist/head/runtime/plugins/unhead.js","../../../node_modules/nuxt/dist/app/composables/manifest.js","../../../node_modules/nuxt/dist/app/middleware/manifest-route-rule.js","../../../virtual:nuxt:%2FUsers%2Fmac%2FDesktop%2FAL-Tech%2FQ-A-Project%2Ffrontend%2F.nuxt%2Fmiddleware.mjs","../../../node_modules/nuxt/dist/app/plugins/router.js","../../../node_modules/nuxt/dist/head/runtime/composables/v3.js","../../../node_modules/nuxt/dist/app/composables/payload.js","../../../node_modules/nuxt/dist/app/plugins/revive-payload.server.js","../../../node_modules/nuxt/dist/app/compat/capi.js","../../../node_modules/pinia/dist/pinia.mjs","../../../node_modules/nuxt/dist/app/components/server-placeholder.js","../../../node_modules/nuxt/dist/app/components/client-only.js","../../../node_modules/nuxt/dist/app/composables/asyncData.js","../../../virtual:nuxt:%2FUsers%2Fmac%2FDesktop%2FAL-Tech%2FQ-A-Project%2Ffrontend%2F.nuxt%2Fapp.config.mjs","../../../node_modules/nuxt/dist/app/config.js","../../../node_modules/@pinia/nuxt/dist/runtime/plugin.vue3.js","../../../node_modules/@nuxt/icon/dist/runtime/components/index.js?nuxt_component=async&nuxt_component_name=Icon&nuxt_component_export=default","../../../virtual:nuxt:%2FUsers%2Fmac%2FDesktop%2FAL-Tech%2FQ-A-Project%2Ffrontend%2F.nuxt%2Fcomponents.plugin.mjs","../../../node_modules/@nuxt/icon/dist/runtime/plugin.js","../../../virtual:nuxt:%2FUsers%2Fmac%2FDesktop%2FAL-Tech%2FQ-A-Project%2Ffrontend%2F.nuxt%2Fplugins.server.mjs","../../../node_modules/@nuxt/icon/dist/runtime/components/shared.js","../../../node_modules/@nuxt/icon/dist/runtime/components/css.js","../../../node_modules/@nuxt/icon/dist/runtime/components/svg.js","../../../node_modules/@nuxt/icon/dist/runtime/components/index.js","../../../types/index.ts","../../../composables/useApi.ts","../../../stores/auth.ts","../../../stores/questions.ts","../../../components/ExpertReviewPanel.vue","../../../components/AdminPanel.vue","../../../app.vue","../../../node_modules/nuxt/dist/app/components/nuxt-error-page.vue","../../../node_modules/nuxt/dist/app/components/nuxt-root.vue","../../../node_modules/nuxt/dist/app/entry.js"],"sourcesContent":["import { $fetch } from 'ofetch'\nimport { baseURL } from '#internal/nuxt/paths'\nif (!globalThis.$fetch) {\n  globalThis.$fetch = $fetch.create({\n    baseURL: baseURL()\n  })\n}","\nif (!(\"global\" in globalThis)) {\n  globalThis.global = globalThis;\n}","export const appHead = {\"meta\":[{\"charset\":\"utf-8\"},{\"name\":\"viewport\",\"content\":\"width=device-width, initial-scale=1\"},{\"name\":\"description\",\"content\":\"AI-Powered Q&A System for AL-Tech Academy\"}],\"link\":[{\"rel\":\"icon\",\"type\":\"image/x-icon\",\"href\":\"/favicon.ico\"}],\"style\":[],\"script\":[],\"noscript\":[],\"title\":\"AL-Tech Academy Q&A System\"}\n\nexport const appBaseURL = \"/\"\n\nexport const appBuildAssetsDir = \"/_nuxt/\"\n\nexport const appCdnURL = \"\"\n\nexport const appLayoutTransition = false\n\nexport const appPageTransition = false\n\nexport const appViewTransition = false\n\nexport const appKeepalive = false\n\nexport const appRootId = \"__nuxt\"\n\nexport const appRootTag = \"div\"\n\nexport const appRootAttrs = {\"id\":\"__nuxt\"}\n\nexport const appTeleportTag = \"div\"\n\nexport const appTeleportId = \"teleports\"\n\nexport const appTeleportAttrs = {\"id\":\"teleports\"}\n\nexport const appSpaLoaderTag = \"div\"\n\nexport const appSpaLoaderAttrs = {\"id\":\"__nuxt-loader\"}\n\nexport const renderJsonPayloads = true\n\nexport const componentIslands = false\n\nexport const payloadExtraction = true\n\nexport const cookieStore = true\n\nexport const appManifest = true\n\nexport const remoteComponentIslands = false\n\nexport const selectiveClient = false\n\nexport const devPagesDir = null\n\nexport const devRootDir = null\n\nexport const devLogs = false\n\nexport const nuxtLinkDefaults = {\"componentName\":\"NuxtLink\",\"prefetch\":true,\"prefetchOn\":{\"visibility\":true}}\n\nexport const asyncDataDefaults = {\"value\":null,\"errorValue\":null,\"deep\":true}\n\nexport const resetAsyncDataToUndefined = true\n\nexport const nuxtDefaultErrorValue = null\n\nexport const fetchDefaults = {}\n\nexport const vueAppRootContainer = '#__nuxt'\n\nexport const viewTransition = false\n\nexport const appId = \"nuxt-app\"\n\nexport const outdatedBuildInterval = 3600000\n\nexport const multiApp = false\n\nexport const chunkErrorEvent = \"vite:preloadError\"\n\nexport const crawlLinks = false\n\nexport const spaLoadingTemplateOutside = false\n\nexport const purgeCachedData = true\n\nexport const granularCachedData = false\n\nexport const pendingWhenIdle = true\n\nexport const alwaysRunFetchOnKeyChange = true","import { effectScope, getCurrentInstance, getCurrentScope, hasInjectionContext, reactive, shallowReactive } from \"vue\";\nimport { createHooks } from \"hookable\";\nimport { getContext } from \"unctx\";\nimport { appId, chunkErrorEvent, multiApp } from \"#build/nuxt.config.mjs\";\nexport function getNuxtAppCtx(id = appId || \"nuxt-app\") {\n  return getContext(id, {\n    asyncContext: !!__NUXT_ASYNC_CONTEXT__ && import.meta.server\n  });\n}\nexport const NuxtPluginIndicator = \"__nuxt_plugin\";\nexport function createNuxtApp(options) {\n  let hydratingCount = 0;\n  const nuxtApp = {\n    _id: options.id || appId || \"nuxt-app\",\n    _scope: effectScope(),\n    provide: void 0,\n    globalName: \"nuxt\",\n    versions: {\n      get nuxt() {\n        return __NUXT_VERSION__;\n      },\n      get vue() {\n        return nuxtApp.vueApp.version;\n      }\n    },\n    payload: shallowReactive({\n      ...options.ssrContext?.payload || {},\n      data: shallowReactive({}),\n      state: reactive({}),\n      once: /* @__PURE__ */ new Set(),\n      _errors: shallowReactive({})\n    }),\n    static: {\n      data: {}\n    },\n    runWithContext(fn) {\n      if (nuxtApp._scope.active && !getCurrentScope()) {\n        return nuxtApp._scope.run(() => callWithNuxt(nuxtApp, fn));\n      }\n      return callWithNuxt(nuxtApp, fn);\n    },\n    isHydrating: import.meta.client,\n    deferHydration() {\n      if (!nuxtApp.isHydrating) {\n        return () => {\n        };\n      }\n      hydratingCount++;\n      let called = false;\n      return () => {\n        if (called) {\n          return;\n        }\n        called = true;\n        hydratingCount--;\n        if (hydratingCount === 0) {\n          nuxtApp.isHydrating = false;\n          return nuxtApp.callHook(\"app:suspense:resolve\");\n        }\n      };\n    },\n    _asyncDataPromises: {},\n    _asyncData: shallowReactive({}),\n    _payloadRevivers: {},\n    ...options\n  };\n  if (import.meta.server) {\n    nuxtApp.payload.serverRendered = true;\n  }\n  if (import.meta.server && nuxtApp.ssrContext) {\n    nuxtApp.payload.path = nuxtApp.ssrContext.url;\n    nuxtApp.ssrContext.nuxt = nuxtApp;\n    nuxtApp.ssrContext.payload = nuxtApp.payload;\n    nuxtApp.ssrContext.config = {\n      public: nuxtApp.ssrContext.runtimeConfig.public,\n      app: nuxtApp.ssrContext.runtimeConfig.app\n    };\n  }\n  if (import.meta.client) {\n    const __NUXT__ = multiApp ? window.__NUXT__?.[nuxtApp._id] : window.__NUXT__;\n    if (__NUXT__) {\n      for (const key in __NUXT__) {\n        switch (key) {\n          case \"data\":\n          case \"state\":\n          case \"_errors\":\n            Object.assign(nuxtApp.payload[key], __NUXT__[key]);\n            break;\n          default:\n            nuxtApp.payload[key] = __NUXT__[key];\n        }\n      }\n    }\n  }\n  nuxtApp.hooks = createHooks();\n  nuxtApp.hook = nuxtApp.hooks.hook;\n  if (import.meta.server) {\n    const contextCaller = async function(hooks, args) {\n      for (const hook of hooks) {\n        await nuxtApp.runWithContext(() => hook(...args));\n      }\n    };\n    nuxtApp.hooks.callHook = (name, ...args) => nuxtApp.hooks.callHookWith(contextCaller, name, ...args);\n  }\n  nuxtApp.callHook = nuxtApp.hooks.callHook;\n  nuxtApp.provide = (name, value) => {\n    const $name = \"$\" + name;\n    defineGetter(nuxtApp, $name, value);\n    defineGetter(nuxtApp.vueApp.config.globalProperties, $name, value);\n  };\n  defineGetter(nuxtApp.vueApp, \"$nuxt\", nuxtApp);\n  defineGetter(nuxtApp.vueApp.config.globalProperties, \"$nuxt\", nuxtApp);\n  if (import.meta.client) {\n    if (chunkErrorEvent) {\n      window.addEventListener(chunkErrorEvent, (event) => {\n        nuxtApp.callHook(\"app:chunkError\", { error: event.payload });\n        if (event.payload.message.includes(\"Unable to preload CSS\")) {\n          event.preventDefault();\n        }\n      });\n    }\n    window.useNuxtApp ||= useNuxtApp;\n    const unreg = nuxtApp.hook(\"app:error\", (...args) => {\n      console.error(\"[nuxt] error caught during app initialization\", ...args);\n    });\n    nuxtApp.hook(\"app:mounted\", unreg);\n  }\n  const runtimeConfig = import.meta.server ? options.ssrContext.runtimeConfig : nuxtApp.payload.config;\n  nuxtApp.provide(\"config\", import.meta.client && import.meta.dev ? wrappedConfig(runtimeConfig) : runtimeConfig);\n  return nuxtApp;\n}\nexport function registerPluginHooks(nuxtApp, plugin) {\n  if (plugin.hooks) {\n    nuxtApp.hooks.addHooks(plugin.hooks);\n  }\n}\nexport async function applyPlugin(nuxtApp, plugin) {\n  if (typeof plugin === \"function\") {\n    const { provide } = await nuxtApp.runWithContext(() => plugin(nuxtApp)) || {};\n    if (provide && typeof provide === \"object\") {\n      for (const key in provide) {\n        nuxtApp.provide(key, provide[key]);\n      }\n    }\n  }\n}\nexport async function applyPlugins(nuxtApp, plugins) {\n  const resolvedPlugins = /* @__PURE__ */ new Set();\n  const unresolvedPlugins = [];\n  const parallels = [];\n  let error = void 0;\n  let promiseDepth = 0;\n  async function executePlugin(plugin) {\n    const unresolvedPluginsForThisPlugin = plugin.dependsOn?.filter((name) => plugins.some((p) => p._name === name) && !resolvedPlugins.has(name)) ?? [];\n    if (unresolvedPluginsForThisPlugin.length > 0) {\n      unresolvedPlugins.push([new Set(unresolvedPluginsForThisPlugin), plugin]);\n    } else {\n      const promise = applyPlugin(nuxtApp, plugin).then(async () => {\n        if (plugin._name) {\n          resolvedPlugins.add(plugin._name);\n          await Promise.all(unresolvedPlugins.map(async ([dependsOn, unexecutedPlugin]) => {\n            if (dependsOn.has(plugin._name)) {\n              dependsOn.delete(plugin._name);\n              if (dependsOn.size === 0) {\n                promiseDepth++;\n                await executePlugin(unexecutedPlugin);\n              }\n            }\n          }));\n        }\n      }).catch((e) => {\n        if (!plugin.parallel && !nuxtApp.payload.error) {\n          throw e;\n        }\n        error ||= e;\n      });\n      if (plugin.parallel) {\n        parallels.push(promise);\n      } else {\n        await promise;\n      }\n    }\n  }\n  for (const plugin of plugins) {\n    if (import.meta.server && nuxtApp.ssrContext?.islandContext && plugin.env?.islands === false) {\n      continue;\n    }\n    registerPluginHooks(nuxtApp, plugin);\n  }\n  for (const plugin of plugins) {\n    if (import.meta.server && nuxtApp.ssrContext?.islandContext && plugin.env?.islands === false) {\n      continue;\n    }\n    await executePlugin(plugin);\n  }\n  await Promise.all(parallels);\n  if (promiseDepth) {\n    for (let i = 0; i < promiseDepth; i++) {\n      await Promise.all(parallels);\n    }\n  }\n  if (error) {\n    throw nuxtApp.payload.error || error;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nexport function defineNuxtPlugin(plugin) {\n  if (typeof plugin === \"function\") {\n    return plugin;\n  }\n  const _name = plugin._name || plugin.name;\n  delete plugin.name;\n  return Object.assign(plugin.setup || (() => {\n  }), plugin, { [NuxtPluginIndicator]: true, _name });\n}\nexport const definePayloadPlugin = defineNuxtPlugin;\nexport function isNuxtPlugin(plugin) {\n  return typeof plugin === \"function\" && NuxtPluginIndicator in plugin;\n}\nexport function callWithNuxt(nuxt, setup, args) {\n  const fn = () => args ? setup(...args) : setup();\n  const nuxtAppCtx = getNuxtAppCtx(nuxt._id);\n  if (import.meta.server) {\n    return nuxt.vueApp.runWithContext(() => nuxtAppCtx.callAsync(nuxt, fn));\n  } else {\n    nuxtAppCtx.set(nuxt);\n    return nuxt.vueApp.runWithContext(fn);\n  }\n}\nexport function tryUseNuxtApp(id) {\n  let nuxtAppInstance;\n  if (hasInjectionContext()) {\n    nuxtAppInstance = getCurrentInstance()?.appContext.app.$nuxt;\n  }\n  nuxtAppInstance ||= getNuxtAppCtx(id).tryUse();\n  return nuxtAppInstance || null;\n}\nexport function useNuxtApp(id) {\n  const nuxtAppInstance = tryUseNuxtApp(id);\n  if (!nuxtAppInstance) {\n    if (import.meta.dev) {\n      throw new Error(\"[nuxt] A composable that requires access to the Nuxt instance was called outside of a plugin, Nuxt hook, Nuxt middleware, or Vue setup function. This is probably not a Nuxt bug. Find out more at `https://nuxt.com/docs/guide/concepts/auto-imports#vue-and-nuxt-composables`.\");\n    } else {\n      throw new Error(\"[nuxt] instance unavailable\");\n    }\n  }\n  return nuxtAppInstance;\n}\n// @__NO_SIDE_EFFECTS__\nexport function useRuntimeConfig(_event) {\n  return useNuxtApp().$config;\n}\nfunction defineGetter(obj, key, val) {\n  Object.defineProperty(obj, key, { get: () => val });\n}\nexport function defineAppConfig(config) {\n  return config;\n}\nconst loggedKeys = /* @__PURE__ */ new Set();\nfunction wrappedConfig(runtimeConfig) {\n  if (!import.meta.dev || import.meta.server) {\n    return runtimeConfig;\n  }\n  const keys = [];\n  for (const key in runtimeConfig) {\n    keys.push(`\\`${key}\\``);\n  }\n  const lastKey = keys.pop();\n  return new Proxy(runtimeConfig, {\n    get(target, p, receiver) {\n      if (typeof p === \"string\" && p !== \"public\" && !(p in target) && !p.startsWith(\"__v\")) {\n        if (!loggedKeys.has(p)) {\n          loggedKeys.add(p);\n          console.warn(`[nuxt] Could not access \\`${p}\\`. The only available runtime config keys on the client side are ${keys.join(\", \")} and ${lastKey}. See https://nuxt.com/docs/guide/going-further/runtime-config for more information.`);\n        }\n      }\n      return Reflect.get(target, p, receiver);\n    }\n  });\n}\n","export const LayoutMetaSymbol = Symbol(\"layout-meta\");\nexport const PageRouteSymbol = Symbol(\"route\");\n","import { captureStackTrace } from \"errx\";\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nconst distURL = import.meta.url.replace(/\\/app\\/.*$/, \"/\");\nexport function getUserTrace() {\n  if (!import.meta.dev) {\n    return [];\n  }\n  const trace = captureStackTrace();\n  const start = trace.findIndex((entry) => !entry.source.startsWith(distURL));\n  const end = [...trace].reverse().findIndex((entry) => !entry.source.includes(\"node_modules\") && !entry.source.startsWith(distURL));\n  if (start === -1 || end === -1) {\n    return [];\n  }\n  return trace.slice(start, -end).map((i) => ({\n    ...i,\n    source: i.source.replace(/^file:\\/\\//, \"\")\n  }));\n}\nexport function getUserCaller() {\n  if (!import.meta.dev) {\n    return null;\n  }\n  const { source, line, column } = captureStackTrace().find((entry) => !entry.source.startsWith(distURL)) ?? {};\n  if (!source) {\n    return null;\n  }\n  return {\n    source: source.replace(/^file:\\/\\//, \"\"),\n    line,\n    column\n  };\n}\n","import { getCurrentInstance, hasInjectionContext, inject, onScopeDispose } from \"vue\";\nimport { sanitizeStatusCode } from \"h3\";\nimport { hasProtocol, isScriptProtocol, joinURL, parseQuery, parseURL, withQuery } from \"ufo\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { PageRouteSymbol } from \"../components/injections.js\";\nimport { createError, showError } from \"./error.js\";\nimport { getUserTrace } from \"../utils.js\";\nexport const useRouter = () => {\n  return useNuxtApp()?.$router;\n};\nexport const useRoute = () => {\n  if (import.meta.dev && !getCurrentInstance() && isProcessingMiddleware()) {\n    const middleware = useNuxtApp()._processingMiddleware;\n    const trace = getUserTrace().map(({ source, line, column }) => `at ${source}:${line}:${column}`).join(\"\\n\");\n    console.warn(`[nuxt] \\`useRoute\\` was called within middleware${typeof middleware === \"string\" ? ` (\\`${middleware}\\`)` : \"\"}. This may lead to misleading results. Instead, use the (to, from) arguments passed to the middleware to access the new and old routes. Learn more: https://nuxt.com/docs/4.x/guide/directory-structure/app/middleware#accessing-route-in-middleware` + (\"\\n\" + trace));\n  }\n  if (hasInjectionContext()) {\n    return inject(PageRouteSymbol, useNuxtApp()._route);\n  }\n  return useNuxtApp()._route;\n};\nexport const onBeforeRouteLeave = (guard) => {\n  const unsubscribe = useRouter().beforeEach((to, from, next) => {\n    if (to === from) {\n      return;\n    }\n    return guard(to, from, next);\n  });\n  onScopeDispose(unsubscribe);\n};\nexport const onBeforeRouteUpdate = (guard) => {\n  const unsubscribe = useRouter().beforeEach(guard);\n  onScopeDispose(unsubscribe);\n};\n// @__NO_SIDE_EFFECTS__\nexport function defineNuxtRouteMiddleware(middleware) {\n  return middleware;\n}\nexport const addRouteMiddleware = (name, middleware, options = {}) => {\n  const nuxtApp = useNuxtApp();\n  const global = options.global || typeof name !== \"string\";\n  const mw = typeof name !== \"string\" ? name : middleware;\n  if (!mw) {\n    console.warn(\"[nuxt] No route middleware passed to `addRouteMiddleware`.\", name);\n    return;\n  }\n  if (global) {\n    nuxtApp._middleware.global.push(mw);\n  } else {\n    nuxtApp._middleware.named[name] = mw;\n  }\n};\nconst isProcessingMiddleware = () => {\n  try {\n    if (useNuxtApp()._processingMiddleware) {\n      return true;\n    }\n  } catch {\n    return false;\n  }\n  return false;\n};\nconst URL_QUOTE_RE = /\"/g;\nexport const navigateTo = (to, options) => {\n  to ||= \"/\";\n  const toPath = typeof to === \"string\" ? to : \"path\" in to ? resolveRouteObject(to) : useRouter().resolve(to).href;\n  if (import.meta.client && options?.open) {\n    const { target = \"_blank\", windowFeatures = {} } = options.open;\n    const features = [];\n    for (const [feature, value] of Object.entries(windowFeatures)) {\n      if (value !== void 0) {\n        features.push(`${feature.toLowerCase()}=${value}`);\n      }\n    }\n    open(toPath, target, features.join(\", \"));\n    return Promise.resolve();\n  }\n  const isExternalHost = hasProtocol(toPath, { acceptRelative: true });\n  const isExternal = options?.external || isExternalHost;\n  if (isExternal) {\n    if (!options?.external) {\n      throw new Error(\"Navigating to an external URL is not allowed by default. Use `navigateTo(url, { external: true })`.\");\n    }\n    const { protocol } = new URL(toPath, import.meta.client ? window.location.href : \"http://localhost\");\n    if (protocol && isScriptProtocol(protocol)) {\n      throw new Error(`Cannot navigate to a URL with '${protocol}' protocol.`);\n    }\n  }\n  const inMiddleware = isProcessingMiddleware();\n  if (import.meta.client && !isExternal && inMiddleware) {\n    if (options?.replace) {\n      if (typeof to === \"string\") {\n        const { pathname, search, hash } = parseURL(to);\n        return {\n          path: pathname,\n          ...search && { query: parseQuery(search) },\n          ...hash && { hash },\n          replace: true\n        };\n      }\n      return { ...to, replace: true };\n    }\n    return to;\n  }\n  const router = useRouter();\n  const nuxtApp = useNuxtApp();\n  if (import.meta.server) {\n    if (nuxtApp.ssrContext) {\n      const fullPath = typeof to === \"string\" || isExternal ? toPath : router.resolve(to).fullPath || \"/\";\n      const location2 = isExternal ? toPath : joinURL(useRuntimeConfig().app.baseURL, fullPath);\n      const redirect = async function(response) {\n        await nuxtApp.callHook(\"app:redirected\");\n        const encodedLoc = location2.replace(URL_QUOTE_RE, \"%22\");\n        const encodedHeader = encodeURL(location2, isExternalHost);\n        nuxtApp.ssrContext._renderResponse = {\n          statusCode: sanitizeStatusCode(options?.redirectCode || 302, 302),\n          body: `<!DOCTYPE html><html><head><meta http-equiv=\"refresh\" content=\"0; url=${encodedLoc}\"></head></html>`,\n          headers: { location: encodedHeader }\n        };\n        return response;\n      };\n      if (!isExternal && inMiddleware) {\n        router.afterEach((final) => final.fullPath === fullPath ? redirect(false) : void 0);\n        return to;\n      }\n      return redirect(!inMiddleware ? void 0 : (\n        /* abort route navigation */\n        false\n      ));\n    }\n  }\n  if (isExternal) {\n    nuxtApp._scope.stop();\n    if (options?.replace) {\n      location.replace(toPath);\n    } else {\n      location.href = toPath;\n    }\n    if (inMiddleware) {\n      if (!nuxtApp.isHydrating) {\n        return false;\n      }\n      return new Promise(() => {\n      });\n    }\n    return Promise.resolve();\n  }\n  return options?.replace ? router.replace(to) : router.push(to);\n};\nexport const abortNavigation = (err) => {\n  if (import.meta.dev && !isProcessingMiddleware()) {\n    throw new Error(\"abortNavigation() is only usable inside a route middleware handler.\");\n  }\n  if (!err) {\n    return false;\n  }\n  err = createError(err);\n  if (err.fatal) {\n    useNuxtApp().runWithContext(() => showError(err));\n  }\n  throw err;\n};\nexport const setPageLayout = (layout) => {\n  const nuxtApp = useNuxtApp();\n  if (import.meta.server) {\n    if (import.meta.dev && getCurrentInstance() && nuxtApp.payload.state._layout !== layout) {\n      console.warn(\"[warn] [nuxt] `setPageLayout` should not be called to change the layout on the server within a component as this will cause hydration errors.\");\n    }\n    nuxtApp.payload.state._layout = layout;\n  }\n  if (import.meta.dev && nuxtApp.isHydrating && nuxtApp.payload.serverRendered && nuxtApp.payload.state._layout !== layout) {\n    console.warn(\"[warn] [nuxt] `setPageLayout` should not be called to change the layout during hydration as this will cause hydration errors.\");\n  }\n  const inMiddleware = isProcessingMiddleware();\n  if (inMiddleware || import.meta.server || nuxtApp.isHydrating) {\n    const unsubscribe = useRouter().beforeResolve((to) => {\n      to.meta.layout = layout;\n      unsubscribe();\n    });\n  }\n  if (!inMiddleware) {\n    useRoute().meta.layout = layout;\n  }\n};\nexport function resolveRouteObject(to) {\n  return withQuery(to.path || \"\", to.query || {}) + (to.hash || \"\");\n}\nexport function encodeURL(location2, isExternalHost = false) {\n  const url = new URL(location2, \"http://localhost\");\n  if (!isExternalHost) {\n    return url.pathname + url.search + url.hash;\n  }\n  if (location2.startsWith(\"//\")) {\n    return url.toString().replace(url.protocol, \"\");\n  }\n  return url.toString();\n}\n","import { createError as createH3Error } from \"h3\";\nimport { toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { useRouter } from \"./router.js\";\nimport { nuxtDefaultErrorValue } from \"#build/nuxt.config.mjs\";\nexport const NUXT_ERROR_SIGNATURE = \"__nuxt_error\";\nexport const useError = /* @__NO_SIDE_EFFECTS__ */ () => toRef(useNuxtApp().payload, \"error\");\nexport const showError = (error) => {\n  const nuxtError = createError(error);\n  try {\n    const error2 = /* @__PURE__ */ useError();\n    if (import.meta.client) {\n      const nuxtApp = useNuxtApp();\n      nuxtApp.hooks.callHook(\"app:error\", nuxtError);\n    }\n    error2.value ||= nuxtError;\n  } catch {\n    throw nuxtError;\n  }\n  return nuxtError;\n};\nexport const clearError = async (options = {}) => {\n  const nuxtApp = useNuxtApp();\n  const error = /* @__PURE__ */ useError();\n  nuxtApp.callHook(\"app:error:cleared\", options);\n  if (options.redirect) {\n    await useRouter().replace(options.redirect);\n  }\n  error.value = nuxtDefaultErrorValue;\n};\nexport const isNuxtError = (error) => !!error && typeof error === \"object\" && NUXT_ERROR_SIGNATURE in error;\nexport const createError = (error) => {\n  const nuxtError = createH3Error(error);\n  Object.defineProperty(nuxtError, NUXT_ERROR_SIGNATURE, {\n    value: true,\n    configurable: false,\n    writable: false\n  });\n  return nuxtError;\n};\n","import { createHead as createClientHead, renderDOMHead } from \"@unhead/vue/client\";\nimport { defineNuxtPlugin } from \"#app/nuxt\";\nimport unheadOptions from \"#build/unhead-options.mjs\";\nexport default defineNuxtPlugin({\n  name: \"nuxt:head\",\n  enforce: \"pre\",\n  setup(nuxtApp) {\n    const head = import.meta.server ? nuxtApp.ssrContext.head : createClientHead(unheadOptions);\n    nuxtApp.vueApp.use(head);\n    if (import.meta.client) {\n      let pauseDOMUpdates = true;\n      const syncHead = async () => {\n        pauseDOMUpdates = false;\n        await renderDOMHead(head);\n      };\n      head.hooks.hook(\"dom:beforeRender\", (context) => {\n        context.shouldRender = !pauseDOMUpdates;\n      });\n      nuxtApp.hooks.hook(\"page:start\", () => {\n        pauseDOMUpdates = true;\n      });\n      nuxtApp.hooks.hook(\"page:finish\", () => {\n        if (!nuxtApp.isHydrating) {\n          syncHead();\n        }\n      });\n      nuxtApp.hooks.hook(\"app:error\", syncHead);\n      nuxtApp.hooks.hook(\"app:suspense:resolve\", syncHead);\n    }\n  }\n});\n","import { createMatcherFromExport, createRouter as createRadixRouter, toRouteMatcher } from \"radix3\";\nimport { defu } from \"defu\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { appManifest as isAppManifestEnabled } from \"#build/nuxt.config.mjs\";\nimport { buildAssetsURL } from \"#internal/nuxt/paths\";\nlet manifest;\nlet matcher;\nfunction fetchManifest() {\n  if (!isAppManifestEnabled) {\n    throw new Error(\"[nuxt] app manifest should be enabled with `experimental.appManifest`\");\n  }\n  if (import.meta.server) {\n    manifest = import(\"#app-manifest\");\n  } else {\n    manifest = $fetch(buildAssetsURL(`builds/meta/${useRuntimeConfig().app.buildId}.json`), {\n      responseType: \"json\"\n    });\n  }\n  manifest.then((m) => {\n    matcher = createMatcherFromExport(m.matcher);\n  }).catch((e) => {\n    console.error(\"[nuxt] Error fetching app manifest.\", e);\n  });\n  return manifest;\n}\nexport function getAppManifest() {\n  if (!isAppManifestEnabled) {\n    throw new Error(\"[nuxt] app manifest should be enabled with `experimental.appManifest`\");\n  }\n  if (import.meta.server) {\n    useNuxtApp().ssrContext._preloadManifest = true;\n  }\n  return manifest || fetchManifest();\n}\nexport async function getRouteRules(arg) {\n  const path = typeof arg === \"string\" ? arg : arg.path;\n  if (import.meta.server) {\n    useNuxtApp().ssrContext._preloadManifest = true;\n    const _routeRulesMatcher = toRouteMatcher(\n      createRadixRouter({ routes: useRuntimeConfig().nitro.routeRules })\n    );\n    return defu({}, ..._routeRulesMatcher.matchAll(path).reverse());\n  }\n  await getAppManifest();\n  if (!matcher) {\n    console.error(\"[nuxt] Error creating app manifest matcher.\", matcher);\n    return {};\n  }\n  try {\n    return defu({}, ...matcher.matchAll(path).reverse());\n  } catch (e) {\n    console.error(\"[nuxt] Error matching route rules.\", e);\n    return {};\n  }\n}\n","import { hasProtocol } from \"ufo\";\nimport { defineNuxtRouteMiddleware } from \"../composables/router.js\";\nimport { getRouteRules } from \"../composables/manifest.js\";\nexport default defineNuxtRouteMiddleware(async (to) => {\n  if (import.meta.server || import.meta.test) {\n    return;\n  }\n  const rules = await getRouteRules({ path: to.path });\n  if (rules.redirect) {\n    if (hasProtocol(rules.redirect, { acceptRelative: true })) {\n      window.location.href = rules.redirect;\n      return false;\n    }\n    return rules.redirect;\n  }\n});\n","import manifest_45route_45rule from \"/Users/mac/Desktop/AL-Tech/Q-A-Project/frontend/node_modules/nuxt/dist/app/middleware/manifest-route-rule.js\";\nexport const globalMiddleware = [\n  manifest_45route_45rule\n]\nexport const namedMiddleware = {\n  auth: () => import(\"/Users/mac/Desktop/AL-Tech/Q-A-Project/frontend/middleware/auth.ts\")\n}","import { computed, defineComponent, h, isReadonly, reactive } from \"vue\";\nimport { isEqual, joinURL, parseQuery, stringifyParsedURL, stringifyQuery, withoutBase } from \"ufo\";\nimport { createError } from \"h3\";\nimport { defineNuxtPlugin, useRuntimeConfig } from \"../nuxt.js\";\nimport { getRouteRules } from \"../composables/manifest.js\";\nimport { clearError, showError } from \"../composables/error.js\";\nimport { navigateTo } from \"../composables/router.js\";\nimport { globalMiddleware } from \"#build/middleware\";\nimport { appManifest as isAppManifestEnabled } from \"#build/nuxt.config.mjs\";\nfunction getRouteFromPath(fullPath) {\n  const route = fullPath && typeof fullPath === \"object\" ? fullPath : {};\n  if (typeof fullPath === \"object\") {\n    fullPath = stringifyParsedURL({\n      pathname: fullPath.path || \"\",\n      search: stringifyQuery(fullPath.query || {}),\n      hash: fullPath.hash || \"\"\n    });\n  }\n  const url = new URL(fullPath.toString(), import.meta.client ? window.location.href : \"http://localhost\");\n  return {\n    path: url.pathname,\n    fullPath,\n    query: parseQuery(url.search),\n    hash: url.hash,\n    // stub properties for compat with vue-router\n    params: route.params || {},\n    name: void 0,\n    matched: route.matched || [],\n    redirectedFrom: void 0,\n    meta: route.meta || {},\n    href: fullPath\n  };\n}\nexport default defineNuxtPlugin({\n  name: \"nuxt:router\",\n  enforce: \"pre\",\n  setup(nuxtApp) {\n    const initialURL = import.meta.client ? withoutBase(window.location.pathname, useRuntimeConfig().app.baseURL) + window.location.search + window.location.hash : nuxtApp.ssrContext.url;\n    const routes = [];\n    const hooks = {\n      \"navigate:before\": [],\n      \"resolve:before\": [],\n      \"navigate:after\": [],\n      \"error\": []\n    };\n    const registerHook = (hook, guard) => {\n      hooks[hook].push(guard);\n      return () => hooks[hook].splice(hooks[hook].indexOf(guard), 1);\n    };\n    const baseURL = useRuntimeConfig().app.baseURL;\n    const route = reactive(getRouteFromPath(initialURL));\n    async function handleNavigation(url, replace) {\n      try {\n        const to = getRouteFromPath(url);\n        for (const middleware of hooks[\"navigate:before\"]) {\n          const result = await middleware(to, route);\n          if (result === false || result instanceof Error) {\n            return;\n          }\n          if (typeof result === \"string\" && result.length) {\n            return handleNavigation(result, true);\n          }\n        }\n        for (const handler of hooks[\"resolve:before\"]) {\n          await handler(to, route);\n        }\n        Object.assign(route, to);\n        if (import.meta.client) {\n          window.history[replace ? \"replaceState\" : \"pushState\"]({}, \"\", joinURL(baseURL, to.fullPath));\n          if (!nuxtApp.isHydrating) {\n            await nuxtApp.runWithContext(clearError);\n          }\n        }\n        for (const middleware of hooks[\"navigate:after\"]) {\n          await middleware(to, route);\n        }\n      } catch (err) {\n        if (import.meta.dev && !hooks.error.length) {\n          console.warn(\"No error handlers registered to handle middleware errors. You can register an error handler with `router.onError()`\", err);\n        }\n        for (const handler of hooks.error) {\n          await handler(err);\n        }\n      }\n    }\n    const currentRoute = computed(() => route);\n    const router = {\n      currentRoute,\n      isReady: () => Promise.resolve(),\n      // These options provide a similar API to vue-router but have no effect\n      options: {},\n      install: () => Promise.resolve(),\n      // Navigation\n      push: (url) => handleNavigation(url, false),\n      replace: (url) => handleNavigation(url, true),\n      back: () => window.history.go(-1),\n      go: (delta) => window.history.go(delta),\n      forward: () => window.history.go(1),\n      // Guards\n      beforeResolve: (guard) => registerHook(\"resolve:before\", guard),\n      beforeEach: (guard) => registerHook(\"navigate:before\", guard),\n      afterEach: (guard) => registerHook(\"navigate:after\", guard),\n      onError: (handler) => registerHook(\"error\", handler),\n      // Routes\n      resolve: getRouteFromPath,\n      addRoute: (parentName, route2) => {\n        routes.push(route2);\n      },\n      getRoutes: () => routes,\n      hasRoute: (name) => routes.some((route2) => route2.name === name),\n      removeRoute: (name) => {\n        const index = routes.findIndex((route2) => route2.name === name);\n        if (index !== -1) {\n          routes.splice(index, 1);\n        }\n      }\n    };\n    nuxtApp.vueApp.component(\"RouterLink\", defineComponent({\n      functional: true,\n      props: {\n        to: {\n          type: String,\n          required: true\n        },\n        custom: Boolean,\n        replace: Boolean,\n        // Not implemented\n        activeClass: String,\n        exactActiveClass: String,\n        ariaCurrentValue: String\n      },\n      setup: (props, { slots }) => {\n        const navigate = () => handleNavigation(props.to, props.replace);\n        return () => {\n          const route2 = router.resolve(props.to);\n          return props.custom ? slots.default?.({ href: props.to, navigate, route: route2 }) : h(\"a\", { href: props.to, onClick: (e) => {\n            e.preventDefault();\n            return navigate();\n          } }, slots);\n        };\n      }\n    }));\n    if (import.meta.client) {\n      window.addEventListener(\"popstate\", (event) => {\n        const location = event.target.location;\n        router.replace(location.href.replace(location.origin, \"\"));\n      });\n    }\n    nuxtApp._route = route;\n    nuxtApp._middleware ||= {\n      global: [],\n      named: {}\n    };\n    const initialLayout = nuxtApp.payload.state._layout;\n    nuxtApp.hooks.hookOnce(\"app:created\", async () => {\n      router.beforeEach(async (to, from) => {\n        to.meta = reactive(to.meta || {});\n        if (nuxtApp.isHydrating && initialLayout && !isReadonly(to.meta.layout)) {\n          to.meta.layout = initialLayout;\n        }\n        nuxtApp._processingMiddleware = true;\n        if (import.meta.client || !nuxtApp.ssrContext?.islandContext) {\n          const middlewareEntries = /* @__PURE__ */ new Set([...globalMiddleware, ...nuxtApp._middleware.global]);\n          if (isAppManifestEnabled) {\n            const routeRules = await nuxtApp.runWithContext(() => getRouteRules({ path: to.path }));\n            if (routeRules.appMiddleware) {\n              for (const key in routeRules.appMiddleware) {\n                const guard = nuxtApp._middleware.named[key];\n                if (!guard) {\n                  return;\n                }\n                if (routeRules.appMiddleware[key]) {\n                  middlewareEntries.add(guard);\n                } else {\n                  middlewareEntries.delete(guard);\n                }\n              }\n            }\n          }\n          for (const middleware of middlewareEntries) {\n            if (import.meta.dev) {\n              nuxtApp._processingMiddleware = middleware._path || true;\n            }\n            const result = await nuxtApp.runWithContext(() => middleware(to, from));\n            if (import.meta.server) {\n              if (result === false || result instanceof Error) {\n                const error = result || createError({\n                  statusCode: 404,\n                  statusMessage: `Page Not Found: ${initialURL}`,\n                  data: {\n                    path: initialURL\n                  }\n                });\n                delete nuxtApp._processingMiddleware;\n                return nuxtApp.runWithContext(() => showError(error));\n              }\n            }\n            if (result === true) {\n              continue;\n            }\n            if (result || result === false) {\n              return result;\n            }\n          }\n        }\n      });\n      router.afterEach(() => {\n        delete nuxtApp._processingMiddleware;\n      });\n      await router.replace(initialURL);\n      if (!isEqual(route.fullPath, initialURL)) {\n        await nuxtApp.runWithContext(() => navigateTo(route.fullPath));\n      }\n    });\n    return {\n      provide: {\n        route,\n        router\n      }\n    };\n  }\n});\n","import { hasInjectionContext, inject } from \"vue\";\nimport {\n  useHead as headCore,\n  useHeadSafe as headSafe,\n  headSymbol,\n  useSeoMeta as seoMeta,\n  useServerHead as serverHead,\n  useServerHeadSafe as serverHeadSafe,\n  useServerSeoMeta as serverSeoMeta\n} from \"@unhead/vue\";\nimport { tryUseNuxtApp } from \"#app/nuxt\";\nexport function injectHead(nuxtApp) {\n  const nuxt = nuxtApp || tryUseNuxtApp();\n  return nuxt?.ssrContext?.head || nuxt?.runWithContext(() => {\n    if (hasInjectionContext()) {\n      return inject(headSymbol);\n    }\n  });\n}\nexport function useHead(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return headCore(input, { head, ...options });\n  }\n}\nexport function useHeadSafe(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return headSafe(input, { head, ...options });\n  }\n}\nexport function useSeoMeta(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return seoMeta(input, { head, ...options });\n  }\n}\nexport function useServerHead(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverHead(input, { head, ...options });\n  }\n}\nexport function useServerHeadSafe(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverHeadSafe(input, { head, ...options });\n  }\n}\nexport function useServerSeoMeta(input, options = {}) {\n  const head = injectHead(options.nuxt);\n  if (head) {\n    return serverSeoMeta(input, { head, ...options });\n  }\n}\n","import { hasProtocol, joinURL } from \"ufo\";\nimport { parse } from \"devalue\";\nimport { getCurrentInstance, onServerPrefetch, reactive } from \"vue\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { useHead } from \"./head.js\";\nimport { useRoute } from \"./router.js\";\nimport { getAppManifest, getRouteRules } from \"./manifest.js\";\nimport { appId, appManifest, multiApp, payloadExtraction, renderJsonPayloads } from \"#build/nuxt.config.mjs\";\nexport async function loadPayload(url, opts = {}) {\n  if (import.meta.server || !payloadExtraction) {\n    return null;\n  }\n  const shouldLoadPayload = await isPrerendered(url);\n  if (!shouldLoadPayload) {\n    return null;\n  }\n  const payloadURL = await _getPayloadURL(url, opts);\n  return await _importPayload(payloadURL) || null;\n}\nlet linkRelType;\nfunction detectLinkRelType() {\n  if (import.meta.server) {\n    return \"preload\";\n  }\n  if (linkRelType) {\n    return linkRelType;\n  }\n  const relList = document.createElement(\"link\").relList;\n  linkRelType = relList && relList.supports && relList.supports(\"prefetch\") ? \"prefetch\" : \"preload\";\n  return linkRelType;\n}\nexport function preloadPayload(url, opts = {}) {\n  const nuxtApp = useNuxtApp();\n  const promise = _getPayloadURL(url, opts).then((payloadURL) => {\n    const link = renderJsonPayloads ? { rel: detectLinkRelType(), as: \"fetch\", crossorigin: \"anonymous\", href: payloadURL } : { rel: \"modulepreload\", crossorigin: \"\", href: payloadURL };\n    if (import.meta.server) {\n      nuxtApp.runWithContext(() => useHead({ link: [link] }));\n    } else {\n      const linkEl = document.createElement(\"link\");\n      for (const key of Object.keys(link)) {\n        linkEl[key === \"crossorigin\" ? \"crossOrigin\" : key] = link[key];\n      }\n      document.head.appendChild(linkEl);\n      return new Promise((resolve, reject) => {\n        linkEl.addEventListener(\"load\", () => resolve());\n        linkEl.addEventListener(\"error\", () => reject());\n      });\n    }\n  });\n  if (import.meta.server) {\n    onServerPrefetch(() => promise);\n  }\n  return promise;\n}\nconst filename = renderJsonPayloads ? \"_payload.json\" : \"_payload.js\";\nasync function _getPayloadURL(url, opts = {}) {\n  const u = new URL(url, \"http://localhost\");\n  if (u.host !== \"localhost\" || hasProtocol(u.pathname, { acceptRelative: true })) {\n    throw new Error(\"Payload URL must not include hostname: \" + url);\n  }\n  const config = useRuntimeConfig();\n  const hash = opts.hash || (opts.fresh ? Date.now() : config.app.buildId);\n  const cdnURL = config.app.cdnURL;\n  const baseOrCdnURL = cdnURL && await isPrerendered(url) ? cdnURL : config.app.baseURL;\n  return joinURL(baseOrCdnURL, u.pathname, filename + (hash ? `?${hash}` : \"\"));\n}\nasync function _importPayload(payloadURL) {\n  if (import.meta.server || !payloadExtraction) {\n    return null;\n  }\n  const payloadPromise = renderJsonPayloads ? fetch(payloadURL, { cache: \"force-cache\" }).then((res) => res.text().then(parsePayload)) : import(\n    /* webpackIgnore: true */\n    /* @vite-ignore */\n    payloadURL\n  ).then((r) => r.default || r);\n  try {\n    return await payloadPromise;\n  } catch (err) {\n    console.warn(\"[nuxt] Cannot load payload \", payloadURL, err);\n  }\n  return null;\n}\nexport async function isPrerendered(url = useRoute().path) {\n  const nuxtApp = useNuxtApp();\n  if (!appManifest) {\n    return !!nuxtApp.payload.prerenderedAt;\n  }\n  url = url.replace(/\\/$/, \"\");\n  const manifest = await getAppManifest();\n  if (manifest.prerendered.includes(url)) {\n    return true;\n  }\n  return nuxtApp.runWithContext(async () => {\n    const rules = await getRouteRules({ path: url });\n    return !!rules.prerender && !rules.redirect;\n  });\n}\nlet payloadCache = null;\nexport async function getNuxtClientPayload() {\n  if (import.meta.server) {\n    return null;\n  }\n  if (payloadCache) {\n    return payloadCache;\n  }\n  const el = multiApp ? document.querySelector(`[data-nuxt-data=\"${appId}\"]`) : document.getElementById(\"__NUXT_DATA__\");\n  if (!el) {\n    return {};\n  }\n  const inlineData = await parsePayload(el.textContent || \"\");\n  const externalData = el.dataset.src ? await _importPayload(el.dataset.src) : void 0;\n  payloadCache = {\n    ...inlineData,\n    ...externalData,\n    ...multiApp ? window.__NUXT__?.[appId] : window.__NUXT__\n  };\n  if (payloadCache.config?.public) {\n    payloadCache.config.public = reactive(payloadCache.config.public);\n  }\n  return payloadCache;\n}\nexport async function parsePayload(payload) {\n  return await parse(payload, useNuxtApp()._payloadRevivers);\n}\nexport function definePayloadReducer(name, reduce) {\n  if (import.meta.server) {\n    useNuxtApp().ssrContext._payloadReducers[name] = reduce;\n  }\n}\nexport function definePayloadReviver(name, revive) {\n  if (import.meta.dev && getCurrentInstance()) {\n    console.warn(\"[nuxt] [definePayloadReviver] This function must be called in a Nuxt plugin that is `unshift`ed to the beginning of the Nuxt plugins array.\");\n  }\n  if (import.meta.client) {\n    useNuxtApp()._payloadRevivers[name] = revive;\n  }\n}\n","import { isReactive, isRef, isShallow, toRaw } from \"vue\";\nimport { definePayloadReducer } from \"../composables/payload.js\";\nimport { isNuxtError } from \"../composables/error.js\";\nimport { defineNuxtPlugin } from \"../nuxt.js\";\nimport { componentIslands } from \"#build/nuxt.config.mjs\";\nimport { isValidIslandKey } from \"./utils.js\";\nconst reducers = [\n  [\"NuxtError\", (data) => isNuxtError(data) && data.toJSON()],\n  [\"EmptyShallowRef\", (data) => isRef(data) && isShallow(data) && !data.value && (typeof data.value === \"bigint\" ? \"0n\" : JSON.stringify(data.value) || \"_\")],\n  [\"EmptyRef\", (data) => isRef(data) && !data.value && (typeof data.value === \"bigint\" ? \"0n\" : JSON.stringify(data.value) || \"_\")],\n  [\"ShallowRef\", (data) => isRef(data) && isShallow(data) && data.value],\n  [\"ShallowReactive\", (data) => isReactive(data) && isShallow(data) && toRaw(data)],\n  [\"Ref\", (data) => isRef(data) && data.value],\n  [\"Reactive\", (data) => isReactive(data) && toRaw(data)]\n];\nif (componentIslands) {\n  reducers.push([\"Island\", (data) => data && data?.__nuxt_island && isValidIslandKey(data.__nuxt_island.key) && data.__nuxt_island]);\n}\nexport default defineNuxtPlugin({\n  name: \"nuxt:revive-payload:server\",\n  setup() {\n    for (const [reducer, fn] of reducers) {\n      definePayloadReducer(reducer, fn);\n    }\n  }\n});\n","export * from \"vue\";\nexport const install = () => {\n};\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val;\n  }\n  target[key] = val;\n  return val;\n}\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1);\n    return;\n  }\n  delete target[key];\n}\n","/*!\n * pinia v2.3.1\n * (c) 2025 Eduardo San Martin Morote\n * @license MIT\n */\nimport { hasInjectionContext, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, getCurrentInstance, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\nlet activePinia;\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\n// @ts-expect-error: cannot constrain the type of the return\nconst setActivePinia = (pinia) => (activePinia = pinia);\n/**\n * Get the currently active pinia if there is any.\n */\nconst getActivePinia = () => (hasInjectionContext() && inject(piniaSymbol)) || activePinia;\nconst piniaSymbol = ((process.env.NODE_ENV !== 'production') ? Symbol('pinia') : /* istanbul ignore next */ Symbol());\n\nfunction isPlainObject(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n    return (o &&\n        typeof o === 'object' &&\n        Object.prototype.toString.call(o) === '[object Object]' &&\n        typeof o.toJSON !== 'function');\n}\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n/**\n * Possible types for SubscriptionCallback\n */\nvar MutationType;\n(function (MutationType) {\n    /**\n     * Direct mutation of the state:\n     *\n     * - `store.name = 'new name'`\n     * - `store.$state.name = 'new name'`\n     * - `store.list.push('new item')`\n     */\n    MutationType[\"direct\"] = \"direct\";\n    /**\n     * Mutated the state with `$patch` and an object\n     *\n     * - `store.$patch({ name: 'newName' })`\n     */\n    MutationType[\"patchObject\"] = \"patch object\";\n    /**\n     * Mutated the state with `$patch` and a function\n     *\n     * - `store.$patch(state => state.name = 'newName')`\n     */\n    MutationType[\"patchFunction\"] = \"patch function\";\n    // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\n\nconst IS_CLIENT = typeof window !== 'undefined';\n\n/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nconst _global = /*#__PURE__*/ (() => typeof window === 'object' && window.window === window\n    ? window\n    : typeof self === 'object' && self.self === self\n        ? self\n        : typeof global === 'object' && global.global === global\n            ? global\n            : typeof globalThis === 'object'\n                ? globalThis\n                : { HTMLElement: null })();\nfunction bom(blob, { autoBom = false } = {}) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n    if (autoBom &&\n        /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n        return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\n    }\n    return blob;\n}\nfunction download(url, name, opts) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n        saveAs(xhr.response, name, opts);\n    };\n    xhr.onerror = function () {\n        console.error('could not download file');\n    };\n    xhr.send();\n}\nfunction corsEnabled(url) {\n    const xhr = new XMLHttpRequest();\n    // use sync to avoid popup blocker\n    xhr.open('HEAD', url, false);\n    try {\n        xhr.send();\n    }\n    catch (e) { }\n    return xhr.status >= 200 && xhr.status <= 299;\n}\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node) {\n    try {\n        node.dispatchEvent(new MouseEvent('click'));\n    }\n    catch (e) {\n        const evt = document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n        node.dispatchEvent(evt);\n    }\n}\nconst _navigator = typeof navigator === 'object' ? navigator : { userAgent: '' };\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nconst isMacOSWebView = /*#__PURE__*/ (() => /Macintosh/.test(_navigator.userAgent) &&\n    /AppleWebKit/.test(_navigator.userAgent) &&\n    !/Safari/.test(_navigator.userAgent))();\nconst saveAs = !IS_CLIENT\n    ? () => { } // noop\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\n        typeof HTMLAnchorElement !== 'undefined' &&\n            'download' in HTMLAnchorElement.prototype &&\n            !isMacOSWebView\n            ? downloadSaveAs\n            : // Use msSaveOrOpenBlob as a second approach\n                'msSaveOrOpenBlob' in _navigator\n                    ? msSaveAs\n                    : // Fallback to using FileReader and a popup\n                        fileSaverSaveAs;\nfunction downloadSaveAs(blob, name = 'download', opts) {\n    const a = document.createElement('a');\n    a.download = name;\n    a.rel = 'noopener'; // tabnabbing\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n    if (typeof blob === 'string') {\n        // Support regular links\n        a.href = blob;\n        if (a.origin !== location.origin) {\n            if (corsEnabled(a.href)) {\n                download(blob, name, opts);\n            }\n            else {\n                a.target = '_blank';\n                click(a);\n            }\n        }\n        else {\n            click(a);\n        }\n    }\n    else {\n        // Support blobs\n        a.href = URL.createObjectURL(blob);\n        setTimeout(function () {\n            URL.revokeObjectURL(a.href);\n        }, 4e4); // 40s\n        setTimeout(function () {\n            click(a);\n        }, 0);\n    }\n}\nfunction msSaveAs(blob, name = 'download', opts) {\n    if (typeof blob === 'string') {\n        if (corsEnabled(blob)) {\n            download(blob, name, opts);\n        }\n        else {\n            const a = document.createElement('a');\n            a.href = blob;\n            a.target = '_blank';\n            setTimeout(function () {\n                click(a);\n            });\n        }\n    }\n    else {\n        // @ts-ignore: works on windows\n        navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n    }\n}\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank');\n    if (popup) {\n        popup.document.title = popup.document.body.innerText = 'downloading...';\n    }\n    if (typeof blob === 'string')\n        return download(blob, name, opts);\n    const force = blob.type === 'application/octet-stream';\n    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n    const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) &&\n        typeof FileReader !== 'undefined') {\n        // Safari doesn't allow downloading of blob URLs\n        const reader = new FileReader();\n        reader.onloadend = function () {\n            let url = reader.result;\n            if (typeof url !== 'string') {\n                popup = null;\n                throw new Error('Wrong reader.result type');\n            }\n            url = isChromeIOS\n                ? url\n                : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n            if (popup) {\n                popup.location.href = url;\n            }\n            else {\n                location.assign(url);\n            }\n            popup = null; // reverse-tabnabbing #460\n        };\n        reader.readAsDataURL(blob);\n    }\n    else {\n        const url = URL.createObjectURL(blob);\n        if (popup)\n            popup.location.assign(url);\n        else\n            location.href = url;\n        popup = null; // reverse-tabnabbing #460\n        setTimeout(function () {\n            URL.revokeObjectURL(url);\n        }, 4e4); // 40s\n    }\n}\n\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\nfunction toastMessage(message, type) {\n    const piniaMessage = '🍍 ' + message;\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n        // No longer available :(\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n    }\n    else if (type === 'error') {\n        console.error(piniaMessage);\n    }\n    else if (type === 'warn') {\n        console.warn(piniaMessage);\n    }\n    else {\n        console.log(piniaMessage);\n    }\n}\nfunction isPinia(o) {\n    return '_a' in o && 'install' in o;\n}\n\n/**\n * This file contain devtools actions, they are not Pinia actions.\n */\n// ---\nfunction checkClipboardAccess() {\n    if (!('clipboard' in navigator)) {\n        toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\n        return true;\n    }\n}\nfunction checkNotFocusedError(error) {\n    if (error instanceof Error &&\n        error.message.toLowerCase().includes('document is not focused')) {\n        toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n        return true;\n    }\n    return false;\n}\nasync function actionGlobalCopyState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n        toastMessage('Global state copied to clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalPasteState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        loadStoresState(pinia, JSON.parse(await navigator.clipboard.readText()));\n        toastMessage('Global state pasted from clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalSaveState(pinia) {\n    try {\n        saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n            type: 'text/plain;charset=utf-8',\n        }), 'pinia-state.json');\n    }\n    catch (error) {\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nlet fileInput;\nfunction getFileOpener() {\n    if (!fileInput) {\n        fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.accept = '.json';\n    }\n    function openFile() {\n        return new Promise((resolve, reject) => {\n            fileInput.onchange = async () => {\n                const files = fileInput.files;\n                if (!files)\n                    return resolve(null);\n                const file = files.item(0);\n                if (!file)\n                    return resolve(null);\n                return resolve({ text: await file.text(), file });\n            };\n            // @ts-ignore: TODO: changed from 4.3 to 4.4\n            fileInput.oncancel = () => resolve(null);\n            fileInput.onerror = reject;\n            fileInput.click();\n        });\n    }\n    return openFile;\n}\nasync function actionGlobalOpenStateFile(pinia) {\n    try {\n        const open = getFileOpener();\n        const result = await open();\n        if (!result)\n            return;\n        const { text, file } = result;\n        loadStoresState(pinia, JSON.parse(text));\n        toastMessage(`Global state imported from \"${file.name}\".`);\n    }\n    catch (error) {\n        toastMessage(`Failed to import the state from JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nfunction loadStoresState(pinia, state) {\n    for (const key in state) {\n        const storeState = pinia.state.value[key];\n        // store is already instantiated, patch it\n        if (storeState) {\n            Object.assign(storeState, state[key]);\n        }\n        else {\n            // store is not instantiated, set the initial state\n            pinia.state.value[key] = state[key];\n        }\n    }\n}\n\nfunction formatDisplay(display) {\n    return {\n        _custom: {\n            display,\n        },\n    };\n}\nconst PINIA_ROOT_LABEL = '🍍 Pinia (root)';\nconst PINIA_ROOT_ID = '_root';\nfunction formatStoreForInspectorTree(store) {\n    return isPinia(store)\n        ? {\n            id: PINIA_ROOT_ID,\n            label: PINIA_ROOT_LABEL,\n        }\n        : {\n            id: store.$id,\n            label: store.$id,\n        };\n}\nfunction formatStoreForInspectorState(store) {\n    if (isPinia(store)) {\n        const storeNames = Array.from(store._s.keys());\n        const storeMap = store._s;\n        const state = {\n            state: storeNames.map((storeId) => ({\n                editable: true,\n                key: storeId,\n                value: store.state.value[storeId],\n            })),\n            getters: storeNames\n                .filter((id) => storeMap.get(id)._getters)\n                .map((id) => {\n                const store = storeMap.get(id);\n                return {\n                    editable: false,\n                    key: id,\n                    value: store._getters.reduce((getters, key) => {\n                        getters[key] = store[key];\n                        return getters;\n                    }, {}),\n                };\n            }),\n        };\n        return state;\n    }\n    const state = {\n        state: Object.keys(store.$state).map((key) => ({\n            editable: true,\n            key,\n            value: store.$state[key],\n        })),\n    };\n    // avoid adding empty getters\n    if (store._getters && store._getters.length) {\n        state.getters = store._getters.map((getterName) => ({\n            editable: false,\n            key: getterName,\n            value: store[getterName],\n        }));\n    }\n    if (store._customProperties.size) {\n        state.customProperties = Array.from(store._customProperties).map((key) => ({\n            editable: true,\n            key,\n            value: store[key],\n        }));\n    }\n    return state;\n}\nfunction formatEventData(events) {\n    if (!events)\n        return {};\n    if (Array.isArray(events)) {\n        // TODO: handle add and delete for arrays and objects\n        return events.reduce((data, event) => {\n            data.keys.push(event.key);\n            data.operations.push(event.type);\n            data.oldValue[event.key] = event.oldValue;\n            data.newValue[event.key] = event.newValue;\n            return data;\n        }, {\n            oldValue: {},\n            keys: [],\n            operations: [],\n            newValue: {},\n        });\n    }\n    else {\n        return {\n            operation: formatDisplay(events.type),\n            key: formatDisplay(events.key),\n            oldValue: events.oldValue,\n            newValue: events.newValue,\n        };\n    }\n}\nfunction formatMutationType(type) {\n    switch (type) {\n        case MutationType.direct:\n            return 'mutation';\n        case MutationType.patchFunction:\n            return '$patch';\n        case MutationType.patchObject:\n            return '$patch';\n        default:\n            return 'unknown';\n    }\n}\n\n// timeline can be paused when directly changing the state\nlet isTimelineActive = true;\nconst componentStateTypes = [];\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\nconst INSPECTOR_ID = 'pinia';\nconst { assign: assign$1 } = Object;\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\nconst getStoreType = (id) => '🍍 ' + id;\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\nfunction registerPiniaDevtools(app, pinia) {\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia 🍍',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n    }, (api) => {\n        if (typeof api.now !== 'function') {\n            toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n        }\n        api.addTimelineLayer({\n            id: MUTATIONS_LAYER_ID,\n            label: `Pinia 🍍`,\n            color: 0xe5df88,\n        });\n        api.addInspector({\n            id: INSPECTOR_ID,\n            label: 'Pinia 🍍',\n            icon: 'storage',\n            treeFilterPlaceholder: 'Search stores',\n            actions: [\n                {\n                    icon: 'content_copy',\n                    action: () => {\n                        actionGlobalCopyState(pinia);\n                    },\n                    tooltip: 'Serialize and copy the state',\n                },\n                {\n                    icon: 'content_paste',\n                    action: async () => {\n                        await actionGlobalPasteState(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Replace the state with the content of your clipboard',\n                },\n                {\n                    icon: 'save',\n                    action: () => {\n                        actionGlobalSaveState(pinia);\n                    },\n                    tooltip: 'Save the state as a JSON file',\n                },\n                {\n                    icon: 'folder_open',\n                    action: async () => {\n                        await actionGlobalOpenStateFile(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Import the state from a JSON file',\n                },\n            ],\n            nodeActions: [\n                {\n                    icon: 'restore',\n                    tooltip: 'Reset the state (with \"$reset\")',\n                    action: (nodeId) => {\n                        const store = pinia._s.get(nodeId);\n                        if (!store) {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\n                        }\n                        else if (typeof store.$reset !== 'function') {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it doesn't have a \"$reset\" method implemented.`, 'warn');\n                        }\n                        else {\n                            store.$reset();\n                            toastMessage(`Store \"${nodeId}\" reset.`);\n                        }\n                    },\n                },\n            ],\n        });\n        api.on.inspectComponent((payload, ctx) => {\n            const proxy = (payload.componentInstance &&\n                payload.componentInstance.proxy);\n            if (proxy && proxy._pStores) {\n                const piniaStores = payload.componentInstance.proxy._pStores;\n                Object.values(piniaStores).forEach((store) => {\n                    payload.instanceData.state.push({\n                        type: getStoreType(store.$id),\n                        key: 'state',\n                        editable: true,\n                        value: store._isOptionsAPI\n                            ? {\n                                _custom: {\n                                    value: toRaw(store.$state),\n                                    actions: [\n                                        {\n                                            icon: 'restore',\n                                            tooltip: 'Reset the state of this store',\n                                            action: () => store.$reset(),\n                                        },\n                                    ],\n                                },\n                            }\n                            : // NOTE: workaround to unwrap transferred refs\n                                Object.keys(store.$state).reduce((state, key) => {\n                                    state[key] = store.$state[key];\n                                    return state;\n                                }, {}),\n                    });\n                    if (store._getters && store._getters.length) {\n                        payload.instanceData.state.push({\n                            type: getStoreType(store.$id),\n                            key: 'getters',\n                            editable: false,\n                            value: store._getters.reduce((getters, key) => {\n                                try {\n                                    getters[key] = store[key];\n                                }\n                                catch (error) {\n                                    // @ts-expect-error: we just want to show it in devtools\n                                    getters[key] = error;\n                                }\n                                return getters;\n                            }, {}),\n                        });\n                    }\n                });\n            }\n        });\n        api.on.getInspectorTree((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                let stores = [pinia];\n                stores = stores.concat(Array.from(pinia._s.values()));\n                payload.rootNodes = (payload.filter\n                    ? stores.filter((store) => '$id' in store\n                        ? store.$id\n                            .toLowerCase()\n                            .includes(payload.filter.toLowerCase())\n                        : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase()))\n                    : stores).map(formatStoreForInspectorTree);\n            }\n        });\n        // Expose pinia instance as $pinia to window\n        globalThis.$pinia = pinia;\n        api.on.getInspectorState((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    // this could be the selected store restored for a different project\n                    // so it's better not to say anything here\n                    return;\n                }\n                if (inspectedStore) {\n                    // Expose selected store as $store to window\n                    if (payload.nodeId !== PINIA_ROOT_ID)\n                        globalThis.$store = toRaw(inspectedStore);\n                    payload.state = formatStoreForInspectorState(inspectedStore);\n                }\n            }\n        });\n        api.on.editInspectorState((payload, ctx) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (!isPinia(inspectedStore)) {\n                    // access only the state\n                    if (path.length !== 1 ||\n                        !inspectedStore._customProperties.has(path[0]) ||\n                        path[0] in inspectedStore.$state) {\n                        path.unshift('$state');\n                    }\n                }\n                else {\n                    // Root access, we can omit the `.value` because the devtools API does it for us\n                    path.unshift('state');\n                }\n                isTimelineActive = false;\n                payload.set(inspectedStore, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n        api.on.editComponentState((payload) => {\n            if (payload.type.startsWith('🍍')) {\n                const storeId = payload.type.replace(/^🍍\\s*/, '');\n                const store = pinia._s.get(storeId);\n                if (!store) {\n                    return toastMessage(`store \"${storeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (path[0] !== 'state') {\n                    return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\n                }\n                // rewrite the first entry to be able to directly set the state as\n                // well as any other path\n                path[0] = '$state';\n                isTimelineActive = false;\n                payload.set(store, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n    });\n}\nfunction addStoreToDevtools(app, store) {\n    if (!componentStateTypes.includes(getStoreType(store.$id))) {\n        componentStateTypes.push(getStoreType(store.$id));\n    }\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia 🍍',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n        settings: {\n            logStoreChanges: {\n                label: 'Notify about new/deleted stores',\n                type: 'boolean',\n                defaultValue: true,\n            },\n            // useEmojis: {\n            //   label: 'Use emojis in messages ⚡️',\n            //   type: 'boolean',\n            //   defaultValue: true,\n            // },\n        },\n    }, (api) => {\n        // gracefully handle errors\n        const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n        store.$onAction(({ after, onError, name, args }) => {\n            const groupId = runningActionId++;\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: '🛫 ' + name,\n                    subtitle: 'start',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        action: formatDisplay(name),\n                        args,\n                    },\n                    groupId,\n                },\n            });\n            after((result) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        title: '🛬 ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            result,\n                        },\n                        groupId,\n                    },\n                });\n            });\n            onError((error) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        logType: 'error',\n                        title: '💥 ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            error,\n                        },\n                        groupId,\n                    },\n                });\n            });\n        }, true);\n        store._customProperties.forEach((name) => {\n            watch(() => unref(store[name]), (newValue, oldValue) => {\n                api.notifyComponentUpdate();\n                api.sendInspectorState(INSPECTOR_ID);\n                if (isTimelineActive) {\n                    api.addTimelineEvent({\n                        layerId: MUTATIONS_LAYER_ID,\n                        event: {\n                            time: now(),\n                            title: 'Change',\n                            subtitle: name,\n                            data: {\n                                newValue,\n                                oldValue,\n                            },\n                            groupId: activeAction,\n                        },\n                    });\n                }\n            }, { deep: true });\n        });\n        store.$subscribe(({ events, type }, state) => {\n            api.notifyComponentUpdate();\n            api.sendInspectorState(INSPECTOR_ID);\n            if (!isTimelineActive)\n                return;\n            // rootStore.state[store.id] = state\n            const eventData = {\n                time: now(),\n                title: formatMutationType(type),\n                data: assign$1({ store: formatDisplay(store.$id) }, formatEventData(events)),\n                groupId: activeAction,\n            };\n            if (type === MutationType.patchFunction) {\n                eventData.subtitle = '⤵️';\n            }\n            else if (type === MutationType.patchObject) {\n                eventData.subtitle = '🧩';\n            }\n            else if (events && !Array.isArray(events)) {\n                eventData.subtitle = events.type;\n            }\n            if (events) {\n                eventData.data['rawEvent(s)'] = {\n                    _custom: {\n                        display: 'DebuggerEvent',\n                        type: 'object',\n                        tooltip: 'raw DebuggerEvent[]',\n                        value: events,\n                    },\n                };\n            }\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: eventData,\n            });\n        }, { detached: true, flush: 'sync' });\n        const hotUpdate = store._hotUpdate;\n        store._hotUpdate = markRaw((newStore) => {\n            hotUpdate(newStore);\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: '🔥 ' + store.$id,\n                    subtitle: 'HMR update',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        info: formatDisplay(`HMR update`),\n                    },\n                },\n            });\n            // update the devtools too\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n        });\n        const { $dispose } = store;\n        store.$dispose = () => {\n            $dispose();\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n            api.getSettings().logStoreChanges &&\n                toastMessage(`Disposed \"${store.$id}\" store 🗑`);\n        };\n        // trigger an update so it can display new registered stores\n        api.notifyComponentUpdate();\n        api.sendInspectorTree(INSPECTOR_ID);\n        api.sendInspectorState(INSPECTOR_ID);\n        api.getSettings().logStoreChanges &&\n            toastMessage(`\"${store.$id}\" store installed 🆕`);\n    });\n}\nlet runningActionId = 0;\nlet activeAction;\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\nfunction patchActionForGrouping(store, actionNames, wrapWithProxy) {\n    // original actions of the store as they are given by pinia. We are going to override them\n    const actions = actionNames.reduce((storeActions, actionName) => {\n        // use toRaw to avoid tracking #541\n        storeActions[actionName] = toRaw(store)[actionName];\n        return storeActions;\n    }, {});\n    for (const actionName in actions) {\n        store[actionName] = function () {\n            // the running action id is incremented in a before action hook\n            const _actionId = runningActionId;\n            const trackedStore = wrapWithProxy\n                ? new Proxy(store, {\n                    get(...args) {\n                        activeAction = _actionId;\n                        return Reflect.get(...args);\n                    },\n                    set(...args) {\n                        activeAction = _actionId;\n                        return Reflect.set(...args);\n                    },\n                })\n                : store;\n            // For Setup Stores we need https://github.com/tc39/proposal-async-context\n            activeAction = _actionId;\n            const retValue = actions[actionName].apply(trackedStore, arguments);\n            // this is safer as async actions in Setup Stores would associate mutations done outside of the action\n            activeAction = undefined;\n            return retValue;\n        };\n    }\n}\n/**\n * pinia.use(devtoolsPlugin)\n */\nfunction devtoolsPlugin({ app, store, options }) {\n    // HMR module\n    if (store.$id.startsWith('__hot:')) {\n        return;\n    }\n    // detect option api vs setup api\n    store._isOptionsAPI = !!options.state;\n    // Do not overwrite actions mocked by @pinia/testing (#2298)\n    if (!store._p._testing) {\n        patchActionForGrouping(store, Object.keys(options.actions), store._isOptionsAPI);\n        // Upgrade the HMR to also update the new actions\n        const originalHotUpdate = store._hotUpdate;\n        toRaw(store)._hotUpdate = function (newStore) {\n            originalHotUpdate.apply(this, arguments);\n            patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions), !!store._isOptionsAPI);\n        };\n    }\n    addStoreToDevtools(app, \n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n    store);\n}\n\n/**\n * Creates a Pinia instance to be used by the application\n */\nfunction createPinia() {\n    const scope = effectScope(true);\n    // NOTE: here we could check the window object for a state and directly set it\n    // if there is anything like it with Vue 3 SSR\n    const state = scope.run(() => ref({}));\n    let _p = [];\n    // plugins added before calling app.use(pinia)\n    let toBeInstalled = [];\n    const pinia = markRaw({\n        install(app) {\n            // this allows calling useStore() outside of a component setup after\n            // installing pinia's plugin\n            setActivePinia(pinia);\n            if (!isVue2) {\n                pinia._a = app;\n                app.provide(piniaSymbol, pinia);\n                app.config.globalProperties.$pinia = pinia;\n                /* istanbul ignore else */\n                if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT) {\n                    registerPiniaDevtools(app, pinia);\n                }\n                toBeInstalled.forEach((plugin) => _p.push(plugin));\n                toBeInstalled = [];\n            }\n        },\n        use(plugin) {\n            if (!this._a && !isVue2) {\n                toBeInstalled.push(plugin);\n            }\n            else {\n                _p.push(plugin);\n            }\n            return this;\n        },\n        _p,\n        // it's actually undefined here\n        // @ts-expect-error\n        _a: null,\n        _e: scope,\n        _s: new Map(),\n        state,\n    });\n    // pinia devtools rely on dev only features so they cannot be forced unless\n    // the dev build of Vue is used. Avoid old browsers like IE11.\n    if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT && typeof Proxy !== 'undefined') {\n        pinia.use(devtoolsPlugin);\n    }\n    return pinia;\n}\n/**\n * Dispose a Pinia instance by stopping its effectScope and removing the state, plugins and stores. This is mostly\n * useful in tests, with both a testing pinia or a regular pinia and in applications that use multiple pinia instances.\n * Once disposed, the pinia instance cannot be used anymore.\n *\n * @param pinia - pinia instance\n */\nfunction disposePinia(pinia) {\n    pinia._e.stop();\n    pinia._s.clear();\n    pinia._p.splice(0);\n    pinia.state.value = {};\n    // @ts-expect-error: non valid\n    pinia._a = null;\n}\n\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\nconst isUseStore = (fn) => {\n    return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\nfunction patchObject(newState, oldState) {\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in oldState) {\n        const subPatch = oldState[key];\n        // skip the whole sub tree\n        if (!(key in newState)) {\n            continue;\n        }\n        const targetValue = newState[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            newState[key] = patchObject(targetValue, subPatch);\n        }\n        else {\n            // objects are either a bit more complex (e.g. refs) or primitives, so we\n            // just set the whole thing\n            if (isVue2) {\n                set(newState, key, subPatch);\n            }\n            else {\n                newState[key] = subPatch;\n            }\n        }\n    }\n    return newState;\n}\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\nfunction acceptHMRUpdate(initialUseStore, hot) {\n    // strip as much as possible from iife.prod\n    if (!(process.env.NODE_ENV !== 'production')) {\n        return () => { };\n    }\n    return (newModule) => {\n        const pinia = hot.data.pinia || initialUseStore._pinia;\n        if (!pinia) {\n            // this store is still not used\n            return;\n        }\n        // preserve the pinia instance across loads\n        hot.data.pinia = pinia;\n        // console.log('got data', newStore)\n        for (const exportName in newModule) {\n            const useStore = newModule[exportName];\n            // console.log('checking for', exportName)\n            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n                // console.log('Accepting update for', useStore.$id)\n                const id = useStore.$id;\n                if (id !== initialUseStore.$id) {\n                    console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`);\n                    // return import.meta.hot.invalidate()\n                    return hot.invalidate();\n                }\n                const existingStore = pinia._s.get(id);\n                if (!existingStore) {\n                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\n                    return;\n                }\n                useStore(pinia, existingStore);\n            }\n        }\n    };\n}\n\nconst noop = () => { };\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\n    subscriptions.push(callback);\n    const removeSubscription = () => {\n        const idx = subscriptions.indexOf(callback);\n        if (idx > -1) {\n            subscriptions.splice(idx, 1);\n            onCleanup();\n        }\n    };\n    if (!detached && getCurrentScope()) {\n        onScopeDispose(removeSubscription);\n    }\n    return removeSubscription;\n}\nfunction triggerSubscriptions(subscriptions, ...args) {\n    subscriptions.slice().forEach((callback) => {\n        callback(...args);\n    });\n}\n\nconst fallbackRunWithContext = (fn) => fn();\n/**\n * Marks a function as an action for `$onAction`\n * @internal\n */\nconst ACTION_MARKER = Symbol();\n/**\n * Action name symbol. Allows to add a name to an action after defining it\n * @internal\n */\nconst ACTION_NAME = Symbol();\nfunction mergeReactiveObjects(target, patchToApply) {\n    // Handle Map instances\n    if (target instanceof Map && patchToApply instanceof Map) {\n        patchToApply.forEach((value, key) => target.set(key, value));\n    }\n    else if (target instanceof Set && patchToApply instanceof Set) {\n        // Handle Set instances\n        patchToApply.forEach(target.add, target);\n    }\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in patchToApply) {\n        if (!patchToApply.hasOwnProperty(key))\n            continue;\n        const subPatch = patchToApply[key];\n        const targetValue = target[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            target.hasOwnProperty(key) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n            // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n            // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n            target[key] = mergeReactiveObjects(targetValue, subPatch);\n        }\n        else {\n            // @ts-expect-error: subPatch is a valid value\n            target[key] = subPatch;\n        }\n    }\n    return target;\n}\nconst skipHydrateSymbol = (process.env.NODE_ENV !== 'production')\n    ? Symbol('pinia:skipHydration')\n    : /* istanbul ignore next */ Symbol();\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\nfunction skipHydrate(obj) {\n    return Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\nfunction shouldHydrate(obj) {\n    return !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\nconst { assign } = Object;\nfunction isComputed(o) {\n    return !!(isRef(o) && o.effect);\n}\nfunction createOptionsStore(id, options, pinia, hot) {\n    const { state, actions, getters } = options;\n    const initialState = pinia.state.value[id];\n    let store;\n    function setup() {\n        if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(pinia.state.value, id, state ? state() : {});\n            }\n            else {\n                pinia.state.value[id] = state ? state() : {};\n            }\n        }\n        // avoid creating a state in pinia.state.value\n        const localState = (process.env.NODE_ENV !== 'production') && hot\n            ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n                toRefs(ref(state ? state() : {}).value)\n            : toRefs(pinia.state.value[id]);\n        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\n            if ((process.env.NODE_ENV !== 'production') && name in localState) {\n                console.warn(`[🍍]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\n            }\n            computedGetters[name] = markRaw(computed(() => {\n                setActivePinia(pinia);\n                // it was created just before\n                const store = pinia._s.get(id);\n                // allow cross using stores\n                /* istanbul ignore if */\n                if (isVue2 && !store._r)\n                    return;\n                // @ts-expect-error\n                // return getters![name].call(context, context)\n                // TODO: avoid reading the getter while assigning with a global variable\n                return getters[name].call(store, store);\n            }));\n            return computedGetters;\n        }, {}));\n    }\n    store = createSetupStore(id, setup, options, pinia, hot, true);\n    return store;\n}\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\n    let scope;\n    const optionsForPlugin = assign({ actions: {} }, options);\n    /* istanbul ignore if */\n    if ((process.env.NODE_ENV !== 'production') && !pinia._e.active) {\n        throw new Error('Pinia destroyed');\n    }\n    // watcher options for $subscribe\n    const $subscribeOptions = { deep: true };\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production') && !isVue2) {\n        $subscribeOptions.onTrigger = (event) => {\n            /* istanbul ignore else */\n            if (isListening) {\n                debuggerEvents = event;\n                // avoid triggering this while the store is being built and the state is being set in pinia\n            }\n            else if (isListening == false && !store._hotUpdating) {\n                // let patch send all the events together later\n                /* istanbul ignore else */\n                if (Array.isArray(debuggerEvents)) {\n                    debuggerEvents.push(event);\n                }\n                else {\n                    console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n                }\n            }\n        };\n    }\n    // internal state\n    let isListening; // set to true at the end\n    let isSyncListening; // set to true at the end\n    let subscriptions = [];\n    let actionSubscriptions = [];\n    let debuggerEvents;\n    const initialState = pinia.state.value[$id];\n    // avoid setting the state for option stores if it is set\n    // by the setup\n    if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n        /* istanbul ignore if */\n        if (isVue2) {\n            set(pinia.state.value, $id, {});\n        }\n        else {\n            pinia.state.value[$id] = {};\n        }\n    }\n    const hotState = ref({});\n    // avoid triggering too many listeners\n    // https://github.com/vuejs/pinia/issues/1129\n    let activeListener;\n    function $patch(partialStateOrMutator) {\n        let subscriptionMutation;\n        isListening = isSyncListening = false;\n        // reset the debugger events since patches are sync\n        /* istanbul ignore else */\n        if ((process.env.NODE_ENV !== 'production')) {\n            debuggerEvents = [];\n        }\n        if (typeof partialStateOrMutator === 'function') {\n            partialStateOrMutator(pinia.state.value[$id]);\n            subscriptionMutation = {\n                type: MutationType.patchFunction,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        else {\n            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n            subscriptionMutation = {\n                type: MutationType.patchObject,\n                payload: partialStateOrMutator,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        const myListenerId = (activeListener = Symbol());\n        nextTick().then(() => {\n            if (activeListener === myListenerId) {\n                isListening = true;\n            }\n        });\n        isSyncListening = true;\n        // because we paused the watcher, we need to manually call the subscriptions\n        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n    }\n    const $reset = isOptionsStore\n        ? function $reset() {\n            const { state } = options;\n            const newState = state ? state() : {};\n            // we use a patch to group all changes into one single subscription\n            this.$patch(($state) => {\n                // @ts-expect-error: FIXME: shouldn't error?\n                assign($state, newState);\n            });\n        }\n        : /* istanbul ignore next */\n            (process.env.NODE_ENV !== 'production')\n                ? () => {\n                    throw new Error(`🍍: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\n                }\n                : noop;\n    function $dispose() {\n        scope.stop();\n        subscriptions = [];\n        actionSubscriptions = [];\n        pinia._s.delete($id);\n    }\n    /**\n     * Helper that wraps function so it can be tracked with $onAction\n     * @param fn - action to wrap\n     * @param name - name of the action\n     */\n    const action = (fn, name = '') => {\n        if (ACTION_MARKER in fn) {\n            fn[ACTION_NAME] = name;\n            return fn;\n        }\n        const wrappedAction = function () {\n            setActivePinia(pinia);\n            const args = Array.from(arguments);\n            const afterCallbackList = [];\n            const onErrorCallbackList = [];\n            function after(callback) {\n                afterCallbackList.push(callback);\n            }\n            function onError(callback) {\n                onErrorCallbackList.push(callback);\n            }\n            // @ts-expect-error\n            triggerSubscriptions(actionSubscriptions, {\n                args,\n                name: wrappedAction[ACTION_NAME],\n                store,\n                after,\n                onError,\n            });\n            let ret;\n            try {\n                ret = fn.apply(this && this.$id === $id ? this : store, args);\n                // handle sync errors\n            }\n            catch (error) {\n                triggerSubscriptions(onErrorCallbackList, error);\n                throw error;\n            }\n            if (ret instanceof Promise) {\n                return ret\n                    .then((value) => {\n                    triggerSubscriptions(afterCallbackList, value);\n                    return value;\n                })\n                    .catch((error) => {\n                    triggerSubscriptions(onErrorCallbackList, error);\n                    return Promise.reject(error);\n                });\n            }\n            // trigger after callbacks\n            triggerSubscriptions(afterCallbackList, ret);\n            return ret;\n        };\n        wrappedAction[ACTION_MARKER] = true;\n        wrappedAction[ACTION_NAME] = name; // will be set later\n        // @ts-expect-error: we are intentionally limiting the returned type to just Fn\n        // because all the added properties are internals that are exposed through `$onAction()` only\n        return wrappedAction;\n    };\n    const _hmrPayload = /*#__PURE__*/ markRaw({\n        actions: {},\n        getters: {},\n        state: [],\n        hotState,\n    });\n    const partialStore = {\n        _p: pinia,\n        // _s: scope,\n        $id,\n        $onAction: addSubscription.bind(null, actionSubscriptions),\n        $patch,\n        $reset,\n        $subscribe(callback, options = {}) {\n            const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\n            const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {\n                if (options.flush === 'sync' ? isSyncListening : isListening) {\n                    callback({\n                        storeId: $id,\n                        type: MutationType.direct,\n                        events: debuggerEvents,\n                    }, state);\n                }\n            }, assign({}, $subscribeOptions, options)));\n            return removeSubscription;\n        },\n        $dispose,\n    };\n    /* istanbul ignore if */\n    if (isVue2) {\n        // start as non ready\n        partialStore._r = false;\n    }\n    const store = reactive((process.env.NODE_ENV !== 'production') || ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT)\n        ? assign({\n            _hmrPayload,\n            _customProperties: markRaw(new Set()), // devtools custom properties\n        }, partialStore\n        // must be added later\n        // setupStore\n        )\n        : partialStore);\n    // store the partial store now so the setup of stores can instantiate each other before they are finished without\n    // creating infinite loops.\n    pinia._s.set($id, store);\n    const runWithContext = (pinia._a && pinia._a.runWithContext) || fallbackRunWithContext;\n    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n    const setupStore = runWithContext(() => pinia._e.run(() => (scope = effectScope()).run(() => setup({ action }))));\n    // overwrite existing actions to support $onAction\n    for (const key in setupStore) {\n        const prop = setupStore[key];\n        if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\n            // mark it as a piece of state to be serialized\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                set(hotState.value, key, toRef(setupStore, key));\n                // createOptionStore directly sets the state in pinia.state.value so we\n                // can just skip that\n            }\n            else if (!isOptionsStore) {\n                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n                if (initialState && shouldHydrate(prop)) {\n                    if (isRef(prop)) {\n                        prop.value = initialState[key];\n                    }\n                    else {\n                        // probably a reactive object, lets recursively assign\n                        // @ts-expect-error: prop is unknown\n                        mergeReactiveObjects(prop, initialState[key]);\n                    }\n                }\n                // transfer the ref to the pinia state to keep everything in sync\n                /* istanbul ignore if */\n                if (isVue2) {\n                    set(pinia.state.value[$id], key, prop);\n                }\n                else {\n                    pinia.state.value[$id][key] = prop;\n                }\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.state.push(key);\n            }\n            // action\n        }\n        else if (typeof prop === 'function') {\n            const actionValue = (process.env.NODE_ENV !== 'production') && hot ? prop : action(prop, key);\n            // this a hot module replacement store because the hotUpdate method needs\n            // to do it with the right context\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(setupStore, key, actionValue);\n            }\n            else {\n                // @ts-expect-error\n                setupStore[key] = actionValue;\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.actions[key] = prop;\n            }\n            // list actions so they can be used in plugins\n            // @ts-expect-error\n            optionsForPlugin.actions[key] = prop;\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            // add getters for devtools\n            if (isComputed(prop)) {\n                _hmrPayload.getters[key] = isOptionsStore\n                    ? // @ts-expect-error\n                        options.getters[key]\n                    : prop;\n                if (IS_CLIENT) {\n                    const getters = setupStore._getters ||\n                        // @ts-expect-error: same\n                        (setupStore._getters = markRaw([]));\n                    getters.push(key);\n                }\n            }\n        }\n    }\n    // add the state, getters, and action properties\n    /* istanbul ignore if */\n    if (isVue2) {\n        Object.keys(setupStore).forEach((key) => {\n            set(store, key, setupStore[key]);\n        });\n    }\n    else {\n        assign(store, setupStore);\n        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n        // Make `storeToRefs()` work with `reactive()` #799\n        assign(toRaw(store), setupStore);\n    }\n    // use this instead of a computed with setter to be able to create it anywhere\n    // without linking the computed lifespan to wherever the store is first\n    // created.\n    Object.defineProperty(store, '$state', {\n        get: () => ((process.env.NODE_ENV !== 'production') && hot ? hotState.value : pinia.state.value[$id]),\n        set: (state) => {\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                throw new Error('cannot set hotState');\n            }\n            $patch(($state) => {\n                // @ts-expect-error: FIXME: shouldn't error?\n                assign($state, state);\n            });\n        },\n    });\n    // add the hotUpdate before plugins to allow them to override it\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production')) {\n        store._hotUpdate = markRaw((newStore) => {\n            store._hotUpdating = true;\n            newStore._hmrPayload.state.forEach((stateKey) => {\n                if (stateKey in store.$state) {\n                    const newStateTarget = newStore.$state[stateKey];\n                    const oldStateSource = store.$state[stateKey];\n                    if (typeof newStateTarget === 'object' &&\n                        isPlainObject(newStateTarget) &&\n                        isPlainObject(oldStateSource)) {\n                        patchObject(newStateTarget, oldStateSource);\n                    }\n                    else {\n                        // transfer the ref\n                        newStore.$state[stateKey] = oldStateSource;\n                    }\n                }\n                // patch direct access properties to allow store.stateProperty to work as\n                // store.$state.stateProperty\n                set(store, stateKey, toRef(newStore.$state, stateKey));\n            });\n            // remove deleted state properties\n            Object.keys(store.$state).forEach((stateKey) => {\n                if (!(stateKey in newStore.$state)) {\n                    del(store, stateKey);\n                }\n            });\n            // avoid devtools logging this as a mutation\n            isListening = false;\n            isSyncListening = false;\n            pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n            isSyncListening = true;\n            nextTick().then(() => {\n                isListening = true;\n            });\n            for (const actionName in newStore._hmrPayload.actions) {\n                const actionFn = newStore[actionName];\n                set(store, actionName, action(actionFn, actionName));\n            }\n            // TODO: does this work in both setup and option store?\n            for (const getterName in newStore._hmrPayload.getters) {\n                const getter = newStore._hmrPayload.getters[getterName];\n                const getterValue = isOptionsStore\n                    ? // special handling of options api\n                        computed(() => {\n                            setActivePinia(pinia);\n                            return getter.call(store, store);\n                        })\n                    : getter;\n                set(store, getterName, getterValue);\n            }\n            // remove deleted getters\n            Object.keys(store._hmrPayload.getters).forEach((key) => {\n                if (!(key in newStore._hmrPayload.getters)) {\n                    del(store, key);\n                }\n            });\n            // remove old actions\n            Object.keys(store._hmrPayload.actions).forEach((key) => {\n                if (!(key in newStore._hmrPayload.actions)) {\n                    del(store, key);\n                }\n            });\n            // update the values used in devtools and to allow deleting new properties later on\n            store._hmrPayload = newStore._hmrPayload;\n            store._getters = newStore._getters;\n            store._hotUpdating = false;\n        });\n    }\n    if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT) {\n        const nonEnumerable = {\n            writable: true,\n            configurable: true,\n            // avoid warning on devtools trying to display this property\n            enumerable: false,\n        };\n        ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach((p) => {\n            Object.defineProperty(store, p, assign({ value: store[p] }, nonEnumerable));\n        });\n    }\n    /* istanbul ignore if */\n    if (isVue2) {\n        // mark the store as ready before plugins\n        store._r = true;\n    }\n    // apply all plugins\n    pinia._p.forEach((extender) => {\n        /* istanbul ignore else */\n        if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT) {\n            const extensions = scope.run(() => extender({\n                store: store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            }));\n            Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));\n            assign(store, extensions);\n        }\n        else {\n            assign(store, scope.run(() => extender({\n                store: store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            })));\n        }\n    });\n    if ((process.env.NODE_ENV !== 'production') &&\n        store.$state &&\n        typeof store.$state === 'object' &&\n        typeof store.$state.constructor === 'function' &&\n        !store.$state.constructor.toString().includes('[native code]')) {\n        console.warn(`[🍍]: The \"state\" must be a plain object. It cannot be\\n` +\n            `\\tstate: () => new MyClass()\\n` +\n            `Found in store \"${store.$id}\".`);\n    }\n    // only apply hydrate to option stores with an initial state in pinia\n    if (initialState &&\n        isOptionsStore &&\n        options.hydrate) {\n        options.hydrate(store.$state, initialState);\n    }\n    isListening = true;\n    isSyncListening = true;\n    return store;\n}\n// allows unused stores to be tree shaken\n/*! #__NO_SIDE_EFFECTS__ */\nfunction defineStore(\n// TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n    let id;\n    let options;\n    const isSetupStore = typeof setup === 'function';\n    if (typeof idOrOptions === 'string') {\n        id = idOrOptions;\n        // the option store setup will contain the actual options in this case\n        options = isSetupStore ? setupOptions : setup;\n    }\n    else {\n        options = idOrOptions;\n        id = idOrOptions.id;\n        if ((process.env.NODE_ENV !== 'production') && typeof id !== 'string') {\n            throw new Error(`[🍍]: \"defineStore()\" must be passed a store id as its first argument.`);\n        }\n    }\n    function useStore(pinia, hot) {\n        const hasContext = hasInjectionContext();\n        pinia =\n            // in test mode, ignore the argument provided as we can always retrieve a\n            // pinia instance with getActivePinia()\n            ((process.env.NODE_ENV === 'test') && activePinia && activePinia._testing ? null : pinia) ||\n                (hasContext ? inject(piniaSymbol, null) : null);\n        if (pinia)\n            setActivePinia(pinia);\n        if ((process.env.NODE_ENV !== 'production') && !activePinia) {\n            throw new Error(`[🍍]: \"getActivePinia()\" was called but there was no active Pinia. Are you trying to use a store before calling \"app.use(pinia)\"?\\n` +\n                `See https://pinia.vuejs.org/core-concepts/outside-component-usage.html for help.\\n` +\n                `This will fail in production.`);\n        }\n        pinia = activePinia;\n        if (!pinia._s.has(id)) {\n            // creating the store registers it in `pinia._s`\n            if (isSetupStore) {\n                createSetupStore(id, setup, options, pinia);\n            }\n            else {\n                createOptionsStore(id, options, pinia);\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                // @ts-expect-error: not the right inferred type\n                useStore._pinia = pinia;\n            }\n        }\n        const store = pinia._s.get(id);\n        if ((process.env.NODE_ENV !== 'production') && hot) {\n            const hotId = '__hot:' + id;\n            const newStore = isSetupStore\n                ? createSetupStore(hotId, setup, options, pinia, true)\n                : createOptionsStore(hotId, assign({}, options), pinia, true);\n            hot._hotUpdate(newStore);\n            // cleanup the state properties and the store from the cache\n            delete pinia.state.value[hotId];\n            pinia._s.delete(hotId);\n        }\n        if ((process.env.NODE_ENV !== 'production') && IS_CLIENT) {\n            const currentInstance = getCurrentInstance();\n            // save stores in instances to access them devtools\n            if (currentInstance &&\n                currentInstance.proxy &&\n                // avoid adding stores that are just built for hot module replacement\n                !hot) {\n                const vm = currentInstance.proxy;\n                const cache = '_pStores' in vm ? vm._pStores : (vm._pStores = {});\n                cache[id] = store;\n            }\n        }\n        // StoreGeneric cannot be casted towards Store\n        return store;\n    }\n    useStore.$id = id;\n    return useStore;\n}\n\nlet mapStoreSuffix = 'Store';\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n    mapStoreSuffix = suffix;\n}\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\nfunction mapStores(...stores) {\n    if ((process.env.NODE_ENV !== 'production') && Array.isArray(stores[0])) {\n        console.warn(`[🍍]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\n            `Replace\\n` +\n            `\\tmapStores([useAuthStore, useCartStore])\\n` +\n            `with\\n` +\n            `\\tmapStores(useAuthStore, useCartStore)\\n` +\n            `This will fail in production if not fixed.`);\n        stores = stores[0];\n    }\n    return stores.reduce((reduced, useStore) => {\n        // @ts-expect-error: $id is added by defineStore\n        reduced[useStore.$id + mapStoreSuffix] = function () {\n            return useStore(this.$pinia);\n        };\n        return reduced;\n    }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            reduced[key] = function () {\n                // @ts-expect-error: FIXME: should work?\n                return useStore(this.$pinia)[key];\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function () {\n                const store = useStore(this.$pinia);\n                const storeKey = keysOrMapper[key];\n                // for some reason TS is unable to infer the type of storeKey to be a\n                // function\n                return typeof storeKey === 'function'\n                    ? storeKey.call(this, store)\n                    : // @ts-expect-error: FIXME: should work?\n                        store[storeKey];\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\nconst mapGetters = mapState;\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapActions(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                // @ts-expect-error: FIXME: should work?\n                return useStore(this.$pinia)[key](...args);\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                // @ts-expect-error: FIXME: should work?\n                return useStore(this.$pinia)[keysOrMapper[key]](...args);\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapWritableState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[key];\n                },\n                set(value) {\n                    return (useStore(this.$pinia)[key] = value);\n                },\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[keysOrMapper[key]];\n                },\n                set(value) {\n                    return (useStore(this.$pinia)[keysOrMapper[key]] = value);\n                },\n            };\n            return reduced;\n        }, {});\n}\n\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\nfunction storeToRefs(store) {\n    // See https://github.com/vuejs/pinia/issues/852\n    // It's easier to just use toRefs() even if it includes more stuff\n    if (isVue2) {\n        // @ts-expect-error: toRefs include methods and others\n        return toRefs(store);\n    }\n    else {\n        const rawStore = toRaw(store);\n        const refs = {};\n        for (const key in rawStore) {\n            const value = rawStore[key];\n            // There is no native method to check for a computed\n            // https://github.com/vuejs/core/pull/4165\n            if (value.effect) {\n                // @ts-expect-error: too hard to type correctly\n                refs[key] =\n                    // ...\n                    computed({\n                        get: () => store[key],\n                        set(value) {\n                            store[key] = value;\n                        },\n                    });\n            }\n            else if (isRef(value) || isReactive(value)) {\n                // @ts-expect-error: the key is state or getter\n                refs[key] =\n                    // ---\n                    toRef(store, key);\n            }\n        }\n        return refs;\n    }\n}\n\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\nconst PiniaVuePlugin = function (_Vue) {\n    // Equivalent of\n    // app.config.globalProperties.$pinia = pinia\n    _Vue.mixin({\n        beforeCreate() {\n            const options = this.$options;\n            if (options.pinia) {\n                const pinia = options.pinia;\n                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n                /* istanbul ignore else */\n                if (!this._provided) {\n                    const provideCache = {};\n                    Object.defineProperty(this, '_provided', {\n                        get: () => provideCache,\n                        set: (v) => Object.assign(provideCache, v),\n                    });\n                }\n                this._provided[piniaSymbol] = pinia;\n                // propagate the pinia instance in an SSR friendly way\n                // avoid adding it to nuxt twice\n                /* istanbul ignore else */\n                if (!this.$pinia) {\n                    this.$pinia = pinia;\n                }\n                pinia._a = this;\n                if (IS_CLIENT) {\n                    // this allows calling useStore() outside of a component setup after\n                    // installing pinia's plugin\n                    setActivePinia(pinia);\n                }\n                if ((((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test')) && IS_CLIENT) {\n                    registerPiniaDevtools(pinia._a, pinia);\n                }\n            }\n            else if (!this.$pinia && options.parent && options.parent.$pinia) {\n                this.$pinia = options.parent.$pinia;\n            }\n        },\n        destroyed() {\n            delete this._pStores;\n        },\n    });\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, disposePinia, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, shouldHydrate, skipHydrate, storeToRefs };\n","import { createElementBlock, defineComponent } from \"vue\";\nexport default defineComponent({\n  name: \"ServerPlaceholder\",\n  render() {\n    return createElementBlock(\"div\");\n  }\n});\n","import { cloneVNode, createElementBlock, defineComponent, getCurrentInstance, h, onMounted, provide, shallowRef } from \"vue\";\nimport { isPromise } from \"@vue/shared\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport ServerPlaceholder from \"./server-placeholder.js\";\nimport { elToStaticVNode } from \"./utils.js\";\nexport const clientOnlySymbol = Symbol.for(\"nuxt:client-only\");\nconst STATIC_DIV = \"<div></div>\";\nexport default defineComponent({\n  name: \"ClientOnly\",\n  inheritAttrs: false,\n  props: [\"fallback\", \"placeholder\", \"placeholderTag\", \"fallbackTag\"],\n  ...import.meta.dev && {\n    slots: Object\n  },\n  setup(props, { slots, attrs }) {\n    const mounted = shallowRef(false);\n    onMounted(() => {\n      mounted.value = true;\n    });\n    if (import.meta.dev) {\n      const nuxtApp = useNuxtApp();\n      nuxtApp._isNuxtPageUsed = true;\n      nuxtApp._isNuxtLayoutUsed = true;\n    }\n    const vm = getCurrentInstance();\n    if (vm) {\n      vm._nuxtClientOnly = true;\n    }\n    provide(clientOnlySymbol, true);\n    return () => {\n      if (mounted.value) {\n        const vnodes = slots.default?.();\n        if (vnodes && vnodes.length === 1) {\n          return [cloneVNode(vnodes[0], attrs)];\n        }\n        return vnodes;\n      }\n      const slot = slots.fallback || slots.placeholder;\n      if (slot) {\n        return h(slot);\n      }\n      const fallbackStr = props.fallback || props.placeholder || \"\";\n      const fallbackTag = props.fallbackTag || props.placeholderTag || \"span\";\n      return createElementBlock(fallbackTag, attrs, fallbackStr);\n    };\n  }\n});\nconst cache = /* @__PURE__ */ new WeakMap();\n// @__NO_SIDE_EFFECTS__\nexport function createClientOnly(component) {\n  if (import.meta.server) {\n    return ServerPlaceholder;\n  }\n  if (cache.has(component)) {\n    return cache.get(component);\n  }\n  const clone = { ...component };\n  if (clone.render) {\n    clone.render = (ctx, cache2, $props, $setup, $data, $options) => {\n      if ($setup.mounted$ ?? ctx.mounted$) {\n        const res = component.render?.bind(ctx)(ctx, cache2, $props, $setup, $data, $options);\n        return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n      }\n      return elToStaticVNode(ctx._.vnode.el, STATIC_DIV);\n    };\n  } else {\n    clone.template &&= `\n      <template v-if=\"mounted$\">${component.template}</template>\n      <template v-else>${STATIC_DIV}</template>\n    `;\n  }\n  clone.setup = (props, ctx) => {\n    const nuxtApp = useNuxtApp();\n    const mounted$ = shallowRef(nuxtApp.isHydrating === false);\n    const instance = getCurrentInstance();\n    if (nuxtApp.isHydrating) {\n      const attrs = { ...instance.attrs };\n      const directives = extractDirectives(instance);\n      for (const key in attrs) {\n        delete instance.attrs[key];\n      }\n      onMounted(() => {\n        Object.assign(instance.attrs, attrs);\n        instance.vnode.dirs = directives;\n      });\n    }\n    onMounted(() => {\n      mounted$.value = true;\n    });\n    const setupState = component.setup?.(props, ctx) || {};\n    if (isPromise(setupState)) {\n      return Promise.resolve(setupState).then((setupState2) => {\n        if (typeof setupState2 !== \"function\") {\n          setupState2 ||= {};\n          setupState2.mounted$ = mounted$;\n          return setupState2;\n        }\n        return (...args) => {\n          if (mounted$.value || !nuxtApp.isHydrating) {\n            const res = setupState2(...args);\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res) : h(res);\n          }\n          return elToStaticVNode(instance?.vnode.el, STATIC_DIV);\n        };\n      });\n    } else {\n      if (typeof setupState === \"function\") {\n        return (...args) => {\n          if (mounted$.value) {\n            const res = setupState(...args);\n            const attrs = clone.inheritAttrs !== false ? ctx.attrs : void 0;\n            return res.children === null || typeof res.children === \"string\" ? cloneVNode(res, attrs) : h(res, attrs);\n          }\n          return elToStaticVNode(instance?.vnode.el, STATIC_DIV);\n        };\n      }\n      return Object.assign(setupState, { mounted$ });\n    }\n  };\n  cache.set(component, clone);\n  return clone;\n}\nfunction extractDirectives(instance) {\n  if (!instance || !instance.vnode.dirs) {\n    return null;\n  }\n  const directives = instance.vnode.dirs;\n  instance.vnode.dirs = null;\n  return directives;\n}\n","import { computed, getCurrentInstance, getCurrentScope, inject, isShallow, nextTick, onBeforeMount, onScopeDispose, onServerPrefetch, onUnmounted, queuePostFlushCb, ref, shallowRef, toRef, toValue, unref, watch } from \"vue\";\nimport { debounce } from \"perfect-debounce\";\nimport { hash } from \"ohash\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { getUserCaller, toArray } from \"../utils.js\";\nimport { clientOnlySymbol } from \"../components/client-only.js\";\nimport { createError } from \"./error.js\";\nimport { onNuxtReady } from \"./ready.js\";\nimport { asyncDataDefaults, granularCachedData, pendingWhenIdle, purgeCachedData, resetAsyncDataToUndefined } from \"#build/nuxt.config.mjs\";\nconst isDefer = (dedupe) => dedupe === \"defer\" || dedupe === false;\nexport function useAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (_isAutoKeyNeeded(args[0], args[1])) {\n    args.unshift(autoKey);\n  }\n  let [_key, _handler, options = {}] = args;\n  let keyChanging = false;\n  const key = computed(() => toValue(_key));\n  if (typeof key.value !== \"string\") {\n    throw new TypeError(\"[nuxt] [useAsyncData] key must be a string.\");\n  }\n  if (typeof _handler !== \"function\") {\n    throw new TypeError(\"[nuxt] [useAsyncData] handler must be a function.\");\n  }\n  const nuxtApp = useNuxtApp();\n  options.server ??= true;\n  options.default ??= getDefault;\n  options.getCachedData ??= getDefaultCachedData;\n  options.lazy ??= false;\n  options.immediate ??= true;\n  options.deep ??= asyncDataDefaults.deep;\n  options.dedupe ??= \"cancel\";\n  const functionName = options._functionName || \"useAsyncData\";\n  if (import.meta.dev && typeof options.dedupe === \"boolean\") {\n    console.warn(`[nuxt] \\`boolean\\` values are deprecated for the \\`dedupe\\` option of \\`${functionName}\\` and will be removed in the future. Use 'cancel' or 'defer' instead.`);\n  }\n  const currentData = nuxtApp._asyncData[key.value];\n  if (import.meta.dev && currentData) {\n    const warnings = [];\n    const values = createHash(_handler, options);\n    if (values.handler !== currentData._hash?.handler) {\n      warnings.push(`different handler`);\n    }\n    for (const opt of [\"transform\", \"pick\", \"getCachedData\"]) {\n      if (values[opt] !== currentData._hash[opt]) {\n        warnings.push(`different \\`${opt}\\` option`);\n      }\n    }\n    if (currentData._default.toString() !== options.default.toString()) {\n      warnings.push(`different \\`default\\` value`);\n    }\n    if (options.deep && isShallow(currentData.data)) {\n      warnings.push(`mismatching \\`deep\\` option`);\n    }\n    if (warnings.length) {\n      const caller = getUserCaller();\n      const explanation = caller ? ` (used at ${caller.source}:${caller.line}:${caller.column})` : \"\";\n      console.warn(`[nuxt] [${functionName}] Incompatible options detected for \"${key.value}\"${explanation}:\n${warnings.map((w) => `- ${w}`).join(\"\\n\")}\nYou can use a different key or move the call to a composable to ensure the options are shared across calls.`);\n    }\n  }\n  function createInitialFetch() {\n    const initialFetchOptions = { cause: \"initial\", dedupe: options.dedupe };\n    if (!nuxtApp._asyncData[key.value]?._init) {\n      initialFetchOptions.cachedData = options.getCachedData(key.value, nuxtApp, { cause: \"initial\" });\n      nuxtApp._asyncData[key.value] = createAsyncData(nuxtApp, key.value, _handler, options, initialFetchOptions.cachedData);\n    }\n    return () => nuxtApp._asyncData[key.value].execute(initialFetchOptions);\n  }\n  const initialFetch = createInitialFetch();\n  const asyncData = nuxtApp._asyncData[key.value];\n  asyncData._deps++;\n  const fetchOnServer = options.server !== false && nuxtApp.payload.serverRendered;\n  if (import.meta.server && fetchOnServer && options.immediate) {\n    const promise = initialFetch();\n    if (getCurrentInstance()) {\n      onServerPrefetch(() => promise);\n    } else {\n      nuxtApp.hook(\"app:created\", async () => {\n        await promise;\n      });\n    }\n  }\n  if (import.meta.client) {\n    let unregister = function(key2) {\n      const data = nuxtApp._asyncData[key2];\n      if (data?._deps) {\n        data._deps--;\n        if (data._deps === 0) {\n          data?._off();\n        }\n      }\n    };\n    const instance = getCurrentInstance();\n    if (instance && fetchOnServer && options.immediate && !instance.sp) {\n      instance.sp = [];\n    }\n    if (import.meta.dev && !nuxtApp.isHydrating && !nuxtApp._processingMiddleware && (!instance || instance?.isMounted)) {\n      console.warn(`[nuxt] [${functionName}] Component is already mounted, please use $fetch instead. See https://nuxt.com/docs/getting-started/data-fetching`);\n    }\n    if (instance && !instance._nuxtOnBeforeMountCbs) {\n      instance._nuxtOnBeforeMountCbs = [];\n      const cbs = instance._nuxtOnBeforeMountCbs;\n      onBeforeMount(() => {\n        cbs.forEach((cb) => {\n          cb();\n        });\n        cbs.splice(0, cbs.length);\n      });\n      onUnmounted(() => cbs.splice(0, cbs.length));\n    }\n    const isWithinClientOnly = instance && (instance._nuxtClientOnly || inject(clientOnlySymbol, false));\n    if (fetchOnServer && nuxtApp.isHydrating && (asyncData.error.value || asyncData.data.value != null)) {\n      if (pendingWhenIdle) {\n        asyncData.pending.value = false;\n      }\n      asyncData.status.value = asyncData.error.value ? \"error\" : \"success\";\n    } else if (instance && (!isWithinClientOnly && nuxtApp.payload.serverRendered && nuxtApp.isHydrating || options.lazy) && options.immediate) {\n      instance._nuxtOnBeforeMountCbs.push(initialFetch);\n    } else if (options.immediate) {\n      initialFetch();\n    }\n    const hasScope = getCurrentScope();\n    const unsubKeyWatcher = watch(key, (newKey, oldKey) => {\n      if ((newKey || oldKey) && newKey !== oldKey) {\n        keyChanging = true;\n        const hadData = nuxtApp._asyncData[oldKey]?.data.value !== asyncDataDefaults.value;\n        const wasRunning = nuxtApp._asyncDataPromises[oldKey] !== void 0;\n        const initialFetchOptions = { cause: \"initial\", dedupe: options.dedupe };\n        if (!nuxtApp._asyncData[newKey]?._init) {\n          let initialValue;\n          if (oldKey && hadData) {\n            initialValue = nuxtApp._asyncData[oldKey].data.value;\n          } else {\n            initialValue = options.getCachedData(newKey, nuxtApp, { cause: \"initial\" });\n            initialFetchOptions.cachedData = initialValue;\n          }\n          nuxtApp._asyncData[newKey] = createAsyncData(nuxtApp, newKey, _handler, options, initialValue);\n        }\n        nuxtApp._asyncData[newKey]._deps++;\n        if (oldKey) {\n          unregister(oldKey);\n        }\n        if (options.immediate || hadData || wasRunning) {\n          nuxtApp._asyncData[newKey].execute(initialFetchOptions);\n        }\n        queuePostFlushCb(() => {\n          keyChanging = false;\n        });\n      }\n    }, { flush: \"sync\" });\n    const unsubParamsWatcher = options.watch ? watch(options.watch, () => {\n      if (keyChanging) {\n        return;\n      }\n      asyncData._execute({ cause: \"watch\", dedupe: options.dedupe });\n    }) : () => {\n    };\n    if (hasScope) {\n      onScopeDispose(() => {\n        unsubKeyWatcher();\n        unsubParamsWatcher();\n        unregister(key.value);\n      });\n    }\n  }\n  const asyncReturn = {\n    data: writableComputedRef(() => nuxtApp._asyncData[key.value]?.data),\n    pending: writableComputedRef(() => nuxtApp._asyncData[key.value]?.pending),\n    status: writableComputedRef(() => nuxtApp._asyncData[key.value]?.status),\n    error: writableComputedRef(() => nuxtApp._asyncData[key.value]?.error),\n    refresh: (...args2) => {\n      if (!nuxtApp._asyncData[key.value]?._init) {\n        const initialFetch2 = createInitialFetch();\n        return initialFetch2();\n      }\n      return nuxtApp._asyncData[key.value].execute(...args2);\n    },\n    execute: (...args2) => asyncReturn.refresh(...args2),\n    clear: () => clearNuxtDataByKey(nuxtApp, key.value)\n  };\n  const asyncDataPromise = Promise.resolve(nuxtApp._asyncDataPromises[key.value]).then(() => asyncReturn);\n  Object.assign(asyncDataPromise, asyncReturn);\n  return asyncDataPromise;\n}\nfunction writableComputedRef(getter) {\n  return computed({\n    get() {\n      return getter()?.value;\n    },\n    set(value) {\n      const ref2 = getter();\n      if (ref2) {\n        ref2.value = value;\n      }\n    }\n  });\n}\nexport function useLazyAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (_isAutoKeyNeeded(args[0], args[1])) {\n    args.unshift(autoKey);\n  }\n  const [key, handler, options = {}] = args;\n  if (import.meta.dev) {\n    options._functionName ||= \"useLazyAsyncData\";\n  }\n  return useAsyncData(key, handler, { ...options, lazy: true }, null);\n}\nfunction _isAutoKeyNeeded(keyOrFetcher, fetcher) {\n  if (typeof keyOrFetcher === \"string\") {\n    return false;\n  }\n  if (typeof keyOrFetcher === \"object\" && keyOrFetcher !== null) {\n    return false;\n  }\n  if (typeof keyOrFetcher === \"function\" && typeof fetcher === \"function\") {\n    return false;\n  }\n  return true;\n}\nexport function useNuxtData(key) {\n  const nuxtApp = useNuxtApp();\n  if (!(key in nuxtApp.payload.data)) {\n    nuxtApp.payload.data[key] = asyncDataDefaults.value;\n  }\n  if (nuxtApp._asyncData[key]) {\n    const data = nuxtApp._asyncData[key];\n    data._deps++;\n    if (getCurrentScope()) {\n      onScopeDispose(() => {\n        data._deps--;\n        if (data._deps === 0) {\n          data?._off();\n        }\n      });\n    }\n  }\n  return {\n    data: computed({\n      get() {\n        return nuxtApp._asyncData[key]?.data.value ?? nuxtApp.payload.data[key];\n      },\n      set(value) {\n        if (nuxtApp._asyncData[key]) {\n          nuxtApp._asyncData[key].data.value = value;\n        } else {\n          nuxtApp.payload.data[key] = value;\n        }\n      }\n    })\n  };\n}\nexport async function refreshNuxtData(keys) {\n  if (import.meta.server) {\n    return Promise.resolve();\n  }\n  await new Promise((resolve) => onNuxtReady(resolve));\n  const _keys = keys ? toArray(keys) : void 0;\n  await useNuxtApp().hooks.callHookParallel(\"app:data:refresh\", _keys);\n}\nexport function clearNuxtData(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.data);\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const key of _keys) {\n    clearNuxtDataByKey(nuxtApp, key);\n  }\n}\nfunction clearNuxtDataByKey(nuxtApp, key) {\n  if (key in nuxtApp.payload.data) {\n    nuxtApp.payload.data[key] = void 0;\n  }\n  if (key in nuxtApp.payload._errors) {\n    nuxtApp.payload._errors[key] = asyncDataDefaults.errorValue;\n  }\n  if (nuxtApp._asyncData[key]) {\n    nuxtApp._asyncData[key].data.value = resetAsyncDataToUndefined ? void 0 : unref(nuxtApp._asyncData[key]._default());\n    nuxtApp._asyncData[key].error.value = asyncDataDefaults.errorValue;\n    if (pendingWhenIdle) {\n      nuxtApp._asyncData[key].pending.value = false;\n    }\n    nuxtApp._asyncData[key].status.value = \"idle\";\n  }\n  if (key in nuxtApp._asyncDataPromises) {\n    if (nuxtApp._asyncDataPromises[key]) {\n      nuxtApp._asyncDataPromises[key].cancelled = true;\n    }\n    nuxtApp._asyncDataPromises[key] = void 0;\n  }\n}\nfunction pick(obj, keys) {\n  const newObj = {};\n  for (const key of keys) {\n    newObj[key] = obj[key];\n  }\n  return newObj;\n}\nfunction createAsyncData(nuxtApp, key, _handler, options, initialCachedData) {\n  nuxtApp.payload._errors[key] ??= asyncDataDefaults.errorValue;\n  const hasCustomGetCachedData = options.getCachedData !== getDefaultCachedData;\n  const handler = import.meta.client || !import.meta.prerender || !nuxtApp.ssrContext?._sharedPrerenderCache ? _handler : () => {\n    const value = nuxtApp.ssrContext._sharedPrerenderCache.get(key);\n    if (value) {\n      return value;\n    }\n    const promise = Promise.resolve().then(() => nuxtApp.runWithContext(() => _handler(nuxtApp)));\n    nuxtApp.ssrContext._sharedPrerenderCache.set(key, promise);\n    return promise;\n  };\n  const _ref = options.deep ? ref : shallowRef;\n  const hasCachedData = initialCachedData != null;\n  const unsubRefreshAsyncData = nuxtApp.hook(\"app:data:refresh\", async (keys) => {\n    if (!keys || keys.includes(key)) {\n      await asyncData.execute({ cause: \"refresh:hook\" });\n    }\n  });\n  const asyncData = {\n    data: _ref(hasCachedData ? initialCachedData : options.default()),\n    pending: pendingWhenIdle ? shallowRef(!hasCachedData) : computed(() => asyncData.status.value === \"pending\"),\n    error: toRef(nuxtApp.payload._errors, key),\n    status: shallowRef(\"idle\"),\n    execute: (...args) => {\n      const [_opts, newValue = void 0] = args;\n      const opts = _opts && newValue === void 0 && typeof _opts === \"object\" ? _opts : {};\n      if (import.meta.dev && newValue !== void 0 && (!_opts || typeof _opts !== \"object\")) {\n        console.warn(`[nuxt] [${options._functionName}] Do not pass \\`execute\\` directly to \\`watch\\`. Instead, use an inline function, such as \\`watch(q, () => execute())\\`.`);\n      }\n      if (nuxtApp._asyncDataPromises[key]) {\n        if (isDefer(opts.dedupe ?? options.dedupe)) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        nuxtApp._asyncDataPromises[key].cancelled = true;\n      }\n      if (granularCachedData || opts.cause === \"initial\" || nuxtApp.isHydrating) {\n        const cachedData = \"cachedData\" in opts ? opts.cachedData : options.getCachedData(key, nuxtApp, { cause: opts.cause ?? \"refresh:manual\" });\n        if (cachedData != null) {\n          nuxtApp.payload.data[key] = asyncData.data.value = cachedData;\n          asyncData.error.value = asyncDataDefaults.errorValue;\n          asyncData.status.value = \"success\";\n          return Promise.resolve(cachedData);\n        }\n      }\n      if (pendingWhenIdle) {\n        asyncData.pending.value = true;\n      }\n      asyncData.status.value = \"pending\";\n      const promise = new Promise(\n        (resolve, reject) => {\n          try {\n            resolve(handler(nuxtApp));\n          } catch (err) {\n            reject(err);\n          }\n        }\n      ).then(async (_result) => {\n        if (promise.cancelled) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        let result = _result;\n        if (options.transform) {\n          result = await options.transform(_result);\n        }\n        if (options.pick) {\n          result = pick(result, options.pick);\n        }\n        if (import.meta.dev && import.meta.server && result == null) {\n          const caller = getUserCaller();\n          const explanation = caller ? ` (used at ${caller.source}:${caller.line}:${caller.column})` : \"\";\n          console.warn(`[nuxt] \\`${options._functionName || \"useAsyncData\"}${explanation}\\` must return a value (it should not be \\`undefined\\` or \\`null\\`) or the request may be duplicated on the client side.`);\n        }\n        nuxtApp.payload.data[key] = result;\n        asyncData.data.value = result;\n        asyncData.error.value = asyncDataDefaults.errorValue;\n        asyncData.status.value = \"success\";\n      }).catch((error) => {\n        if (promise.cancelled) {\n          return nuxtApp._asyncDataPromises[key];\n        }\n        asyncData.error.value = createError(error);\n        asyncData.data.value = unref(options.default());\n        asyncData.status.value = \"error\";\n      }).finally(() => {\n        if (promise.cancelled) {\n          return;\n        }\n        if (pendingWhenIdle) {\n          asyncData.pending.value = false;\n        }\n        delete nuxtApp._asyncDataPromises[key];\n      });\n      nuxtApp._asyncDataPromises[key] = promise;\n      return nuxtApp._asyncDataPromises[key];\n    },\n    _execute: debounce((...args) => asyncData.execute(...args), 0, { leading: true }),\n    _default: options.default,\n    _deps: 0,\n    _init: true,\n    _hash: import.meta.dev ? createHash(_handler, options) : void 0,\n    _off: () => {\n      unsubRefreshAsyncData();\n      if (nuxtApp._asyncData[key]?._init) {\n        nuxtApp._asyncData[key]._init = false;\n      }\n      if (purgeCachedData && !hasCustomGetCachedData) {\n        nextTick(() => {\n          if (!nuxtApp._asyncData[key]?._init) {\n            clearNuxtDataByKey(nuxtApp, key);\n            asyncData.execute = () => Promise.resolve();\n            asyncData.data.value = asyncDataDefaults.value;\n          }\n        });\n      }\n    }\n  };\n  return asyncData;\n}\nconst getDefault = () => asyncDataDefaults.value;\nconst getDefaultCachedData = (key, nuxtApp, ctx) => {\n  if (nuxtApp.isHydrating) {\n    return nuxtApp.payload.data[key];\n  }\n  if (ctx.cause !== \"refresh:manual\" && ctx.cause !== \"refresh:hook\") {\n    return nuxtApp.static.data[key];\n  }\n};\nfunction createHash(_handler, options) {\n  return {\n    handler: hash(_handler),\n    transform: options.transform ? hash(options.transform) : void 0,\n    pick: options.pick ? hash(options.pick) : void 0,\n    getCachedData: options.getCachedData ? hash(options.getCachedData) : void 0\n  };\n}\n","\nimport { _replaceAppConfig } from '#app/config'\nimport { defuFn } from 'defu'\n\nconst inlineConfig = {\n  \"nuxt\": {},\n  \"icon\": {\n    \"provider\": \"server\",\n    \"class\": \"\",\n    \"aliases\": {},\n    \"iconifyApiEndpoint\": \"https://api.iconify.design\",\n    \"localApiEndpoint\": \"/api/_nuxt_icon\",\n    \"fallbackToApi\": true,\n    \"cssSelectorPrefix\": \"i-\",\n    \"cssWherePseudo\": true,\n    \"mode\": \"css\",\n    \"attrs\": {\n      \"aria-hidden\": true\n    },\n    \"collections\": [\n      \"academicons\",\n      \"akar-icons\",\n      \"ant-design\",\n      \"arcticons\",\n      \"basil\",\n      \"bi\",\n      \"bitcoin-icons\",\n      \"bpmn\",\n      \"brandico\",\n      \"bx\",\n      \"bxl\",\n      \"bxs\",\n      \"bytesize\",\n      \"carbon\",\n      \"catppuccin\",\n      \"cbi\",\n      \"charm\",\n      \"ci\",\n      \"cib\",\n      \"cif\",\n      \"cil\",\n      \"circle-flags\",\n      \"circum\",\n      \"clarity\",\n      \"codicon\",\n      \"covid\",\n      \"cryptocurrency\",\n      \"cryptocurrency-color\",\n      \"dashicons\",\n      \"devicon\",\n      \"devicon-plain\",\n      \"ei\",\n      \"el\",\n      \"emojione\",\n      \"emojione-monotone\",\n      \"emojione-v1\",\n      \"entypo\",\n      \"entypo-social\",\n      \"eos-icons\",\n      \"ep\",\n      \"et\",\n      \"eva\",\n      \"f7\",\n      \"fa\",\n      \"fa-brands\",\n      \"fa-regular\",\n      \"fa-solid\",\n      \"fa6-brands\",\n      \"fa6-regular\",\n      \"fa6-solid\",\n      \"fad\",\n      \"fe\",\n      \"feather\",\n      \"file-icons\",\n      \"flag\",\n      \"flagpack\",\n      \"flat-color-icons\",\n      \"flat-ui\",\n      \"flowbite\",\n      \"fluent\",\n      \"fluent-emoji\",\n      \"fluent-emoji-flat\",\n      \"fluent-emoji-high-contrast\",\n      \"fluent-mdl2\",\n      \"fontelico\",\n      \"fontisto\",\n      \"formkit\",\n      \"foundation\",\n      \"fxemoji\",\n      \"gala\",\n      \"game-icons\",\n      \"geo\",\n      \"gg\",\n      \"gis\",\n      \"gravity-ui\",\n      \"gridicons\",\n      \"grommet-icons\",\n      \"guidance\",\n      \"healthicons\",\n      \"heroicons\",\n      \"heroicons-outline\",\n      \"heroicons-solid\",\n      \"hugeicons\",\n      \"humbleicons\",\n      \"ic\",\n      \"icomoon-free\",\n      \"icon-park\",\n      \"icon-park-outline\",\n      \"icon-park-solid\",\n      \"icon-park-twotone\",\n      \"iconamoon\",\n      \"iconoir\",\n      \"icons8\",\n      \"il\",\n      \"ion\",\n      \"iwwa\",\n      \"jam\",\n      \"la\",\n      \"lets-icons\",\n      \"line-md\",\n      \"logos\",\n      \"ls\",\n      \"lucide\",\n      \"lucide-lab\",\n      \"mage\",\n      \"majesticons\",\n      \"maki\",\n      \"map\",\n      \"marketeq\",\n      \"material-symbols\",\n      \"material-symbols-light\",\n      \"mdi\",\n      \"mdi-light\",\n      \"medical-icon\",\n      \"memory\",\n      \"meteocons\",\n      \"mi\",\n      \"mingcute\",\n      \"mono-icons\",\n      \"mynaui\",\n      \"nimbus\",\n      \"nonicons\",\n      \"noto\",\n      \"noto-v1\",\n      \"octicon\",\n      \"oi\",\n      \"ooui\",\n      \"openmoji\",\n      \"oui\",\n      \"pajamas\",\n      \"pepicons\",\n      \"pepicons-pencil\",\n      \"pepicons-pop\",\n      \"pepicons-print\",\n      \"ph\",\n      \"pixelarticons\",\n      \"prime\",\n      \"ps\",\n      \"quill\",\n      \"radix-icons\",\n      \"raphael\",\n      \"ri\",\n      \"rivet-icons\",\n      \"si-glyph\",\n      \"simple-icons\",\n      \"simple-line-icons\",\n      \"skill-icons\",\n      \"solar\",\n      \"streamline\",\n      \"streamline-emojis\",\n      \"subway\",\n      \"svg-spinners\",\n      \"system-uicons\",\n      \"tabler\",\n      \"tdesign\",\n      \"teenyicons\",\n      \"token\",\n      \"token-branded\",\n      \"topcoat\",\n      \"twemoji\",\n      \"typcn\",\n      \"uil\",\n      \"uim\",\n      \"uis\",\n      \"uit\",\n      \"uiw\",\n      \"unjs\",\n      \"vaadin\",\n      \"vs\",\n      \"vscode-icons\",\n      \"websymbol\",\n      \"weui\",\n      \"whh\",\n      \"wi\",\n      \"wpf\",\n      \"zmdi\",\n      \"zondicons\"\n    ],\n    \"fetchTimeout\": 1500\n  }\n}\n\n// Vite - webpack is handled directly in #app/config\nif (import.meta.hot) {\n  import.meta.hot.accept((newModule) => {\n    _replaceAppConfig(newModule.default)\n  })\n}\n\n\n\nexport default /*@__PURE__*/ defuFn(inlineConfig)\n","import { reactive } from \"vue\";\nimport { klona } from \"klona\";\nimport { useNuxtApp } from \"./nuxt.js\";\nimport __appConfig from \"#build/app.config.mjs\";\nexport const _getAppConfig = () => __appConfig;\nfunction isPojoOrArray(val) {\n  return Array.isArray(val) || !!val && typeof val === \"object\" && val.constructor?.name === \"Object\";\n}\nfunction deepDelete(obj, newObj) {\n  for (const key in obj) {\n    const val = newObj[key];\n    if (!(key in newObj)) {\n      delete obj[key];\n    }\n    if (isPojoOrArray(val)) {\n      deepDelete(obj[key], newObj[key]);\n    }\n  }\n}\nfunction deepAssign(obj, newObj) {\n  for (const key in newObj) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const val = newObj[key];\n    if (isPojoOrArray(val)) {\n      const defaultVal = Array.isArray(val) ? [] : {};\n      obj[key] ||= defaultVal;\n      deepAssign(obj[key], val);\n    } else {\n      obj[key] = val;\n    }\n  }\n}\nexport function useAppConfig() {\n  const nuxtApp = useNuxtApp();\n  nuxtApp._appConfig ||= import.meta.server ? klona(__appConfig) : reactive(__appConfig);\n  return nuxtApp._appConfig;\n}\nexport function _replaceAppConfig(newConfig) {\n  const appConfig = useAppConfig();\n  deepAssign(appConfig, newConfig);\n  deepDelete(appConfig, newConfig);\n}\nexport function updateAppConfig(appConfig) {\n  const _appConfig = useAppConfig();\n  deepAssign(_appConfig, appConfig);\n}\nif (import.meta.dev) {\n  if (import.meta.hot) {\n    import.meta.hot.accept((newModule) => {\n      const newConfig = newModule?._getAppConfig();\n      if (newConfig) {\n        _replaceAppConfig(newConfig);\n      }\n    });\n  }\n  if (import.meta.webpackHot) {\n    import.meta.webpackHot.accept(\"#build/app.config.mjs\", () => {\n      _replaceAppConfig(__appConfig);\n    });\n  }\n}\n","import { createPinia, setActivePinia } from \"pinia\";\nimport { defineNuxtPlugin } from \"#app\";\nconst plugin = defineNuxtPlugin({\n  name: \"pinia\",\n  setup(nuxtApp) {\n    const pinia = createPinia();\n    nuxtApp.vueApp.use(pinia);\n    setActivePinia(pinia);\n    if (import.meta.server) {\n      nuxtApp.payload.pinia = pinia.state.value;\n    } else if (nuxtApp.payload && nuxtApp.payload.pinia) {\n      pinia.state.value = nuxtApp.payload.pinia;\n    }\n    return {\n      provide: {\n        pinia\n      }\n    };\n  }\n});\nexport default plugin;\n","import { computed, defineComponent, h } from \"vue\";\nimport { NuxtIconCss } from \"./css.js\";\nimport { NuxtIconSvg } from \"./svg.js\";\nimport { useResolvedName } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp } from \"#imports\";\nexport default defineComponent({\n  name: \"NuxtIcon\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: null\n    },\n    size: {\n      type: [Number, String],\n      required: false,\n      default: null\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxtApp = useNuxtApp();\n    const runtimeOptions = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const component = computed(\n      () => nuxtApp.vueApp?.component(name.value) || ((props.mode || runtimeOptions.mode) === \"svg\" ? NuxtIconSvg : NuxtIconCss)\n    );\n    const style = computed(() => {\n      const size = props.size || runtimeOptions.size;\n      return size ? { fontSize: Number.isNaN(+size) ? size : size + \"px\" } : null;\n    });\n    return () => h(\n      component.value,\n      {\n        ...runtimeOptions.attrs,\n        name: name.value,\n        class: runtimeOptions.class,\n        style: style.value,\n        customize: props.customize\n      },\n      slots\n    );\n  }\n});\n","import { defineNuxtPlugin } from '#app/nuxt'\nimport { LazyIcon } from '#components'\nconst lazyGlobalComponents = [\n  [\"Icon\", LazyIcon],\n  \n]\n\nexport default defineNuxtPlugin({\n  name: 'nuxt:global-components',\n  setup (nuxtApp) {\n    for (const [name, component] of lazyGlobalComponents) {\n      nuxtApp.vueApp.component(name, component)\n      nuxtApp.vueApp.component('Lazy' + name, component)\n    }\n  }\n})\n","import { addAPIProvider, _api, setCustomIconsLoader } from \"@iconify/vue\";\nimport { defineNuxtPlugin, useAppConfig, useRuntimeConfig } from \"#imports\";\nexport default defineNuxtPlugin({\n  name: \"@nuxt/icon\",\n  setup() {\n    const configs = useRuntimeConfig();\n    const options = useAppConfig().icon;\n    _api.setFetch($fetch.native);\n    const resources = [];\n    if (options.provider === \"server\") {\n      const baseURL = configs.app?.baseURL?.replace(/\\/$/, \"\") ?? \"\";\n      resources.push(baseURL + (options.localApiEndpoint || \"/api/_nuxt_icon\"));\n      if (options.fallbackToApi === true || options.fallbackToApi === \"client-only\") {\n        resources.push(options.iconifyApiEndpoint);\n      }\n    } else if (options.provider === \"none\") {\n      _api.setFetch(() => Promise.resolve(new Response()));\n    } else {\n      resources.push(options.iconifyApiEndpoint);\n    }\n    async function customIconLoader(icons, prefix) {\n      try {\n        const data = await $fetch(resources[0] + \"/\" + prefix + \".json\", {\n          query: {\n            icons: icons.join(\",\")\n          }\n        });\n        if (!data || data.prefix !== prefix || !data.icons)\n          throw new Error(\"Invalid data\" + JSON.stringify(data));\n        return data;\n      } catch (e) {\n        console.error(\"Failed to load custom icons\", e);\n        return null;\n      }\n    }\n    addAPIProvider(\"\", { resources });\n    for (const prefix of options.customCollections || []) {\n      if (prefix)\n        setCustomIconsLoader(customIconLoader, prefix);\n    }\n  }\n  // For type portability\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n});\n","import unhead_k2P3m_ZDyjlr2mMYnoDPwavjsDN8hBlk9cFai0bbopU from \"/Users/mac/Desktop/AL-Tech/Q-A-Project/frontend/node_modules/nuxt/dist/head/runtime/plugins/unhead.js\";\nimport router_DclsWNDeVV7SyG4lslgLnjbQUK1ws8wgf2FHaAbo7Cw from \"/Users/mac/Desktop/AL-Tech/Q-A-Project/frontend/node_modules/nuxt/dist/app/plugins/router.js\";\nimport revive_payload_server_MVtmlZaQpj6ApFmshWfUWl5PehCebzaBf2NuRMiIbms from \"/Users/mac/Desktop/AL-Tech/Q-A-Project/frontend/node_modules/nuxt/dist/app/plugins/revive-payload.server.js\";\nimport plugin_vue3_CQ_pO3THrTGIeYc0dvC91V75hY8qpo9B_8yZzOW5SFs from \"/Users/mac/Desktop/AL-Tech/Q-A-Project/frontend/node_modules/@pinia/nuxt/dist/runtime/plugin.vue3.js\";\nimport components_plugin_z4hgvsiddfKkfXTP6M8M4zG5Cb7sGnDhcryKVM45Di4 from \"/Users/mac/Desktop/AL-Tech/Q-A-Project/frontend/.nuxt/components.plugin.mjs\";\nimport plugin_MeUvTuoKUi51yb_kBguab6hdcExVXeTtZtTg9TZZBB8 from \"/Users/mac/Desktop/AL-Tech/Q-A-Project/frontend/node_modules/@nuxt/icon/dist/runtime/plugin.js\";\nexport default [\n  unhead_k2P3m_ZDyjlr2mMYnoDPwavjsDN8hBlk9cFai0bbopU,\n  router_DclsWNDeVV7SyG4lslgLnjbQUK1ws8wgf2FHaAbo7Cw,\n  revive_payload_server_MVtmlZaQpj6ApFmshWfUWl5PehCebzaBf2NuRMiIbms,\n  plugin_vue3_CQ_pO3THrTGIeYc0dvC91V75hY8qpo9B_8yZzOW5SFs,\n  components_plugin_z4hgvsiddfKkfXTP6M8M4zG5Cb7sGnDhcryKVM45Di4,\n  plugin_MeUvTuoKUi51yb_kBguab6hdcExVXeTtZtTg9TZZBB8\n]","import { computed } from \"vue\";\nimport { getIcon as _getIcon, addIcon as _addIcon, loadIcon as _loadIcon } from \"@iconify/vue\";\nimport { useAppConfig } from \"#imports\";\nimport { init as initClientBundle } from \"#build/nuxt-icon-client-bundle\";\nexport { initClientBundle };\nexport async function loadIcon(name, timeout) {\n  if (!name)\n    return null;\n  initClientBundle(_addIcon);\n  const _icon = _getIcon(name);\n  if (_icon)\n    return _icon;\n  let timeoutWarn;\n  const load = _loadIcon(name).catch(() => {\n    console.warn(`[Icon] failed to load icon \\`${name}\\``);\n    return null;\n  });\n  if (timeout > 0)\n    await Promise.race([\n      load,\n      new Promise((resolve) => {\n        timeoutWarn = setTimeout(() => {\n          console.warn(`[Icon] loading icon \\`${name}\\` timed out after ${timeout}ms`);\n          resolve();\n        }, timeout);\n      })\n    ]).finally(() => clearTimeout(timeoutWarn));\n  else\n    await load;\n  return _getIcon(name);\n}\nexport function useResolvedName(getName) {\n  const options = useAppConfig().icon;\n  const collections = (options.collections || []).sort((a, b) => b.length - a.length);\n  return computed(() => {\n    const name = getName();\n    const bare = name.startsWith(options.cssSelectorPrefix) ? name.slice(options.cssSelectorPrefix.length) : name;\n    const resolved = options.aliases?.[bare] || bare;\n    if (!resolved.includes(\":\")) {\n      const collection = collections.find((c) => resolved.startsWith(c + \"-\"));\n      return collection ? collection + \":\" + resolved.slice(collection.length + 1) : resolved;\n    }\n    return resolved;\n  });\n}\nexport function resolveCustomizeFn(customize, globalCustomize) {\n  if (customize === false) return void 0;\n  if (customize === true || customize === null) return globalCustomize;\n  return customize;\n}\n","import { addIcon, getIcon as _getIcon } from \"@iconify/vue\";\nimport { computed, watch, h, defineComponent } from \"vue\";\nimport { getIconCSS } from \"@iconify/utils/lib/css/icon\";\nimport { loadIcon, resolveCustomizeFn } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp, useHead, useRuntimeConfig, onServerPrefetch } from \"#imports\";\nlet cssSelectors;\nconst SYMBOL_SERVER_CSS = \"NUXT_ICONS_SERVER_CSS\";\nfunction escapeCssSelector(selector) {\n  return selector.replace(/([^\\w-])/g, \"\\\\$1\");\n}\nfunction getAllSelectors() {\n  if (cssSelectors)\n    return cssSelectors;\n  cssSelectors = /* @__PURE__ */ new Set();\n  const filter = (selector) => {\n    selector = selector.replace(/^:where\\((.*)\\)$/, \"$1\").trim();\n    if (selector.startsWith(\".\")) {\n      return selector;\n    }\n  };\n  const scanCssRules = (rules) => {\n    if (!rules?.length)\n      return;\n    for (const rule of rules) {\n      if (rule?.cssRules) {\n        scanCssRules(rule.cssRules);\n      }\n      const selectorRaw = rule?.selectorText;\n      if (typeof selectorRaw === \"string\") {\n        const selector = filter(selectorRaw);\n        if (selector)\n          cssSelectors.add(selector);\n      }\n    }\n  };\n  if (typeof document !== \"undefined\") {\n    for (const styleSheet of document.styleSheets) {\n      try {\n        const rules = styleSheet.cssRules || styleSheet.rules;\n        scanCssRules(rules);\n      } catch {\n      }\n    }\n  }\n  return cssSelectors;\n}\nexport const NuxtIconCss = /* @__PURE__ */ defineComponent({\n  name: \"NuxtIconCss\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props) {\n    const nuxt = useNuxtApp();\n    const options = useAppConfig().icon;\n    const cssClass = computed(() => props.name ? options.cssSelectorPrefix + props.name : \"\");\n    function getIcon(name) {\n      if (!name)\n        return;\n      const icon = _getIcon(name);\n      if (icon)\n        return icon;\n      const payload = nuxt.payload?.data?.[name];\n      if (payload) {\n        addIcon(name, payload);\n        return payload;\n      }\n    }\n    const selector = computed(() => \".\" + escapeCssSelector(cssClass.value));\n    function getCSS(icon, withLayer = true) {\n      let iconSelector = selector.value;\n      if (options.cssWherePseudo) {\n        iconSelector = `:where(${iconSelector})`;\n      }\n      const css = getIconCSS(icon, {\n        iconSelector,\n        format: \"compressed\",\n        customise: resolveCustomizeFn(props.customize, options.customize)\n      });\n      if (options.cssLayer && withLayer) {\n        return `@layer ${options.cssLayer} { ${css} }`;\n      }\n      return css;\n    }\n    if (import.meta.client) {\n      const selectors = getAllSelectors();\n      async function mountCSS(icon) {\n        if (selectors.has(selector.value))\n          return;\n        if (typeof document === \"undefined\")\n          return;\n        const style = document.createElement(\"style\");\n        style.textContent = getCSS(icon);\n        if (import.meta.dev) {\n          style.dataset.nuxtIconDev = props.name;\n        }\n        const firstStyle = document.head.querySelector('style, link[rel=\"stylesheet\"]');\n        if (firstStyle)\n          document.head.insertBefore(style, firstStyle);\n        else\n          document.head.appendChild(style);\n        selectors.add(selector.value);\n      }\n      watch(\n        () => props.name,\n        () => {\n          if (selectors.has(selector.value)) {\n            return;\n          }\n          const data = getIcon(props.name);\n          if (data) {\n            mountCSS(data);\n          } else {\n            loadIcon(props.name, import.meta.server ? options.fetchTimeout : -1).then((data2) => {\n              if (data2)\n                mountCSS(data2);\n            }).catch(() => null);\n          }\n        },\n        { immediate: true }\n      );\n    }\n    onServerPrefetch(async () => {\n      if (import.meta.server) {\n        const configs = useRuntimeConfig().icon || {};\n        if (!configs?.serverKnownCssClasses?.includes(cssClass.value)) {\n          const icon = await loadIcon(props.name, options.fetchTimeout).catch(() => null);\n          if (!icon)\n            return null;\n          let ssrCSS = nuxt.vueApp._context.provides[SYMBOL_SERVER_CSS];\n          if (!ssrCSS) {\n            ssrCSS = nuxt.vueApp._context.provides[SYMBOL_SERVER_CSS] = /* @__PURE__ */ new Map();\n            nuxt.runWithContext(() => {\n              useHead({\n                style: [\n                  () => {\n                    const sep = import.meta.dev ? \"\\n\" : \"\";\n                    let css = Array.from(ssrCSS.values()).sort().join(sep);\n                    if (options.cssLayer) {\n                      css = `@layer ${options.cssLayer} {${sep}${css}${sep}}`;\n                    }\n                    return { innerHTML: css };\n                  }\n                ]\n              }, {\n                tagPriority: \"low\"\n              });\n            });\n          }\n          if (props.name && !ssrCSS.has(props.name)) {\n            const css = getCSS(icon, false);\n            ssrCSS.set(props.name, css);\n          }\n          return null;\n        }\n      }\n    });\n    return () => h(\"span\", { class: [\"iconify\", cssClass.value] });\n  }\n});\n","import { Icon as Iconify, addIcon } from \"@iconify/vue\";\nimport { h } from \"vue\";\nimport { initClientBundle, loadIcon, useResolvedName, resolveCustomizeFn } from \"./shared.js\";\nimport { useAsyncData, useNuxtApp, defineComponent, useAppConfig, onServerPrefetch } from \"#imports\";\nexport const NuxtIconSvg = /* @__PURE__ */ defineComponent({\n  name: \"NuxtIconSvg\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxt = useNuxtApp();\n    const options = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const storeKey = \"i-\" + name.value;\n    if (name.value) {\n      onServerPrefetch(async () => {\n        if (import.meta.server) {\n          await useAsyncData(\n            storeKey,\n            async () => await loadIcon(name.value, options.fetchTimeout),\n            { deep: false }\n          );\n        }\n      });\n      if (import.meta.client) {\n        const payload = nuxt.payload.data[storeKey];\n        if (payload) {\n          addIcon(name.value, payload);\n        } else {\n          initClientBundle(addIcon);\n        }\n      }\n    }\n    return () => h(Iconify, {\n      icon: name.value,\n      ssr: true,\n      // Iconify uses `customise`, where we expose `customize` for consistency\n      customise: resolveCustomizeFn(props.customize, options.customize)\n    }, slots);\n  }\n});\n","import { computed, defineComponent, h } from \"vue\";\nimport { NuxtIconCss } from \"./css.js\";\nimport { NuxtIconSvg } from \"./svg.js\";\nimport { useResolvedName } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp } from \"#imports\";\nexport default defineComponent({\n  name: \"NuxtIcon\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: null\n    },\n    size: {\n      type: [Number, String],\n      required: false,\n      default: null\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxtApp = useNuxtApp();\n    const runtimeOptions = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const component = computed(\n      () => nuxtApp.vueApp?.component(name.value) || ((props.mode || runtimeOptions.mode) === \"svg\" ? NuxtIconSvg : NuxtIconCss)\n    );\n    const style = computed(() => {\n      const size = props.size || runtimeOptions.size;\n      return size ? { fontSize: Number.isNaN(+size) ? size : size + \"px\" } : null;\n    });\n    return () => h(\n      component.value,\n      {\n        ...runtimeOptions.attrs,\n        name: name.value,\n        class: runtimeOptions.class,\n        style: style.value,\n        customize: props.customize\n      },\n      slots\n    );\n  }\n});\n","export enum UserRole {\n  CLIENT = 'client',\n  EXPERT = 'expert',\n  ADMIN = 'admin'\n}\n\nexport interface User {\n  id: string\n  email: string\n  name: string\n  role: UserRole\n  avatar?: string\n  subjects?: string[] // For experts - their assigned subjects\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Question {\n  id: string\n  content: string\n  subject: string\n  status: QuestionStatus\n  userId: string\n  createdAt: string\n  updatedAt: string\n}\n\nexport enum QuestionStatus {\n  PENDING = 'pending',\n  PROCESSING = 'processing',\n  AI_RESPONDED = 'ai_responded',\n  EXPERT_REVIEW = 'expert_review',\n  APPROVED = 'approved',\n  REJECTED = 'rejected',\n  COMPLETED = 'completed',\n  FAILED = 'failed'\n}\n\nexport interface Message {\n  id: string\n  content: string\n  type: 'text' | 'image'\n  imageUrl?: string\n  sender: 'user' | 'ai' | 'expert' | 'system'\n  timestamp: string\n  questionId?: string\n  status?: string\n}\n\nexport interface ExpertReview {\n  id: string\n  questionId: string\n  expertId: string\n  aiResponse: string\n  expertDecision: 'approved' | 'rejected'\n  expertNotes?: string\n  reviewedAt: string\n}\n\nexport interface PendingReview {\n  id: string\n  questionId: string\n  question: string\n  subject: string\n  aiResponse: string\n  submittedAt: string\n  userId: string\n  userName: string\n}\n\nexport interface APIResponse<T = any> {\n  success: boolean\n  message: string\n  data?: T\n  error?: string\n}","import { useRuntimeConfig } from '#app'\n\nexport const useApi = () => {\n  const config = useRuntimeConfig()\n  const baseURL = config.public.apiBase || 'http://localhost:8000'\n\n  const api = $fetch.create({\n    baseURL,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n\n  // Authentication\n  const login = async (email: string, password: string) => {\n    return await api('/auth/login', {\n      method: 'POST',\n      body: { email, password }\n    })\n  }\n\n  const register = async (userData: any) => {\n    return await api('/auth/register', {\n      method: 'POST',\n      body: userData\n    })\n  }\n\n  const registerClient = async (userData: any) => {\n    return await api('/auth/register/client', {\n      method: 'POST',\n      body: { ...userData, role: 'client' }\n    })\n  }\n\n  const registerExpert = async (userData: any) => {\n    return await api('/auth/register/expert', {\n      method: 'POST',\n      body: { ...userData, role: 'expert' }\n    })\n  }\n\n  // Role-specific login endpoints\n  const loginClient = async (email: string, password: string) => {\n    return await api('/auth/login/client', {\n      method: 'POST',\n      body: { email, password }\n    })\n  }\n\n  const loginExpert = async (email: string, password: string) => {\n    return await api('/auth/login/expert', {\n      method: 'POST',\n      body: { email, password }\n    })\n  }\n\n  const loginAdmin = async (email: string, password: string) => {\n    return await api('/auth/login/admin', {\n      method: 'POST',\n      body: { email, password }\n    })\n  }\n\n  // Questions\n  const submitQuestion = async (questionData: {\n    content: string\n    subject: string\n    userId: string\n    type?: 'text' | 'image'\n    imageUrl?: string\n  }) => {\n    return await api('/questions/submit', {\n      method: 'POST',\n      body: questionData\n    })\n  }\n\n  const getQuestions = async (userId?: string, status?: string) => {\n    const params = new URLSearchParams()\n    if (userId) params.append('user_id', userId)\n    if (status) params.append('status', status)\n    \n    return await api(`/questions?${params.toString()}`)\n  }\n\n  const getQuestionById = async (questionId: string) => {\n    return await api(`/questions/${questionId}`)\n  }\n\n  // AI Service\n  const processWithAI = async (questionId: string) => {\n    return await api(`/ai/process/${questionId}`, {\n      method: 'POST'\n    })\n  }\n\n  const getAIResponse = async (questionId: string) => {\n    return await api(`/ai/response/${questionId}`)\n  }\n\n  // Expert Reviews\n  const getPendingReviews = async (expertId: string, subjects: string[]) => {\n    return await api('/expert/reviews/pending', {\n      method: 'POST',\n      body: { expertId, subjects }\n    })\n  }\n\n  const submitExpertReview = async (reviewData: {\n    questionId: string\n    expertId: string\n    decision: 'approved' | 'rejected'\n    notes?: string\n  }) => {\n    return await api('/expert/reviews/submit', {\n      method: 'POST',\n      body: reviewData\n    })\n  }\n\n  // Poe API Integration\n  const queryPoeModels = async (models: string[], question: string, subject: string) => {\n    return await api('/poe/query-multiple', {\n      method: 'POST',\n      body: { models, question, subject }\n    })\n  }\n\n  const getPoeModels = async () => {\n    return await api('/poe/models')\n  }\n\n  // Humanization\n  const humanizeResponse = async (responseId: string) => {\n    return await api(`/humanization/process/${responseId}`, {\n      method: 'POST'\n    })\n  }\n\n  // Originality Check\n  const checkOriginality = async (responseId: string) => {\n    return await api(`/originality/check/${responseId}`, {\n      method: 'POST'\n    })\n  }\n\n  // Admin Functions\n  const getUsers = async () => {\n    return await api('/admin/users')\n  }\n\n  const updateUserSubjects = async (userId: string, subjects: string[]) => {\n    return await api(`/admin/users/${userId}/subjects`, {\n      method: 'PUT',\n      body: { subjects }\n    })\n  }\n\n  const getSystemStats = async () => {\n    return await api('/admin/stats')\n  }\n\n  // WebSocket connection for real-time updates\n  const connectWebSocket = (onMessage: (data: any) => void, onError?: (error: any) => void) => {\n    const wsUrl = config.public.wsUrl || 'ws://localhost:8000/ws'\n    const ws = new WebSocket(wsUrl)\n    \n    ws.onopen = () => {\n      console.log('WebSocket connected')\n    }\n    \n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data)\n        onMessage(data)\n      } catch (error) {\n        console.error('WebSocket message parse error:', error)\n      }\n    }\n    \n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error)\n      if (onError) onError(error)\n    }\n    \n    ws.onclose = () => {\n      console.log('WebSocket disconnected')\n      // Attempt to reconnect after 5 seconds\n      setTimeout(() => {\n        if (ws.readyState === WebSocket.CLOSED) {\n          connectWebSocket(onMessage, onError)\n        }\n      }, 5000)\n    }\n    \n    return ws\n  }\n\n  return {\n    // Authentication\n    login,\n    register,\n    registerClient,\n    registerExpert,\n    loginClient,\n    loginExpert,\n    loginAdmin,\n    \n    // Questions\n    submitQuestion,\n    getQuestions,\n    getQuestionById,\n    \n    // AI Service\n    processWithAI,\n    getAIResponse,\n    \n    // Expert Reviews\n    getPendingReviews,\n    submitExpertReview,\n    \n    // Poe API\n    queryPoeModels,\n    getPoeModels,\n    \n    // Humanization & Originality\n    humanizeResponse,\n    checkOriginality,\n    \n    // Admin\n    getUsers,\n    updateUserSubjects,\n    getSystemStats,\n    \n    // WebSocket\n    connectWebSocket\n  }\n}","import { defineStore } from 'pinia'\nimport { type User, UserRole } from '~/types'\n\ninterface AuthState {\n  user: User | null\n  token: string | null\n  isLoading: boolean\n}\n\nexport const useAuthStore = defineStore('auth', {\n  state: (): AuthState => ({\n    user: null,\n    token: null,\n    isLoading: false\n  }),\n\n  getters: {\n    isAuthenticated: (state) => !!state.user && !!state.token,\n    userRole: (state) => state.user?.role || null,\n    userName: (state) => state.user?.name || '',\n    userEmail: (state) => state.user?.email || '',\n    userAvatar: (state) => state.user?.avatar || '',\n    userInitials: (state) => {\n      const name = state.user?.name || ''\n      return name\n        .split(' ')\n        .map(word => word.charAt(0))\n        .join('')\n        .toUpperCase()\n        .slice(0, 2)\n    }\n  },\n\n  actions: {\n    async login(email: string, password: string) {\n      this.isLoading = true\n      try {\n        const api = useApi()\n        const response = await api.login(email, password)\n        \n        if (response.success) {\n          this.user = response.user\n          this.token = response.access_token\n          \n          // Store in localStorage\n          if (process.client) {\n            localStorage.setItem('auth_token', this.token)\n            localStorage.setItem('user_data', JSON.stringify(this.user))\n          }\n        } else {\n          throw new Error(response.message || 'Login failed')\n        }\n      } catch (error) {\n        console.error('Login error:', error)\n        throw new Error('Login failed. Please check your credentials.')\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async register(email: string, password: string, name: string, role: UserRole) {\n      this.isLoading = true\n      try {\n        const api = useApi()\n        \n        // Split name into first and last name\n        const nameParts = name.trim().split(' ')\n        const firstName = nameParts[0] || ''\n        const lastName = nameParts.slice(1).join(' ') || ''\n        \n        const payload = { email, password, first_name: firstName, last_name: lastName }\n        const response = role === 'client'\n          ? await api.registerClient(payload)\n          : role === 'expert'\n            ? await api.registerExpert(payload)\n            : await api.register({ ...payload, role })\n        \n        if (response.success) {\n          this.user = response.user\n          this.token = response.access_token\n          \n          // Store in localStorage\n          if (process.client) {\n            localStorage.setItem('auth_token', this.token)\n            localStorage.setItem('user_data', JSON.stringify(this.user))\n          }\n        } else {\n          throw new Error(response.message || 'Registration failed')\n        }\n      } catch (error) {\n        console.error('Registration error:', error)\n        throw new Error('Registration failed. Please try again.')\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async logout() {\n      this.user = null\n      this.token = null\n      \n      if (process.client) {\n        localStorage.removeItem('auth_token')\n        localStorage.removeItem('user_data')\n      }\n    },\n\n    async initializeAuth() {\n      if (process.client) {\n        const token = localStorage.getItem('auth_token')\n        const userData = localStorage.getItem('user_data')\n        \n        if (token && userData) {\n          try {\n            this.token = token\n            this.user = JSON.parse(userData)\n          } catch (error) {\n            console.error('Failed to parse user data:', error)\n            await this.logout()\n          }\n        }\n      }\n    },\n\n    hasRole(role: UserRole | string): boolean {\n      return this.user?.role === role\n    }\n  }\n})","import { defineStore } from 'pinia'\nimport { type Question, QuestionStatus, type APIResponse } from '~/types'\n\ninterface QuestionsState {\n  questions: Question[]\n  isLoading: boolean\n  error: string | null\n}\n\nexport const useQuestionsStore = defineStore('questions', {\n  state: (): QuestionsState => ({\n    questions: [],\n    isLoading: false,\n    error: null\n  }),\n\n  getters: {\n    getQuestionsByStatus: (state) => (status: QuestionStatus) => {\n      return state.questions.filter(q => q.status === status)\n    },\n    getQuestionsByUser: (state) => (userId: string) => {\n      return state.questions.filter(q => q.userId === userId)\n    },\n    pendingQuestions: (state) => state.questions.filter(q => q.status === QuestionStatus.PENDING),\n    completedQuestions: (state) => state.questions.filter(q => q.status === QuestionStatus.COMPLETED)\n  },\n\n  actions: {\n    async fetchQuestions(userId?: string, status?: string) {\n      this.isLoading = true\n      this.error = null\n      \n      try {\n        const api = useApi()\n        const response = await api.getQuestions(userId, status)\n        \n        if (response.success) {\n          this.questions = response.data\n        } else {\n          throw new Error(response.message || 'Failed to fetch questions')\n        }\n      } catch (error) {\n        console.error('Error fetching questions:', error)\n        this.error = 'Failed to fetch questions'\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async submitQuestion(content: string, subject: string, userId: string, type: 'text' | 'image' = 'text', imageUrl?: string): Promise<APIResponse<Question>> {\n      this.isLoading = true\n      this.error = null\n      \n      try {\n        const api = useApi()\n        const response = await api.submitQuestion({\n          content,\n          subject,\n          userId,\n          type,\n          imageUrl\n        })\n        \n        if (response.success) {\n          this.questions.unshift(response.data)\n          return response\n        } else {\n          throw new Error(response.message || 'Failed to submit question')\n        }\n      } catch (error) {\n        console.error('Submit question error:', error)\n        this.error = 'Failed to submit question'\n        return {\n          success: false,\n          message: 'Failed to submit question',\n          error: error instanceof Error ? error.message : 'Unknown error'\n        }\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async updateQuestionStatus(questionId: string, status: QuestionStatus): Promise<APIResponse> {\n      this.isLoading = true\n      this.error = null\n      \n      try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 500))\n        \n        const question = this.questions.find(q => q.id === questionId)\n        if (question) {\n          question.status = status\n          question.updatedAt = new Date().toISOString()\n        }\n        \n        return {\n          success: true,\n          message: 'Question status updated successfully'\n        }\n      } catch (error) {\n        this.error = 'Failed to update question status'\n        return {\n          success: false,\n          message: 'Failed to update question status',\n          error: 'Failed to update question status'\n        }\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    clearError() {\n      this.error = null\n    }\n  }\n})","<template>\n  <div class=\"h-full bg-white flex flex-col\">\n    <!-- Expert Panel Header -->\n    <div class=\"p-6 border-b border-gray-200\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <div>\n          <h2 class=\"text-xl font-bold text-gray-900\">Expert Review Panel</h2>\n          <p class=\"text-sm text-gray-500\">Review and approve AI responses</p>\n        </div>\n        <div class=\"flex items-center space-x-2\">\n          <div class=\"w-3 h-3 bg-green-400 rounded-full animate-pulse\"></div>\n          <span class=\"text-xs text-gray-500\">Online</span>\n        </div>\n      </div>\n      \n      <!-- Expert Subject Filter -->\n      <div class=\"flex items-center space-x-2\">\n        <span class=\"text-sm font-medium text-gray-700\">Your Subjects:</span>\n        <div class=\"flex flex-wrap gap-1\">\n          <span \n            v-for=\"subject in expertSubjects\" \n            :key=\"subject\"\n            class=\"px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full\"\n          >\n            {{ subject }}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Review Queue Stats -->\n    <div class=\"px-6 py-4 bg-gray-50 border-b border-gray-200\">\n      <div class=\"grid grid-cols-3 gap-4\">\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-yellow-600\">{{ pendingReviews.length }}</div>\n          <div class=\"text-xs text-gray-500\">Pending</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-green-600\">{{ reviewedToday }}</div>\n          <div class=\"text-xs text-gray-500\">Reviewed Today</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-blue-600\">{{ approvalRate }}%</div>\n          <div class=\"text-xs text-gray-500\">Approval Rate</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Review Queue -->\n    <div class=\"flex-1 overflow-y-auto\">\n      <div class=\"p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-900\">Review Queue</h3>\n          <button \n            @click=\"refreshQueue\"\n            class=\"p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n            :disabled=\"isRefreshing\"\n          >\n            <Icon name=\"heroicons:arrow-path\" class=\"h-4 w-4\" :class=\"{ 'animate-spin': isRefreshing }\" />\n          </button>\n        </div>\n        \n        <!-- Empty State -->\n        <div v-if=\"pendingReviews.length === 0\" class=\"text-center py-12\">\n          <Icon name=\"heroicons:check-circle\" class=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n          <h4 class=\"text-lg font-medium text-gray-900 mb-2\">All caught up!</h4>\n          <p class=\"text-gray-500\">No pending reviews for your subjects.</p>\n        </div>\n        \n        <!-- Review List -->\n        <div v-else class=\"space-y-4\">\n          <div \n            v-for=\"review in pendingReviews\" \n            :key=\"review.id\"\n            @click=\"selectReview(review)\"\n            class=\"p-4 border border-gray-200 rounded-lg cursor-pointer hover:border-blue-300 hover:shadow-sm transition-all\"\n            :class=\"{ 'border-blue-300 bg-blue-50': selectedReview?.id === review.id }\"\n          >\n            <div class=\"flex items-start justify-between mb-3\">\n              <div class=\"flex-1\">\n                <div class=\"flex items-center space-x-2 mb-2\">\n                  <span class=\"px-2 py-1 text-xs bg-purple-100 text-purple-800 rounded-full\">\n                    {{ review.subject }}\n                  </span>\n                  <span class=\"text-xs text-gray-500\">{{ formatTime(review.submittedAt) }}</span>\n                </div>\n                <h4 class=\"text-sm font-medium text-gray-900 mb-2 line-clamp-2\">\n                  {{ review.question }}\n                </h4>\n                <p class=\"text-xs text-gray-500\">\n                  Asked by: {{ review.userName }}\n                </p>\n              </div>\n              <div class=\"flex items-center space-x-2\">\n                <div class=\"w-2 h-2 bg-yellow-400 rounded-full\"></div>\n                <Icon name=\"heroicons:chevron-right\" class=\"h-4 w-4 text-gray-400\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Selected Review Details -->\n    <div v-if=\"selectedReview\" class=\"border-t border-gray-200 bg-gray-50\">\n      <div class=\"p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-900\">Review Details</h3>\n          <button \n            @click=\"selectedReview = null\"\n            class=\"p-1 rounded hover:bg-gray-200\"\n          >\n            <Icon name=\"heroicons:x-mark\" class=\"h-4 w-4\" />\n          </button>\n        </div>\n        \n        <div class=\"space-y-4\">\n          <!-- Question -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Original Question</label>\n            <div class=\"p-3 bg-white border border-gray-200 rounded-lg\">\n              <p class=\"text-sm text-gray-900\">{{ selectedReview.question }}</p>\n              <div class=\"flex items-center justify-between mt-2\">\n                <span class=\"text-xs text-gray-500\">Subject: {{ selectedReview.subject }}</span>\n                <span class=\"text-xs text-gray-500\">{{ formatTime(selectedReview.submittedAt) }}</span>\n              </div>\n            </div>\n          </div>\n          \n          <!-- AI Response -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">AI Response</label>\n            <div class=\"p-3 bg-white border border-gray-200 rounded-lg\">\n              <p class=\"text-sm text-gray-900 whitespace-pre-wrap\">{{ selectedReview.aiResponse }}</p>\n            </div>\n          </div>\n          \n          <!-- Expert Notes -->\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Expert Notes (Optional)</label>\n            <textarea \n              v-model=\"expertNotes\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none\"\n              rows=\"3\"\n              placeholder=\"Add any notes about your review decision...\"\n            ></textarea>\n          </div>\n          \n          <!-- Action Buttons -->\n          <div class=\"flex space-x-3 pt-4\">\n            <button \n              @click=\"approveReview\"\n              :disabled=\"isProcessing\"\n              class=\"flex-1 flex items-center justify-center space-x-2 bg-green-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              <Icon name=\"heroicons:check\" class=\"h-4 w-4\" />\n              <span>Approve</span>\n            </button>\n            <button \n              @click=\"rejectReview\"\n              :disabled=\"isProcessing\"\n              class=\"flex-1 flex items-center justify-center space-x-2 bg-red-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              <Icon name=\"heroicons:x-mark\" class=\"h-4 w-4\" />\n              <span>Reject</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useAuthStore } from '~/stores/auth'\nimport { type PendingReview, type ExpertReview } from '~/types'\n\nconst authStore = useAuthStore()\nconst toast = useToast()\n\n// State\nconst pendingReviews = ref<PendingReview[]>([])\nconst selectedReview = ref<PendingReview | null>(null)\nconst expertNotes = ref('')\nconst isProcessing = ref(false)\nconst isRefreshing = ref(false)\nconst reviewedToday = ref(0)\nconst approvalRate = ref(85)\n\n// Computed\nconst expertSubjects = computed(() => {\n  return authStore.user?.subjects || []\n})\n\n// Methods\nconst formatTime = (timestamp: string) => {\n  const date = new Date(timestamp)\n  const now = new Date()\n  const diff = now.getTime() - date.getTime()\n  \n  if (diff < 60000) return 'Just now'\n  if (diff < 3600000) return `${Math.floor(diff / 60000)}m ago`\n  if (diff < 86400000) return `${Math.floor(diff / 3600000)}h ago`\n  return date.toLocaleDateString()\n}\n\nconst refreshQueue = async () => {\n  isRefreshing.value = true\n  try {\n    await fetchPendingReviews()\n  } finally {\n    isRefreshing.value = false\n  }\n}\n\nconst fetchPendingReviews = async () => {\n  try {\n    const api = useApi()\n    const response = await api.getPendingReviews(authStore.user!.id, expertSubjects.value)\n    \n    if (response.success) {\n      pendingReviews.value = response.data\n    } else {\n      console.error('Failed to fetch pending reviews:', response.message)\n      toast.error('Failed to load pending reviews')\n    }\n  } catch (error) {\n    console.error('Error fetching pending reviews:', error)\n    toast.error('Failed to load pending reviews')\n  }\n}\n\nconst selectReview = (review: PendingReview) => {\n  selectedReview.value = review\n  expertNotes.value = ''\n}\n\nconst approveReview = async () => {\n  if (!selectedReview.value) return\n  \n  isProcessing.value = true\n  try {\n    const api = useApi()\n    const response = await api.submitExpertReview({\n      questionId: selectedReview.value.questionId,\n      expertId: authStore.user!.id,\n      decision: 'approved',\n      notes: expertNotes.value || undefined\n    })\n    \n    if (response.success) {\n      // Remove from pending queue\n      pendingReviews.value = pendingReviews.value.filter(r => r.id !== selectedReview.value!.id)\n      selectedReview.value = null\n      expertNotes.value = ''\n      \n      // Update stats\n      reviewedToday.value++\n      \n      toast.success('Response approved successfully!')\n    } else {\n      throw new Error(response.message || 'Failed to approve response')\n    }\n  } catch (error) {\n    console.error('Error approving review:', error)\n    toast.error('Failed to approve response')\n  } finally {\n    isProcessing.value = false\n  }\n}\n\nconst rejectReview = async () => {\n  if (!selectedReview.value) return\n  \n  isProcessing.value = true\n  try {\n    const api = useApi()\n    const response = await api.submitExpertReview({\n      questionId: selectedReview.value.questionId,\n      expertId: authStore.user!.id,\n      decision: 'rejected',\n      notes: expertNotes.value || undefined\n    })\n    \n    if (response.success) {\n      // Remove from pending queue\n      pendingReviews.value = pendingReviews.value.filter(r => r.id !== selectedReview.value!.id)\n      selectedReview.value = null\n      expertNotes.value = ''\n      \n      // Update stats\n      reviewedToday.value++\n      \n      toast.success('Response rejected and sent back for revision')\n    } else {\n      throw new Error(response.message || 'Failed to reject response')\n    }\n  } catch (error) {\n    console.error('Error rejecting review:', error)\n    toast.error('Failed to reject response')\n  } finally {\n    isProcessing.value = false\n  }\n}\n\n// Initialize\nonMounted(() => {\n  fetchPendingReviews()\n})\n\n// Auto-refresh every 30 seconds\nonMounted(() => {\n  const interval = setInterval(fetchPendingReviews, 30000)\n  onUnmounted(() => clearInterval(interval))\n})\n</script>","<template>\n  <div class=\"h-full bg-white border-l border-gray-200 shadow-lg\">\n    <div class=\"p-6\">\n      <h2 class=\"text-lg font-semibold text-gray-900 mb-4\">Admin Dashboard</h2>\n      \n      <!-- Stats Overview -->\n      <div class=\"grid grid-cols-2 gap-4 mb-6\">\n        <div class=\"bg-blue-50 p-4 rounded-lg\">\n          <div class=\"flex items-center\">\n            <Icon name=\"heroicons:question-mark-circle\" class=\"h-8 w-8 text-blue-600\" />\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-blue-600\">Total Questions</p>\n              <p class=\"text-2xl font-bold text-blue-900\">1,247</p>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"bg-green-50 p-4 rounded-lg\">\n          <div class=\"flex items-center\">\n            <Icon name=\"heroicons:users\" class=\"h-8 w-8 text-green-600\" />\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-green-600\">Active Users</p>\n              <p class=\"text-2xl font-bold text-green-900\">342</p>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"bg-yellow-50 p-4 rounded-lg\">\n          <div class=\"flex items-center\">\n            <Icon name=\"heroicons:clock\" class=\"h-8 w-8 text-yellow-600\" />\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-yellow-600\">Pending Reviews</p>\n              <p class=\"text-2xl font-bold text-yellow-900\">23</p>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"bg-purple-50 p-4 rounded-lg\">\n          <div class=\"flex items-center\">\n            <Icon name=\"heroicons:chart-bar\" class=\"h-8 w-8 text-purple-600\" />\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-purple-600\">Success Rate</p>\n              <p class=\"text-2xl font-bold text-purple-900\">94.2%</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Recent Activity -->\n      <div class=\"space-y-4\">\n        <h3 class=\"text-sm font-medium text-gray-700\">Recent Activity</h3>\n        \n        <div class=\"space-y-3\">\n          <div class=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n            <Icon name=\"heroicons:plus-circle\" class=\"h-5 w-5 text-green-600\" />\n            <div class=\"flex-1\">\n              <p class=\"text-sm text-gray-900\">New question submitted</p>\n              <p class=\"text-xs text-gray-500\">Mathematics - 2 minutes ago</p>\n            </div>\n          </div>\n          \n          <div class=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n            <Icon name=\"heroicons:check-circle\" class=\"h-5 w-5 text-blue-600\" />\n            <div class=\"flex-1\">\n              <p class=\"text-sm text-gray-900\">Question approved by expert</p>\n              <p class=\"text-xs text-gray-500\">Physics - 5 minutes ago</p>\n            </div>\n          </div>\n          \n          <div class=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n            <Icon name=\"heroicons:user-plus\" class=\"h-5 w-5 text-purple-600\" />\n            <div class=\"flex-1\">\n              <p class=\"text-sm text-gray-900\">New user registered</p>\n              <p class=\"text-xs text-gray-500\">Student - 10 minutes ago</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Expert Management -->\n      <div class=\"mt-6 pt-6 border-t border-gray-200\">\n        <h3 class=\"text-sm font-medium text-gray-700 mb-3\">Expert Management</h3>\n        \n        <div class=\"space-y-3\">\n          <div \n            v-for=\"expert in expertUsers\" \n            :key=\"expert.id\"\n            class=\"p-3 bg-white border border-gray-200 rounded-lg\"\n          >\n            <div class=\"flex items-center justify-between mb-2\">\n              <div class=\"flex items-center space-x-2\">\n                <div class=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center\">\n                  <span class=\"text-xs font-medium text-blue-600\">{{ expert.name.charAt(0) }}</span>\n                </div>\n                <span class=\"text-sm font-medium text-gray-900\">{{ expert.name }}</span>\n              </div>\n              <span class=\"text-xs text-gray-500\">{{ expert.subjects?.length || 0 }} subjects</span>\n            </div>\n            \n            <div class=\"flex flex-wrap gap-1\">\n              <span \n                v-for=\"subject in expert.subjects || []\" \n                :key=\"subject\"\n                class=\"px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full\"\n              >\n                {{ subject }}\n              </span>\n              <button \n                v-if=\"!expert.subjects || expert.subjects.length === 0\"\n                @click=\"assignSubjects(expert)\"\n                class=\"text-xs text-gray-500 hover:text-blue-600\"\n              >\n                Assign subjects\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Quick Actions -->\n      <div class=\"mt-6 pt-6 border-t border-gray-200\">\n        <h3 class=\"text-sm font-medium text-gray-700 mb-3\">Quick Actions</h3>\n        \n        <div class=\"space-y-2\">\n          <button class=\"w-full btn-secondary text-sm\">\n            <Icon name=\"heroicons:cog-6-tooth\" class=\"h-4 w-4\" />\n            System Settings\n          </button>\n          <button class=\"w-full btn-secondary text-sm\">\n            <Icon name=\"heroicons:users\" class=\"h-4 w-4\" />\n            Manage Users\n          </button>\n          <button class=\"w-full btn-secondary text-sm\">\n            <Icon name=\"heroicons:chart-bar-square\" class=\"h-4 w-4\" />\n            View Analytics\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { type User } from '~/types'\nimport { UserRole } from '~/types'\n\nconst toast = useToast()\n\n// State\nconst expertUsers = ref<User[]>([])\nconst isLoading = ref(false)\n\n// Methods\nconst fetchUsers = async () => {\n  isLoading.value = true\n  try {\n    const api = useApi()\n    const response = await api.getUsers()\n    \n    if (response.success) {\n      expertUsers.value = response.data.filter((user: User) => user.role === UserRole.EXPERT)\n    } else {\n      throw new Error(response.message || 'Failed to fetch users')\n    }\n  } catch (error) {\n    console.error('Error fetching users:', error)\n    toast.error('Failed to load expert users')\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst assignSubjects = (expert: User) => {\n  // In a real app, this would open a modal or navigate to a subject assignment page\n  toast.info(`Assign subjects for ${expert.name} - Feature coming soon`)\n}\n\nconst updateExpertSubjects = async (expertId: string, subjects: string[]) => {\n  try {\n    const api = useApi()\n    const response = await api.updateUserSubjects(expertId, subjects)\n    \n    if (response.success) {\n      const expert = expertUsers.value.find(e => e.id === expertId)\n      if (expert) {\n        expert.subjects = subjects\n        expert.updatedAt = new Date().toISOString()\n      }\n      toast.success('Expert subjects updated successfully')\n    } else {\n      throw new Error(response.message || 'Failed to update expert subjects')\n    }\n  } catch (error) {\n    console.error('Error updating expert subjects:', error)\n    toast.error('Failed to update expert subjects')\n  }\n}\n\n// Initialize\nonMounted(() => {\n  fetchUsers()\n})\n</script>","<template>\n  <div id=\"app\" class=\"h-screen bg-gray-100 flex\">\n    <!-- Loading Overlay -->\n    <div v-if=\"isLoading\" class=\"fixed inset-0 bg-white/90 backdrop-blur-sm z-50 flex items-center justify-center\">\n      <div class=\"flex flex-col items-center space-y-4\">\n        <div class=\"spinner w-8 h-8\"></div>\n        <p class=\"text-gray-600 font-medium\">Loading AL-Tech Academy Q&A...</p>\n      </div>\n    </div>\n\n    <!-- Main App Layout -->\n    <div v-else class=\"flex w-full h-full\">\n      <!-- Sidebar -->\n      <div class=\"w-80 bg-white border-r border-gray-200 flex flex-col\" :class=\"{ 'hidden lg:flex': !showSidebar }\">\n        <!-- Sidebar Header -->\n        <div class=\"p-4 border-b border-gray-200\">\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center space-x-3\">\n              <div class=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n                <Icon name=\"heroicons:academic-cap\" class=\"h-6 w-6 text-white\" />\n              </div>\n              <div>\n                <h1 class=\"text-lg font-semibold text-gray-900\">AL-Tech Academy</h1>\n                <p class=\"text-xs text-gray-500\">AI-Powered Q&A</p>\n              </div>\n            </div>\n            <button \n              @click=\"toggleSidebar\"\n              class=\"lg:hidden p-2 rounded-lg hover:bg-gray-100\"\n            >\n              <Icon name=\"heroicons:x-mark\" class=\"h-5 w-5\" />\n            </button>\n          </div>\n        </div>\n\n        <!-- User Info -->\n        <div v-if=\"authStore.isAuthenticated\" class=\"p-4 border-b border-gray-200\">\n          <div class=\"flex items-center space-x-3\">\n            <div class=\"w-10 h-10 bg-gradient-to-br from-green-400 to-blue-500 rounded-full flex items-center justify-center\">\n              <span class=\"text-sm font-bold text-white\">{{ authStore.userInitials }}</span>\n            </div>\n            <div class=\"flex-1 min-w-0\">\n              <p class=\"text-sm font-medium text-gray-900 truncate\">{{ authStore.userName }}</p>\n              <p class=\"text-xs text-gray-500\">{{ getRoleDisplayName(authStore.userRole) }}</p>\n            </div>\n            <button \n              @click=\"handleLogout\"\n              class=\"p-1 rounded hover:bg-gray-100\"\n            >\n              <Icon name=\"heroicons:arrow-right-on-rectangle\" class=\"h-4 w-4 text-gray-400\" />\n            </button>\n          </div>\n        </div>\n\n        <!-- Login Section -->\n        <div v-else class=\"p-4 border-b border-gray-200\">\n          <button \n            @click=\"showLoginModal = true\"\n            class=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-2 px-4 rounded-lg font-medium hover:from-blue-600 hover:to-purple-700 transition-all duration-200\"\n          >\n            Sign In to Start\n          </button>\n        </div>\n\n        <!-- Chat History -->\n        <div class=\"flex-1 overflow-y-auto\">\n          <div class=\"p-4\">\n            <h3 class=\"text-sm font-medium text-gray-700 mb-3\">Recent Conversations</h3>\n            \n            <!-- Chat List -->\n            <div class=\"space-y-2\">\n              <div \n                v-for=\"chat in chatHistory\" \n                :key=\"chat.id\"\n                @click=\"selectChat(chat)\"\n                class=\"p-3 rounded-lg cursor-pointer transition-colors hover:bg-gray-50\"\n                :class=\"{ 'bg-blue-50 border border-blue-200': selectedChat?.id === chat.id }\"\n              >\n                <div class=\"flex items-start space-x-3\">\n                  <div class=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center flex-shrink-0\">\n                    <Icon :name=\"getChatIcon(chat)\" class=\"h-4 w-4 text-gray-600\" />\n                  </div>\n                  <div class=\"flex-1 min-w-0\">\n                    <p class=\"text-sm font-medium text-gray-900 truncate\">{{ chat.title }}</p>\n                    <p class=\"text-xs text-gray-500 truncate\">{{ chat.lastMessage }}</p>\n                    <p class=\"text-xs text-gray-400\">{{ formatChatTime(chat.updatedAt) }}</p>\n                  </div>\n                  <div v-if=\"chat.status === 'pending'\" class=\"w-2 h-2 bg-yellow-400 rounded-full\"></div>\n                  <div v-else-if=\"chat.status === 'processing'\" class=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse\"></div>\n                  <div v-else-if=\"chat.status === 'completed'\" class=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n                </div>\n              </div>\n              \n              <!-- Empty State -->\n              <div v-if=\"chatHistory.length === 0\" class=\"text-center py-8\">\n                <Icon name=\"heroicons:chat-bubble-left-ellipsis\" class=\"h-12 w-12 text-gray-300 mx-auto mb-2\" />\n                <p class=\"text-sm text-gray-500\">No conversations yet</p>\n                <p class=\"text-xs text-gray-400\">Start asking questions!</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Sidebar Footer -->\n        <div class=\"p-4 border-t border-gray-200\">\n          <button \n            @click=\"startNewChat\"\n            class=\"w-full flex items-center justify-center space-x-2 bg-white border border-gray-300 text-gray-700 py-2 px-4 rounded-lg font-medium hover:bg-gray-50 transition-colors\"\n          >\n            <Icon name=\"heroicons:plus\" class=\"h-4 w-4\" />\n            <span>New Question</span>\n          </button>\n        </div>\n      </div>\n\n      <!-- Main Chat Area -->\n      <div class=\"flex-1 flex flex-col\">\n        <!-- Chat Header -->\n        <div class=\"bg-white border-b border-gray-200 px-6 py-4 flex items-center justify-between\">\n          <div class=\"flex items-center space-x-4\">\n            <button \n              @click=\"toggleSidebar\"\n              class=\"lg:hidden p-2 rounded-lg hover:bg-gray-100\"\n            >\n              <Icon name=\"heroicons:bars-3\" class=\"h-5 w-5\" />\n            </button>\n            \n            <div v-if=\"selectedChat\">\n              <h2 class=\"text-lg font-semibold text-gray-900\">{{ selectedChat.title }}</h2>\n              <p class=\"text-sm text-gray-500\">{{ selectedChat.subject }}</p>\n            </div>\n            <div v-else>\n              <h2 class=\"text-lg font-semibold text-gray-900\">AL-Tech Academy Q&A</h2>\n              <p class=\"text-sm text-gray-500\">Ask me anything!</p>\n            </div>\n          </div>\n\n          <!-- Chat Actions -->\n          <div class=\"flex items-center space-x-2\">\n            <div v-if=\"selectedChat?.status\" class=\"flex items-center space-x-2\">\n              <span class=\"text-xs px-2 py-1 rounded-full\" :class=\"getStatusBadgeClass(selectedChat.status)\">\n                {{ selectedChat.status }}\n              </span>\n            </div>\n            \n            <!-- Expert Panel Toggle -->\n            <button \n              v-if=\"authStore.hasRole('expert') || authStore.hasRole('admin')\"\n              @click=\"toggleExpertPanel\"\n              class=\"p-2 rounded-lg hover:bg-gray-100\"\n            >\n              <Icon name=\"heroicons:cog-6-tooth\" class=\"h-5 w-5 text-gray-600\" />\n            </button>\n          </div>\n        </div>\n\n        <!-- Messages Area -->\n        <div class=\"flex-1 overflow-y-auto bg-gray-50\" ref=\"messagesContainer\">\n          <div class=\"max-w-4xl mx-auto p-6 space-y-6\">\n            <!-- Welcome Message -->\n            <div v-if=\"!selectedChat || !selectedChat.messages || selectedChat.messages.length === 0\" class=\"text-center py-12\">\n              <div class=\"w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <Icon name=\"heroicons:academic-cap\" class=\"h-10 w-10 text-white\" />\n              </div>\n              <h3 class=\"text-2xl font-bold text-gray-900 mb-3\">Welcome to AL-Tech Academy</h3>\n              <p class=\"text-gray-600 max-w-md mx-auto mb-8\">\n                Get instant, accurate answers to your academic questions powered by advanced AI technology.\n              </p>\n              <button \n                @click=\"startNewChat\"\n                class=\"bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-3 rounded-lg font-medium hover:from-blue-600 hover:to-purple-700 transition-all duration-200\"\n              >\n                Start Your First Question\n              </button>\n            </div>\n\n            <!-- Messages -->\n            <div v-if=\"selectedChat\" class=\"space-y-4\">\n              <div \n                v-for=\"message in selectedChat.messages\" \n                :key=\"message.id\"\n                class=\"flex\"\n                :class=\"message.sender === 'user' ? 'justify-end' : 'justify-start'\"\n              >\n                <div \n                  class=\"max-w-2xl px-4 py-3 rounded-2xl\"\n                  :class=\"getMessageClasses(message)\"\n                >\n                  <div v-if=\"message.sender !== 'user'\" class=\"flex items-center space-x-2 mb-2\">\n                    <Icon :name=\"getMessageIcon(message)\" class=\"h-4 w-4\" />\n                    <span class=\"text-xs font-medium text-gray-600\">{{ getMessageSender(message) }}</span>\n                  </div>\n                  \n                  <div class=\"prose prose-sm max-w-none\">\n                    <div v-if=\"message.type === 'text'\" v-html=\"message.content\"></div>\n                    \n                    <!-- Image Message -->\n                    <div v-else-if=\"message.type === 'image'\" class=\"space-y-2\">\n                      <img \n                        :src=\"message.imageUrl\" \n                        :alt=\"message.content\"\n                        class=\"max-w-sm rounded-lg shadow-sm\"\n                      >\n                      <p class=\"text-sm text-gray-600\">{{ message.content }}</p>\n                    </div>\n                  </div>\n                  \n                  <div class=\"flex items-center justify-between mt-2\">\n                    <span class=\"text-xs text-gray-400\">{{ formatTime(message.timestamp) }}</span>\n                    <div v-if=\"message.status\" class=\"flex items-center space-x-2\">\n                      <span class=\"text-xs px-2 py-1 rounded-full\" :class=\"getStatusBadgeClass(message.status)\">\n                        {{ message.status }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Typing Indicator -->\n              <div v-if=\"isTyping\" class=\"flex justify-start\">\n                <div class=\"bg-white border border-gray-200 rounded-2xl px-4 py-3 shadow-sm\">\n                  <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex space-x-1\">\n                      <div class=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                      <div class=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style=\"animation-delay: 0.1s\"></div>\n                      <div class=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style=\"animation-delay: 0.2s\"></div>\n                    </div>\n                    <span class=\"text-sm text-gray-500\">AI is thinking...</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Input Area -->\n        <div class=\"bg-white border-t border-gray-200 p-4\">\n          <div class=\"max-w-4xl mx-auto\">\n            <form @submit.prevent=\"sendMessage\" class=\"flex items-end space-x-3\">\n              <!-- Subject Selection -->\n              <div v-if=\"!selectedChat && authStore.hasRole('client')\" class=\"w-48\">\n                <select \n                  v-model=\"newChatSubject\"\n                  class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"\">Select Subject</option>\n                  <option value=\"Mathematics\">Mathematics</option>\n                  <option value=\"Physics\">Physics</option>\n                  <option value=\"Chemistry\">Chemistry</option>\n                  <option value=\"Biology\">Biology</option>\n                  <option value=\"Computer Science\">Computer Science</option>\n                  <option value=\"Engineering\">Engineering</option>\n                  <option value=\"Business\">Business</option>\n                  <option value=\"Other\">Other</option>\n                </select>\n              </div>\n\n              <!-- Message Input -->\n              <div class=\"flex-1 relative\">\n                <textarea\n                  v-model=\"currentMessage\"\n                  @keydown.enter.prevent=\"handleEnterKey\"\n                  placeholder=\"Type your question...\"\n                  class=\"w-full px-4 py-3 border border-gray-300 rounded-2xl resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  rows=\"1\"\n                  ref=\"messageInput\"\n                ></textarea>\n                \n                <!-- Attachment Button -->\n                <button\n                  type=\"button\"\n                  @click=\"toggleAttachment\"\n                  class=\"absolute right-3 bottom-3 p-1 rounded-full hover:bg-gray-100\"\n                >\n                  <Icon name=\"heroicons:paper-clip\" class=\"h-5 w-5 text-gray-500\" />\n                </button>\n              </div>\n\n              <!-- Send Button -->\n              <button\n                type=\"submit\"\n                :disabled=\"!canSendMessage\"\n                class=\"p-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-full hover:from-blue-600 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n              >\n                <Icon name=\"heroicons:paper-airplane\" class=\"h-5 w-5\" />\n              </button>\n            </form>\n\n            <!-- Attachment Options -->\n            <div v-if=\"showAttachmentOptions\" class=\"mt-3 p-3 bg-gray-50 rounded-lg\">\n              <div class=\"flex space-x-3\">\n                <button\n                  @click=\"selectImage\"\n                  class=\"flex items-center space-x-2 px-3 py-2 bg-white rounded-lg border border-gray-200 hover:border-blue-300 transition-colors\"\n                >\n                  <Icon name=\"heroicons:photo\" class=\"h-4 w-4 text-gray-600\" />\n                  <span class=\"text-sm\">Upload Image</span>\n                </button>\n                <button\n                  @click=\"selectFile\"\n                  class=\"flex items-center space-x-2 px-3 py-2 bg-white rounded-lg border border-gray-200 hover:border-blue-300 transition-colors\"\n                >\n                  <Icon name=\"heroicons:document\" class=\"h-4 w-4 text-gray-600\" />\n                  <span class=\"text-sm\">Upload File</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Expert Panel -->\n      <div v-if=\"showExpertPanel && (authStore.hasRole('expert') || authStore.hasRole('admin'))\" class=\"w-96 bg-white border-l border-gray-200\">\n        <ExpertReviewPanel v-if=\"authStore.hasRole('expert')\" />\n        <AdminPanel v-else-if=\"authStore.hasRole('admin')\" />\n      </div>\n    </div>\n\n    <!-- Login/Signup Modal -->\n    <div v-if=\"showLoginModal\" class=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center\">\n      <div class=\"bg-white rounded-2xl p-8 w-full max-w-md mx-4\">\n        <div class=\"text-center mb-6\">\n          <div class=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n            <Icon name=\"heroicons:academic-cap\" class=\"h-8 w-8 text-white\" />\n          </div>\n          <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">\n            {{ isSignupMode ? 'Create Account' : 'Welcome Back' }}\n          </h2>\n          <p class=\"text-gray-600\">\n            {{ isSignupMode ? 'Join AL-Tech Academy today' : 'Sign in to your account' }}\n          </p>\n        </div>\n\n        <!-- Toggle between Login and Signup -->\n        <div class=\"flex mb-6 bg-gray-100 rounded-lg p-1\">\n          <button\n            @click=\"isSignupMode = false\"\n            :class=\"[\n              'flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors',\n              !isSignupMode \n                ? 'bg-white text-gray-900 shadow-sm' \n                : 'text-gray-500 hover:text-gray-700'\n            ]\"\n          >\n            Sign In\n          </button>\n          <button\n            @click=\"isSignupMode = true\"\n            :class=\"[\n              'flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors',\n              isSignupMode \n                ? 'bg-white text-gray-900 shadow-sm' \n                : 'text-gray-500 hover:text-gray-700'\n            ]\"\n          >\n            Sign Up\n          </button>\n        </div>\n\n        <!-- Login Form -->\n        <form v-if=\"!isSignupMode\" @submit.prevent=\"handleLogin\" class=\"space-y-4\">\n          <div>\n            <label for=\"login-email\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email Address\n            </label>\n            <input\n              id=\"login-email\"\n              v-model=\"loginForm.email\"\n              type=\"email\"\n              required\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Enter your email\"\n            >\n          </div>\n          \n          <div>\n            <label for=\"login-password\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <input\n              id=\"login-password\"\n              v-model=\"loginForm.password\"\n              type=\"password\"\n              required\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Enter your password\"\n            >\n          </div>\n\n          <button\n            type=\"submit\"\n            :disabled=\"authStore.isLoading\"\n            class=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 px-4 rounded-lg font-medium hover:from-blue-600 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n          >\n            <span v-if=\"authStore.isLoading\" class=\"flex items-center justify-center\">\n              <div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n              Signing In...\n            </span>\n            <span v-else>Sign In</span>\n          </button>\n        </form>\n\n        <!-- Signup Form -->\n        <form v-else @submit.prevent=\"handleSignup\" class=\"space-y-4\">\n          <div class=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label for=\"signup-firstname\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n                First Name\n              </label>\n              <input\n                id=\"signup-firstname\"\n                v-model=\"signupForm.firstName\"\n                type=\"text\"\n                required\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"First name\"\n              >\n            </div>\n            \n            <div>\n              <label for=\"signup-lastname\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n                Last Name\n              </label>\n              <input\n                id=\"signup-lastname\"\n                v-model=\"signupForm.lastName\"\n                type=\"text\"\n                required\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Last name\"\n              >\n            </div>\n          </div>\n\n          <div>\n            <label for=\"signup-email\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email Address\n            </label>\n            <input\n              id=\"signup-email\"\n              v-model=\"signupForm.email\"\n              type=\"email\"\n              required\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Enter your email\"\n            >\n          </div>\n          \n          <div>\n            <label for=\"signup-password\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <input\n              id=\"signup-password\"\n              v-model=\"signupForm.password\"\n              type=\"password\"\n              required\n              minlength=\"8\"\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              placeholder=\"Create a password (min 8 characters)\"\n            >\n          </div>\n\n          <div>\n            <label for=\"signup-role\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n              Role\n            </label>\n            <select\n              id=\"signup-role\"\n              v-model=\"signupForm.role\"\n              required\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n            >\n              <option value=\"\">Select your role</option>\n              <option value=\"client\">Student - Ask Questions</option>\n              <option value=\"expert\">Expert - Review Answers</option>\n              <option value=\"admin\">Admin - System Management</option>\n            </select>\n          </div>\n\n          <button\n            type=\"submit\"\n            :disabled=\"authStore.isLoading\"\n            class=\"w-full bg-gradient-to-r from-green-500 to-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:from-green-600 hover:to-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n          >\n            <span v-if=\"authStore.isLoading\" class=\"flex items-center justify-center\">\n              <div class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n              Creating Account...\n            </span>\n            <span v-else>Create Account</span>\n          </button>\n        </form>\n\n        <!-- Demo Login Section -->\n        <div class=\"mt-6 pt-6 border-t border-gray-200\">\n          <p class=\"text-center text-sm text-gray-500 mb-3\">Or try with demo accounts</p>\n          <div class=\"grid grid-cols-3 gap-2\">\n            <button\n              @click=\"loginWithDemo('client')\"\n              class=\"px-3 py-2 text-xs bg-blue-50 text-blue-700 rounded-lg hover:bg-blue-100 transition-colors\"\n            >\n              Student\n            </button>\n            <button\n              @click=\"loginWithDemo('expert')\"\n              class=\"px-3 py-2 text-xs bg-orange-50 text-orange-700 rounded-lg hover:bg-orange-100 transition-colors\"\n            >\n              Expert\n            </button>\n            <button\n              @click=\"loginWithDemo('admin')\"\n              class=\"px-3 py-2 text-xs bg-purple-50 text-purple-700 rounded-lg hover:bg-purple-100 transition-colors\"\n            >\n              Admin\n            </button>\n          </div>\n        </div>\n        \n        <button\n          @click=\"showLoginModal = false\"\n          class=\"mt-6 w-full text-sm text-gray-500 hover:text-gray-700 transition-colors\"\n        >\n          Maybe Later\n        </button>\n      </div>\n    </div>\n\n    <!-- Hidden file input -->\n    <input\n      ref=\"fileInput\"\n      type=\"file\"\n      accept=\"image/*\"\n      @change=\"handleFileUpload\"\n      class=\"hidden\"\n    >\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useAuthStore } from '~/stores/auth'\nimport { useQuestionsStore } from '~/stores/questions'\nimport { UserRole, type User } from '~/types'\nimport ExpertReviewPanel from '~/components/ExpertReviewPanel.vue'\nimport AdminPanel from '~/components/AdminPanel.vue'\n\nconst authStore = useAuthStore()\nconst questionsStore = useQuestionsStore()\nconst toast = useToast()\n\n// Global loading state\nconst isLoading = ref(true)\n\n// UI State\nconst showSidebar = ref(true)\nconst showExpertPanel = ref(false)\nconst showLoginModal = ref(false)\nconst showAttachmentOptions = ref(false)\nconst isSignupMode = ref(false)\n\n// Form data\nconst loginForm = ref({\n  email: '',\n  password: ''\n})\n\nconst signupForm = ref({\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  role: ''\n})\n\n// Chat State\nconst chatHistory = ref<any[]>([])\nconst selectedChat = ref<any>(null)\nconst currentMessage = ref('')\nconst newChatSubject = ref('')\nconst isTyping = ref(false)\nconst messagesContainer = ref<HTMLElement>()\nconst messageInput = ref<HTMLTextAreaElement>()\nconst fileInput = ref<HTMLInputElement>()\n\n// Computed\nconst canSendMessage = computed(() => {\n  if (!authStore.isAuthenticated) return false\n  if (!currentMessage.value.trim()) return false\n  if (!selectedChat.value && authStore.hasRole('client') && !newChatSubject.value) return false\n  return true\n})\n\n// Methods\nconst getRoleDisplayName = (role: string) => {\n  switch (role) {\n    case UserRole.CLIENT:\n      return 'Student'\n    case UserRole.EXPERT:\n      return 'Expert Editor'\n    case UserRole.ADMIN:\n      return 'System Admin'\n    default:\n      return 'User'\n  }\n}\n\nconst getChatIcon = (chat: any) => {\n  switch (chat.subject) {\n    case 'Mathematics':\n      return 'heroicons:calculator'\n    case 'Physics':\n      return 'heroicons:bolt'\n    case 'Chemistry':\n      return 'heroicons:beaker'\n    case 'Biology':\n      return 'heroicons:heart'\n    case 'Computer Science':\n      return 'heroicons:computer-desktop'\n    case 'Engineering':\n      return 'heroicons:cog-6-tooth'\n    case 'Business':\n      return 'heroicons:briefcase'\n    default:\n      return 'heroicons:question-mark-circle'\n  }\n}\n\nconst getMessageClasses = (message: any) => {\n  if (message.sender === 'user') {\n    return 'bg-gradient-to-r from-blue-500 to-purple-600 text-white'\n  } else if (message.sender === 'ai') {\n    return 'bg-white border border-gray-200 text-gray-900 shadow-sm'\n  } else if (message.sender === 'expert') {\n    return 'bg-blue-50 border border-blue-200 text-blue-900'\n  } else {\n    return 'bg-gray-100 border border-gray-200 text-gray-700'\n  }\n}\n\nconst getMessageIcon = (message: any) => {\n  switch (message.sender) {\n    case 'user':\n      return 'heroicons:user'\n    case 'ai':\n      return 'heroicons:cpu-chip'\n    case 'expert':\n      return 'heroicons:academic-cap'\n    case 'system':\n      return 'heroicons:information-circle'\n    default:\n      return 'heroicons:chat-bubble-left-right'\n  }\n}\n\nconst getMessageSender = (message: any) => {\n  switch (message.sender) {\n    case 'user':\n      return 'You'\n    case 'ai':\n      return 'AI Assistant'\n    case 'expert':\n      return 'Expert Review'\n    case 'system':\n      return 'System'\n    default:\n      return 'Unknown'\n  }\n}\n\nconst getStatusBadgeClass = (status: string) => {\n  switch (status.toLowerCase()) {\n    case 'pending':\n      return 'bg-yellow-100 text-yellow-800'\n    case 'processing':\n      return 'bg-blue-100 text-blue-800'\n    case 'ai_responded':\n      return 'bg-purple-100 text-purple-800'\n    case 'expert_review':\n      return 'bg-orange-100 text-orange-800'\n    case 'approved':\n      return 'bg-green-100 text-green-800'\n    case 'rejected':\n      return 'bg-red-100 text-red-800'\n    case 'completed':\n      return 'bg-green-100 text-green-800'\n    case 'failed':\n      return 'bg-red-100 text-red-800'\n    default:\n      return 'bg-gray-100 text-gray-800'\n  }\n}\n\nconst formatTime = (timestamp: string) => {\n  return new Date(timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n}\n\nconst formatChatTime = (timestamp: string) => {\n  const date = new Date(timestamp)\n  const now = new Date()\n  const diff = now.getTime() - date.getTime()\n  \n  if (diff < 60000) return 'Just now'\n  if (diff < 3600000) return `${Math.floor(diff / 60000)}m ago`\n  if (diff < 86400000) return `${Math.floor(diff / 3600000)}h ago`\n  return date.toLocaleDateString()\n}\n\nconst toggleSidebar = () => {\n  showSidebar.value = !showSidebar.value\n}\n\nconst toggleExpertPanel = () => {\n  showExpertPanel.value = !showExpertPanel.value\n}\n\nconst toggleAttachment = () => {\n  showAttachmentOptions.value = !showAttachmentOptions.value\n}\n\nconst startNewChat = () => {\n  selectedChat.value = null\n  currentMessage.value = ''\n  newChatSubject.value = ''\n  showSidebar.value = false\n  messageInput.value?.focus()\n}\n\nconst selectChat = (chat: any) => {\n  selectedChat.value = chat\n  showSidebar.value = false\n  scrollToBottom()\n}\n\nconst handleEnterKey = (event: KeyboardEvent) => {\n  if (event.shiftKey) return\n  sendMessage()\n}\n\nconst sendMessage = async () => {\n  if (!canSendMessage.value) return\n  \n  try {\n    const messageContent = currentMessage.value.trim()\n    \n    // Create new chat if none selected\n    if (!selectedChat.value) {\n      const newChat = {\n        id: Date.now().toString(),\n        title: messageContent.substring(0, 50) + (messageContent.length > 50 ? '...' : ''),\n        subject: newChatSubject.value || 'General',\n        status: 'processing',\n        messages: [],\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        lastMessage: messageContent\n      }\n      \n      chatHistory.value.unshift(newChat)\n      selectedChat.value = newChat\n    }\n    \n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      content: messageContent,\n      type: 'text',\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    }\n    \n    selectedChat.value.messages.push(userMessage)\n    selectedChat.value.lastMessage = messageContent\n    selectedChat.value.updatedAt = new Date().toISOString()\n    \n    // Clear input\n    currentMessage.value = ''\n    newChatSubject.value = ''\n    showAttachmentOptions.value = false\n    \n    // Show typing indicator\n    isTyping.value = true\n    selectedChat.value.status = 'processing'\n    \n    // Submit question to backend\n    const questionsStore = useQuestionsStore()\n    const response = await questionsStore.submitQuestion(\n      messageContent,\n      selectedChat.value.subject,\n      authStore.user!.id,\n      'text'\n    )\n    \n    if (response.success) {\n      // Process with AI\n      const api = useApi()\n      let aiResponse\n      try {\n        aiResponse = await api.processWithAI(response.data.id)\n      } catch (err) {\n        console.error('Error processing with AI:', err)\n        toast.error('AI processing failed. Please try again later.')\n        isTyping.value = false\n        selectedChat.value.status = 'failed'\n        return\n      }\n\n      if (aiResponse && aiResponse.success && aiResponse.data && aiResponse.data.response) {\n        // Add AI response to chat\n        const aiMessage = {\n          id: Date.now() + 1,\n          content: aiResponse.data.response,\n          type: 'text',\n          sender: 'ai',\n          timestamp: new Date().toISOString(),\n          status: 'ai_responded'\n        }\n        \n        selectedChat.value.messages.push(aiMessage)\n        selectedChat.value.status = 'expert_review'\n        isTyping.value = false\n        \n        // Add system message about expert review\n        const systemMessage = {\n          id: Date.now() + 1.5,\n          content: `📋 Your question has been sent to our ${selectedChat.value.subject} expert for review. You'll receive the final answer once it's approved.`,\n          type: 'text',\n          sender: 'system',\n          timestamp: new Date().toISOString(),\n          status: 'processing'\n        }\n        \n        selectedChat.value.messages.push(systemMessage)\n        \n        toast.success('Question submitted successfully!')\n      } else {\n        throw new Error(aiResponse.message || 'Failed to process with AI')\n      }\n    } else {\n      throw new Error(response.message || 'Failed to submit question')\n    }\n    \n    scrollToBottom()\n  } catch (error) {\n    console.error('Error sending message:', error)\n    toast.error('Failed to send message')\n    isTyping.value = false\n    selectedChat.value.status = 'failed'\n  }\n}\n\nconst selectImage = () => {\n  fileInput.value?.click()\n}\n\nconst selectFile = () => {\n  toast.info('File upload coming soon')\n}\n\nconst handleFileUpload = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  const file = target.files?.[0]\n  \n  if (file) {\n    toast.success(`File \"${file.name}\" uploaded successfully`)\n  }\n}\n\nconst handleLogout = async () => {\n  await authStore.logout()\n  chatHistory.value = []\n  selectedChat.value = null\n}\n\nconst handleLogin = async () => {\n  try {\n    await authStore.login(loginForm.value.email, loginForm.value.password)\n    showLoginModal.value = false\n    toast.success('Login successful!')\n    \n    // Reset form\n    loginForm.value = { email: '', password: '' }\n    \n    // Load user's chat history\n    await loadUserChatHistory()\n  } catch (error) {\n    console.error('Login error:', error)\n    toast.error('Login failed. Please check your credentials.')\n  }\n}\n\nconst handleSignup = async () => {\n  try {\n    await authStore.register(\n      signupForm.value.email,\n      signupForm.value.password,\n      `${signupForm.value.firstName} ${signupForm.value.lastName}`,\n      signupForm.value.role as any\n    )\n    showLoginModal.value = false\n    toast.success('Account created successfully!')\n    \n    // Reset form\n    signupForm.value = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      role: ''\n    }\n    \n    // Load user's chat history\n    await loadUserChatHistory()\n  } catch (error) {\n    console.error('Signup error:', error)\n    toast.error('Signup failed. Please try again.')\n  }\n}\n\nconst loginWithDemo = async (role: string) => {\n  try {\n    const credentials = {\n      client: { email: 'client@demo.com', password: 'demo123' },\n      expert: { email: 'expert@demo.com', password: 'demo123' },\n      admin: { email: 'admin@demo.com', password: 'demo123' }\n    }\n    \n    const creds = credentials[role as keyof typeof credentials]\n    await authStore.login(creds.email, creds.password)\n    \n    showLoginModal.value = false\n    toast.success(`Welcome! Logged in as ${role}`)\n    \n    // Load demo data based on role\n    if (role === 'client') {\n      chatHistory.value = [\n        {\n          id: '1',\n          title: 'What is the derivative of x²?',\n          subject: 'Mathematics',\n          status: 'completed',\n          messages: [\n            {\n              id: '1-1',\n              content: 'What is the derivative of x²?',\n              type: 'text',\n              sender: 'user',\n              timestamp: new Date(Date.now() - 3600000).toISOString()\n            },\n            {\n              id: '1-2',\n              content: 'The derivative of x² is 2x. This follows from the power rule of differentiation.',\n              type: 'text',\n              sender: 'expert',\n              timestamp: new Date(Date.now() - 3500000).toISOString(),\n              status: 'approved'\n            }\n          ],\n          createdAt: new Date(Date.now() - 3600000).toISOString(),\n          updatedAt: new Date(Date.now() - 3500000).toISOString(),\n          lastMessage: 'The derivative of x² is 2x...'\n        }\n      ]\n    } else if (role === 'expert') {\n      // Expert sees pending reviews in their panel\n      chatHistory.value = []\n    }\n  } catch (error) {\n    toast.error('Demo login failed')\n  }\n}\n\nconst loadUserChatHistory = async () => {\n  try {\n    if (authStore.isAuthenticated && authStore.user) {\n      const api = useApi()\n      const response = await api.getQuestions(authStore.user.id)\n      \n      if (response.success && response.data) {\n        chatHistory.value = response.data.map((question: any) => ({\n          id: question.question_id,\n          title: question.content.substring(0, 50) + (question.content.length > 50 ? '...' : ''),\n          subject: question.subject,\n          status: question.status,\n          messages: question.messages || [],\n          createdAt: question.created_at,\n          updatedAt: question.updated_at || question.created_at,\n          lastMessage: question.content.substring(0, 100) + (question.content.length > 100 ? '...' : '')\n        }))\n      }\n    }\n  } catch (error) {\n    console.error('Error loading chat history:', error)\n  }\n}\n\nconst scrollToBottom = () => {\n  if (messagesContainer.value) {\n    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight\n  }\n}\n\n// WebSocket connection for real-time updates\nlet wsConnection: WebSocket | null = null\n\nconst handleNewQuestion = (payload: any) => {\n  // Add new question to chat history if it belongs to current user\n  if (payload.userId === authStore.user?.id) {\n    const newChat = {\n      id: payload.id,\n      title: payload.content.substring(0, 50) + (payload.content.length > 50 ? '...' : ''),\n      subject: payload.subject,\n      status: payload.status,\n      messages: [{\n        id: payload.id + '-msg',\n        content: payload.content,\n        type: 'text',\n        sender: 'user',\n        timestamp: payload.createdAt\n      }],\n      createdAt: payload.createdAt,\n      updatedAt: payload.createdAt,\n      lastMessage: payload.content\n    }\n    \n    chatHistory.value.unshift(newChat)\n  }\n}\n\nconst initializeWebSocket = () => {\n  if (!authStore.isAuthenticated) return\n  \n  const api = useApi()\n  wsConnection = api.connectWebSocket(\n    (data) => {\n      // Handle real-time updates\n      switch (data.type) {\n        case 'question_status_update':\n          handleQuestionStatusUpdate(data.payload)\n          break\n        case 'expert_review_update':\n          handleExpertReviewUpdate(data.payload)\n          break\n        case 'new_question':\n          handleNewQuestion(data.payload)\n          break\n      }\n    },\n    (error) => {\n      console.error('WebSocket error:', error)\n    }\n  )\n}\n\nconst handleQuestionStatusUpdate = (payload: any) => {\n  // Update chat status in real-time\n  if (selectedChat.value && selectedChat.value.id === payload.questionId) {\n    selectedChat.value.status = payload.status\n  }\n  \n  // Update chat history\n  const chat = chatHistory.value.find(c => c.id === payload.questionId)\n  if (chat) {\n    chat.status = payload.status\n    chat.updatedAt = new Date().toISOString()\n  }\n}\n\nconst handleExpertReviewUpdate = (payload: any) => {\n  // Update expert panel in real-time\n  if (authStore.hasRole('expert')) {\n    // Refresh expert panel\n    const expertPanel = document.querySelector('.expert-panel')\n    if (expertPanel) {\n      // Fallback: just fetch questions to refresh expert panel\n      if (questionsStore && typeof questionsStore.fetchQuestions === \"function\") {\n        questionsStore.fetchQuestions(authStore.user?.id)\n      }\n    }\n  }\n}\n\n// Initialize app\nonMounted(async () => {\n  try {\n    await authStore.initializeAuth()\n    \n    if (authStore.isAuthenticated) {\n      await questionsStore.fetchQuestions(authStore.user?.id)\n      initializeWebSocket()\n    }\n  } catch (error) {\n    console.error('App initialization error:', error)\n  } finally {\n    isLoading.value = false\n  }\n})\n\n// Cleanup WebSocket on unmount\nonUnmounted(() => {\n  if (wsConnection) {\n    wsConnection.close()\n  }\n})\n\n// Meta tags\nuseHead({\n  title: 'AL-Tech Academy Q&A System',\n  meta: [\n    { name: 'description', content: 'AI-Powered Q&A System for AL-Tech Academy' },\n    { name: 'viewport', content: 'width=device-width, initial-scale=1' }\n  ]\n})\n\n// SEO\nuseSeoMeta({\n  title: 'AL-Tech Academy Q&A System',\n  ogTitle: 'AL-Tech Academy Q&A System',\n  description: 'AI-Powered Q&A System for AL-Tech Academy',\n  ogDescription: 'AI-Powered Q&A System for AL-Tech Academy',\n  ogImage: '/og-image.jpg',\n  twitterCard: 'summary_large_image'\n})\n</script>\n\n<style>\n@import '~/assets/css/main.css';\n</style>","<template>\n  <ErrorTemplate v-bind=\"{ statusCode, statusMessage, description, stack }\" />\n</template>\n\n<script setup>\nimport { defineAsyncComponent } from \"vue\";\nconst props = defineProps({\n  error: Object\n});\nconst _error = props.error;\nconst stacktrace = _error.stack ? _error.stack.split(\"\\n\").splice(1).map((line) => {\n  const text = line.replace(\"webpack:/\", \"\").replace(\".vue\", \".js\").trim();\n  return {\n    text,\n    internal: line.includes(\"node_modules\") && !line.includes(\".cache\") || line.includes(\"internal\") || line.includes(\"new Promise\")\n  };\n}).map((i) => `<span class=\"stack${i.internal ? \" internal\" : \"\"}\">${i.text}</span>`).join(\"\\n\") : \"\";\nconst statusCode = Number(_error.statusCode || 500);\nconst is404 = statusCode === 404;\nconst statusMessage = _error.statusMessage ?? (is404 ? \"Page Not Found\" : \"Internal Server Error\");\nconst description = _error.message || _error.toString();\nconst stack = import.meta.dev && !is404 ? _error.description || `<pre>${stacktrace}</pre>` : void 0;\nconst _Error404 = defineAsyncComponent(() => import(\"./error-404.vue\"));\nconst _Error = import.meta.dev ? defineAsyncComponent(() => import(\"./error-dev.vue\")) : defineAsyncComponent(() => import(\"./error-500.vue\"));\nconst ErrorTemplate = is404 ? _Error404 : _Error;\n</script>\n","<template>\n  <Suspense @resolve=\"onResolve\">\n    <div v-if=\"abortRender\" />\n    <ErrorComponent\n      v-else-if=\"error\"\n      :error=\"error\"\n    />\n    <IslandRenderer\n      v-else-if=\"islandContext\"\n      :context=\"islandContext\"\n    />\n    <component\n      :is=\"SingleRenderer\"\n      v-else-if=\"SingleRenderer\"\n    />\n    <AppComponent v-else />\n  </Suspense>\n</template>\n\n<script setup>\nimport { defineAsyncComponent, onErrorCaptured, onServerPrefetch, provide } from \"vue\";\nimport { useNuxtApp } from \"../nuxt\";\nimport { isNuxtError, showError, useError } from \"../composables/error\";\nimport { useRoute, useRouter } from \"../composables/router\";\nimport { PageRouteSymbol } from \"../components/injections\";\nimport AppComponent from \"#build/app-component.mjs\";\nimport ErrorComponent from \"#build/error-component.mjs\";\nimport { componentIslands } from \"#build/nuxt.config.mjs\";\nconst IslandRenderer = import.meta.server && componentIslands ? defineAsyncComponent(() => import(\"./island-renderer\").then((r) => r.default || r)) : () => null;\nconst nuxtApp = useNuxtApp();\nconst onResolve = nuxtApp.deferHydration();\nif (import.meta.client && nuxtApp.isHydrating) {\n  const removeErrorHook = nuxtApp.hooks.hookOnce(\"app:error\", onResolve);\n  useRouter().beforeEach(removeErrorHook);\n}\nconst url = import.meta.server ? nuxtApp.ssrContext.url : window.location.pathname;\nconst SingleRenderer = import.meta.test && import.meta.dev && import.meta.server && url.startsWith(\"/__nuxt_component_test__/\") && defineAsyncComponent(() => import(\"#build/test-component-wrapper.mjs\").then((r) => r.default(import.meta.server ? url : window.location.href)));\nprovide(PageRouteSymbol, useRoute());\nconst results = nuxtApp.hooks.callHookWith((hooks) => hooks.map((hook) => hook()), \"vue:setup\");\nif (import.meta.dev && results && results.some((i) => i && \"then\" in i)) {\n  console.error(\"[nuxt] Error in `vue:setup`. Callbacks must be synchronous.\");\n}\nconst error = useError();\nconst abortRender = import.meta.server && error.value && !nuxtApp.ssrContext.error;\nconst BOT_RE = /bot\\b|chrome-lighthouse|facebookexternalhit|google\\b/i;\nonErrorCaptured((err, target, info) => {\n  nuxtApp.hooks.callHook(\"vue:error\", err, target, info).catch((hookError) => console.error(\"[nuxt] Error in `vue:error` hook\", hookError));\n  if (import.meta.client && BOT_RE.test(navigator.userAgent)) {\n    nuxtApp.hooks.callHook(\"app:error\", err);\n    console.error(`[nuxt] Not rendering error page for bot with user agent \\`${navigator.userAgent}\\`:`, err);\n    return false;\n  }\n  if (import.meta.server || isNuxtError(err) && (err.fatal || err.unhandled)) {\n    const p = nuxtApp.runWithContext(() => showError(err));\n    onServerPrefetch(() => p);\n    return false;\n  }\n});\nconst islandContext = import.meta.server && nuxtApp.ssrContext.islandContext;\n</script>\n","import { createApp, createSSRApp, nextTick } from \"vue\";\nimport \"#build/fetch.mjs\";\nimport \"#build/global-polyfills.mjs\";\nimport { applyPlugins, createNuxtApp } from \"./nuxt.js\";\nimport { createError } from \"./composables/error.js\";\nimport \"#build/css\";\nimport plugins from \"#build/plugins\";\nimport RootComponent from \"#build/root-component.mjs\";\nimport { appId, appSpaLoaderAttrs, multiApp, spaLoadingTemplateOutside, vueAppRootContainer } from \"#build/nuxt.config.mjs\";\nlet entry;\nif (import.meta.server) {\n  entry = async function createNuxtAppServer(ssrContext) {\n    const vueApp = createApp(RootComponent);\n    const nuxt = createNuxtApp({ vueApp, ssrContext });\n    try {\n      await applyPlugins(nuxt, plugins);\n      await nuxt.hooks.callHook(\"app:created\", vueApp);\n    } catch (error) {\n      await nuxt.hooks.callHook(\"app:error\", error);\n      nuxt.payload.error ||= createError(error);\n    }\n    if (ssrContext?._renderResponse) {\n      throw new Error(\"skipping render\");\n    }\n    return vueApp;\n  };\n}\nif (import.meta.client) {\n  if (import.meta.dev && import.meta.webpackHot) {\n    import.meta.webpackHot.accept();\n  }\n  let vueAppPromise;\n  entry = async function initApp() {\n    if (vueAppPromise) {\n      return vueAppPromise;\n    }\n    const isSSR = Boolean(\n      (multiApp ? window.__NUXT__?.[appId] : window.__NUXT__)?.serverRendered ?? (multiApp ? document.querySelector(`[data-nuxt-data=\"${appId}\"]`) : document.getElementById(\"__NUXT_DATA__\"))?.dataset.ssr === \"true\"\n    );\n    const vueApp = isSSR ? createSSRApp(RootComponent) : createApp(RootComponent);\n    const nuxt = createNuxtApp({ vueApp });\n    async function handleVueError(error) {\n      await nuxt.callHook(\"app:error\", error);\n      nuxt.payload.error ||= createError(error);\n    }\n    vueApp.config.errorHandler = handleVueError;\n    nuxt.hook(\"app:suspense:resolve\", () => {\n      if (vueApp.config.errorHandler === handleVueError) {\n        vueApp.config.errorHandler = void 0;\n      }\n    });\n    if (spaLoadingTemplateOutside && !isSSR && appSpaLoaderAttrs.id) {\n      nuxt.hook(\"app:suspense:resolve\", () => {\n        document.getElementById(appSpaLoaderAttrs.id)?.remove();\n      });\n    }\n    try {\n      await applyPlugins(nuxt, plugins);\n    } catch (err) {\n      handleVueError(err);\n    }\n    try {\n      await nuxt.hooks.callHook(\"app:created\", vueApp);\n      await nuxt.hooks.callHook(\"app:beforeMount\", vueApp);\n      vueApp.mount(vueAppRootContainer);\n      await nuxt.hooks.callHook(\"app:mounted\", vueApp);\n      await nextTick();\n    } catch (err) {\n      handleVueError(err);\n    }\n    return vueApp;\n  };\n  vueAppPromise = entry().catch((error) => {\n    console.error(\"Error while mounting app:\", error);\n    throw error;\n  });\n}\nexport default (ssrContext) => entry(ssrContext);\n"],"names":["$fetch","plugin","provide","plugins","createH3Error","createRadixRouter","baseURL","index","createError","headCore","seoMeta","MutationType","store","$reset","options","plugin_vue3_CQ_pO3THrTGIeYc0dvC91V75hY8qpo9B_8yZzOW5SFs","_getIcon","_loadIcon","Iconify","UserRole","QuestionStatus","_ssrRenderAttrs","_mergeProps","_ssrRenderList","_unref","_ssrInterpolate","_ssrRenderClass","_ssrRenderAttr","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderComponent","ErrorComponent","RootComponent"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,22,23,24,26,28,29,30,31,39,40,41]}